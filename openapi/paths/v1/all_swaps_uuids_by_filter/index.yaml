/api/v2/method:
  post:
    operationId: all_swaps_uuids_by_filter
    summary: 'Komodo DeFi Framework Method: All Swaps UUIDs by Filter'
    description: The all_swaps_uuids_by_filter method returns all uuids of swaps that
      match the selected filters.
    tags:
    - Komodo DeFi Framework API V2
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              method:
                type: string
                enum:
                - all_swaps_uuids_by_filter
                description: The method name
              userpass:
                type: string
                description: RPC password for authentication
                example: RPC_UserP@SSW0RD
              mmrpc:
                type: string
                enum:
                - '2.0'
                description: The JSON-RPC version
                example: '2.0'
              params:
                type: object
                properties:
                  from_timestamp:
                    description: return only swaps that match the `swap.started_at
                      >= request.from_timestamp` condition
                    type: number
                    enum:
                    - swap.started_at >= request.from_timestamp
                    example: swap.started_at >= request.from_timestamp
                  my_coin:
                    description: return only swaps that match the `swap.my_coin =
                      request.my_coin` condition
                    type: string
                    enum:
                    - swap.my_coin = request.my_coin
                    example: swap.my_coin = request.my_coin
                  other_coin:
                    description: return only swaps that match the `swap.other_coin
                      = request.other_coin` condition
                    type: string
                    enum:
                    - swap.other_coin = request.other_coin
                    example: swap.other_coin = request.other_coin
                  to_timestamp:
                    description: return only swaps that match the `swap.started_at
                      < request.to_timestamp` condition
                    type: number
                    enum:
                    - swap.started_at < request.to_timestamp
                    example: swap.started_at < request.to_timestamp
            required:
            - method
            - userpass
            - mmrpc
            - params
    responses:
      '200':
        description: Success
        content:
          application/json:
            schema:
              type: object
              properties:
                mmrpc:
                  type: string
                  enum:
                  - '2.0'
                  description: The JSON-RPC version
                result:
                  type: object
                  properties:
                    found_records:
                      type: number
                      description: the number of found uuids
                    from_timestamp:
                      type: number
                      description: from\_timestamp that was set in request
                    my_coin:
                      type: string
                      description: my\_coin that was set in request
                    other_coin:
                      type: string
                      description: other\_coin that was set in request
                    records_found:
                      type: number
                      description: the number of found uuids
                    to_timestamp:
                      type: number
                      description: to\_timestamp that was set in request
                    uuids:
                      type: string
                      description: uuids of swaps that match the selected filters
                  description: The response result
                id:
                  type:
                  - integer
                  - string
                  - 'null'
                  description: The request ID
      '400':
        description: Bad request
      '500':
        description: Internal server error
