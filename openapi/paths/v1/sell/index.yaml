/api/v2/method:
  post:
    operationId: sell
    summary: 'Komodo DeFi Framework Method: Sell'
    description: The sell method issues a sell request and attempts to match an order
      from the orderbook based on the provided arguments.
    tags:
    - Komodo DeFi Framework API V2
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              method:
                type: string
                enum:
                - sell
                description: The method name
              userpass:
                type: string
                description: RPC password for authentication
                example: RPC_UserP@SSW0RD
              mmrpc:
                type: string
                enum:
                - '2.0'
                description: The JSON-RPC version
                example: '2.0'
              params:
                type: object
                properties:
                  base:
                    description: The name of the coin the user desires to sell
                    type: string
                    default: '-'
                  rel:
                    description: The name of the coin the user desires to receive
                    type: string
                    default: '-'
                  price:
                    description: The amount of `rel` coins the user wants to receive
                      for each unit of the `base` coin spent.
                    type: string
                    enum:
                    - base
                    - rel
                    example: base
                    default: '-'
                  volume:
                    description: 'The maximum amount of `base` coin available for
                      sale in the order, ignored if max is `true`; the following values
                      must be greater than or equal to the `min_trading_vol` of the
                      corresponding coin: <ul><li>the argument `volume`</li><li>the
                      product of the arguments `volume` and `price`</li></ul>'
                    type: string
                    enum:
                    - volume
                    - price
                    - base
                    - min_trading_vol
                    - 'true'
                    example: volume
                    default: '-'
                  base_confs:
                    description: Number of required blockchain confirmations for base
                      coin atomic swap transaction; default to base coin configuration
                      if not set
                    type: integer
                    default: '-'
                  base_nota:
                    description: Whether dPoW notarization is required for base coin
                      atomic swap transaction; default to base coin configuration
                      if not set
                    type: boolean
                    default: '-'
                  match_by:
                    $ref: '#/components/schemas/MatchBy'
                    description: Optional. A standard [MatchBy](/komodo-defi-framework/api/common_structures/orders/#match-by)
                      object, to filter to include only matches by pubkey or uuid.
                      *Important:* This condition is not applied after a `GoodTillCancelled`
                      order is converted to a `maker` request.
                  min_volume:
                    $ref: '#/components/schemas/RationalValue'
                    description: 'The amount of `base` coin that will be used as `min_volume`
                      of `GoodTillCancelled` order after conversion to maker; the
                      following values must be greater than or equal to the `min_trading_vol`
                      of the corresponding coin: <ul><li>the argument `min_volume`</li><li>the
                      product of the arguments `min_volume` and `price`</li></ul>.
                      Can be a numeric string, expressed using standard [RationalValue](/komodo-defi-framework/api/common_structures/#rational-value)
                      or [FractionalValue](/komodo-defi-framework/api/common_structures/#fractional-value)
                      objects.'
                  order_type:
                    $ref: '#/components/schemas/OrderType'
                    description: Optional. A standard [OrderType](/komodo-defi-framework/api/common_structures/orders/#order-type)
                      object.
                  rel_confs:
                    description: Number of required blockchain confirmations for rel
                      coin atomic swap transaction; default to rel coin configuration
                      if not set
                    type: integer
                    default: '-'
                  rel_nota:
                    description: Whether dPoW notarization is required for rel coin
                      atomic swap transaction; default to rel coin configuration if
                      not set
                    type: boolean
                    default: '-'
                  save_in_history:
                    description: Defaults to `true`. If set to `false` no order history
                      will be saved (though order status will be temporarily stored
                      while in progress). If `true`, each order's short record history
                      is stored in a local SQLite database table, and when the order
                      is cancelled or fully matched, its history will be saved as
                      a json file
                    type: boolean
                    enum:
                    - 'true'
                    - 'false'
                    example: 'true'
                    default: '`true`'
                required:
                - base
                - rel
                - price
                - volume
            required:
            - method
            - userpass
            - mmrpc
            - params
    responses:
      '200':
        description: Success
        content:
          application/json:
            schema:
              type: object
              properties:
                mmrpc:
                  type: string
                  enum:
                  - '2.0'
                  description: The JSON-RPC version
                result:
                  type: object
                  properties:
                    action:
                      type: string
                      description: The action of the request (`Sell`)
                    base:
                      type: string
                      description: The base currency of the request
                    base_amount:
                      type: string
                      description: The resulting amount of base currency that is sold
                        if the order matches, represented as a decimal value.
                    base_amount_rat:
                      $ref: '#/components/schemas/RationalValue'
                      description: The resulting amount of base currency that is sold
                        if the order matches, represented as a standard [RationalValue](/komodo-defi-framework/api/common_structures/#rational-value)
                        object.
                    base_orderbook_ticker:
                      type: string
                      description: The ticker of the base currency if `orderbook_ticker`
                        is configured for the base currency in `coins` file. If not
                        defined, will return a null value.
                    conf_settings:
                      $ref: '#/components/schemas/ConfSettings'
                      description: A standard [ConfSettings](/komodo-defi-framework/api/common_structures/orders/#conf-settings)
                        object.
                    dest_pub_key:
                      type: string
                      description: Reserved for future use. The `dest_pub_key` allows
                        the user to choose the P2P node that is eligible to match
                        with the request. This value defaults to "zero pubkey", meaning
                        that `anyone` can match
                    match_by:
                      $ref: '#/components/schemas/MatchBy'
                      description: A standard [MatchBy](/komodo-defi-framework/api/common_structures/orders/#match-by)
                        object, to filter to include only matches by pubkey or uuid.
                        *Important:* This condition is not applied after a `GoodTillCancelled`
                        order is converted to a `maker` request.
                    method:
                      type: string
                      description: This field is used for internal P2P interactions;
                        the value is always equal to "request"
                    rel:
                      type: string
                      description: The rel currency of the request
                    rel_amount:
                      type: string
                      description: The minimum amount of `rel` coin that must be received
                        in order to sell the `base_amount` of `base` (according to
                        `price`, in decimal representation)
                    rel_amount_rat:
                      $ref: '#/components/schemas/RationalValue'
                      description: The minimum amount of `rel` coin that must be received
                        in order to sell the `base_amount` of `base` (according to
                        `price`, represented as a standard [RationalValue](/komodo-defi-framework/api/common_structures/#rational-value)
                        object).
                    rel_orderbook_ticker:
                      type: string
                      description: The ticker of the rel currency if `orderbook_ticker`
                        is configured for the rel currency in `coins` file. If not
                        defined, will return a null value.
                    sender_pubkey:
                      type: string
                      description: The public key of our node
                    uuid:
                      type: string
                      description: The request uuid
                  description: The response result
                id:
                  type:
                  - integer
                  - string
                  - 'null'
                  description: The request ID
      '400':
        description: Bad request
      '500':
        description: Internal server error
