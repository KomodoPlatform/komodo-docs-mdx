openapi: 3.0.0
info:
  title: Komodo DeFi Framework - Task API
  version: v2
  description: OpenAPI specification for the task methods.
paths:
  /task::enable_eth:
    post:
      summary: 'Komodo DeFi Framework Method Overview: Enable ETH Task'
      description: This document provides an overview of task managed activation methods
        for EVM coins like ETH, AVAX, BNB, and Polygon.
      operationId: task::enable_eth
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_eth
      responses:
        '200':
          description: Successful response for task::enable_eth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_eth_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_tendermint:
    post:
      summary: 'Komodo DeFi Framework Method Overview: Enable Tendermint Task'
      description: This document provides an overview of task managed activation methods
        for Tendermint coins like ATOM, OSMO, and IRIS.
      operationId: task::enable_tendermint
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_tendermint
      responses:
        '200':
          description: Successful response for task::enable_tendermint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_tendermint_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_utxo:
    post:
      summary: Enable UTXO Task Overview
      description: Overview of task managed activation methods for UTXO coins like
        KMD, LTC, BTC, and DOGE.
      operationId: task::enable_utxo
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_utxo
      responses:
        '200':
          description: Successful response for task::enable_utxo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_utxo_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_bch:
    post:
      summary: Enable BCH Task Overview
      description: Overview of task managed activation methods for BCH and SLP tokens.
      operationId: task::enable_bch
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_bch
      responses:
        '200':
          description: Successful response for task::enable_bch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_bch_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_qtum:
    post:
      summary: Enable QTUM Task Overview
      description: Overview of task managed activation methods for QTUM ecosystem
        coins.
      operationId: task::enable_qtum
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_qtum
      responses:
        '200':
          description: Successful response for task::enable_qtum
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_qtum_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_z_coin:
    post:
      summary: Enable Z Coin Task
      description: Overview of task managed activation methods for ZHTLC coins like
        ARRR & ZOMBIE.
      operationId: task::enable_z_coin
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_z_coin
      responses:
        '200':
          description: Successful response for task::enable_z_coin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_z_coin_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_eth::init:
    post:
      summary: 'Enable ETH Task: Init'
      description: Task managed activation of ETH and EVM tokens.
      operationId: task::enable_eth::init
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_eth::init
      responses:
        '200':
          description: Successful response for task::enable_eth::init
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_eth_init_Response'
              example:
                mmrpc: '2.0'
                result:
                  task_id: 123
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_eth::user_action:
    post:
      summary: 'Enable ETH Task: User Action'
      description: Handle user action (e.g., Trezor PIN entry) for ETH/EVM activation
        task.
      operationId: task::enable_eth::user_action
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_eth::user_action
      responses:
        '200':
          description: Successful response for task::enable_eth::user_action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_eth_user_action_Response'
              example:
                mmrpc: '2.0'
                result:
                  result: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_eth::cancel:
    post:
      summary: task::enable_eth::cancel
      description: Cancel the ETH/EVM activation task before completion.
      operationId: task::enable_eth::cancel
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_eth::cancel
      responses:
        '200':
          description: Successful response for task::enable_eth::cancel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_eth_cancel_Response'
              example:
                mmrpc: '2.0'
                result:
                  result: string_value
                  error: string_value
                  error_path: string_value
                  error_trace: string_value
                  error_type: string_value
                  error_data: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_eth::status:
    post:
      summary: 'Enable ETH Task: Status'
      description: Query the status of ETH/EVM activation task.
      operationId: task::enable_eth::status
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_eth::status
      responses:
        '200':
          description: Successful response for task::enable_eth::status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_eth_status_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_tendermint::init:
    post:
      summary: 'Enable Tendermint Task: Init'
      description: Task managed activation of Tendermint coins.
      operationId: task::enable_tendermint::init
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_tendermint::init
      responses:
        '200':
          description: Successful response for task::enable_tendermint::init
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_tendermint_init_Response'
              example:
                mmrpc: '2.0'
                result:
                  task_id: 123
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_tendermint::user_action:
    post:
      summary: 'Enable Tendermint Task: User Action'
      description: Handle user action (e.g., Trezor PIN entry) for Tendermint activation
        task.
      operationId: task::enable_tendermint::user_action
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_tendermint::user_action
      responses:
        '200':
          description: Successful response for task::enable_tendermint::user_action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_tendermint_user_action_Response'
              example:
                mmrpc: '2.0'
                result:
                  result: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_tendermint::cancel:
    post:
      summary: task::enable_tendermint::cancel
      description: Cancel the Tendermint activation task before completion.
      operationId: task::enable_tendermint::cancel
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_tendermint::cancel
      responses:
        '200':
          description: Successful response for task::enable_tendermint::cancel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_tendermint_cancel_Response'
              example:
                mmrpc: '2.0'
                result:
                  result: string_value
                  error: string_value
                  error_path: string_value
                  error_trace: string_value
                  error_type: string_value
                  error_data: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_tendermint::status:
    post:
      summary: 'Enable Tendermint Task: Status'
      description: Query the status of Tendermint activation task.
      operationId: task::enable_tendermint::status
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_tendermint::status
      responses:
        '200':
          description: Successful response for task::enable_tendermint::status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_tendermint_status_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_utxo::init:
    post:
      summary: 'Enable UTXO Task: Init'
      description: Task managed activation of UTXO coins like KMD, LTC, BTC & DOGE.
      operationId: task::enable_utxo::init
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_utxo::init
                params:
                  type: object
                  properties:
                    activation_params:
                      description: A standard [ActivationParams](/komodo-defi-framework/api/common_structures/activation/#activation-params)
                        object containing activation configuration parameters for
                        UTXO coins.
                      type: object
                      default: '-'
                    priv_key_policy:
                      description: Value can be [PrivKeyActivationPolicyEnum](/komodo-defi-framework/api/common_structures/enums/#priv-key-activation-policy-enum).
                      $ref: '#/components/schemas/priv-key-activation-policy-enum'
                      default: '`ContextPrivKey`'
                    ticker:
                      description: Ticker of the UTXO-based coin you want to enable.
                      type: string
                      default: '-'
                  required:
                  - activation_params
                  - ticker
      responses:
        '200':
          description: Successful response for task::enable_utxo::init
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_utxo_init_Response'
              example:
                mmrpc: '2.0'
                result:
                  task_id: 123
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_utxo::user_action:
    post:
      summary: 'Enable UTXO Task: User Action'
      description: Handle user action (e.g., Trezor PIN entry) for UTXO activation
        task.
      operationId: task::enable_utxo::user_action
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_utxo::user_action
                params:
                  type: object
                  properties:
                    task_id:
                      description: The identifying number returned when initiating
                        the initialisation process.
                      type: integer
                    user_action:
                      description: Object containing the params below
                      type: object
                    user_action.action_type:
                      description: Will be `TrezorPin` for this method
                      type: string
                    user_action.pin:
                      description: When the Trezor device is displaying a grid of
                        numbers for PIN entry, this param will contain your Trezor
                        pin, as mapped through your keyboard numpad. See the image
                        below for more information.
                      type: string
                  required:
                  - task_id
                  - user_action
                  - user_action.action_type
                  - user_action.pin
      responses:
        '200':
          description: Successful response for task::enable_utxo::user_action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_utxo_user_action_Response'
              example:
                mmrpc: '2.0'
                result:
                  result: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_utxo::cancel:
    post:
      summary: 'Enable UTXO Task: Cancel'
      description: Cancel the UTXO activation task before completion.
      operationId: task::enable_utxo::cancel
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_utxo::cancel
                params:
                  type: object
                  properties:
                    task_id:
                      description: The identifying number returned when initiating
                        the enabling process.
                      type: integer
                  required:
                  - task_id
      responses:
        '200':
          description: Successful response for task::enable_utxo::cancel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_utxo_cancel_Response'
              example:
                mmrpc: '2.0'
                result:
                  result: string_value
                  error: string_value
                  error_path: string_value
                  error_trace: string_value
                  error_type: string_value
                  error_data: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_utxo::status:
    post:
      summary: 'Enable UTXO Task: Status'
      description: Query the status of UTXO activation task.
      operationId: task::enable_utxo::status
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_utxo::status
                params:
                  type: object
                  properties:
                    forget_if_finished:
                      description: If false, will return final response for completed
                        tasks.
                      type: boolean
                      default: '`true`'
                    task_id:
                      description: The identifying number returned when initiating
                        the initialisation process.
                      type: integer
                      default: '-'
                  required:
                  - task_id
      responses:
        '200':
          description: Successful response for task::enable_utxo::status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_utxo_status_Response'
              example:
                mmrpc: '2.0'
                result:
                  status: string_value
                  details: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_bch::init:
    post:
      summary: 'Enable BCH Task: Init'
      description: Task managed activation of BCH and SLP tokens.
      operationId: task::enable_bch::init
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_bch::init
      responses:
        '200':
          description: Successful response for task::enable_bch::init
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_bch_init_Response'
              example:
                mmrpc: '2.0'
                result:
                  task_id: 123
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_bch::user_action:
    post:
      summary: 'Enable BCH Task: User Action'
      description: Handle user action (e.g., Trezor PIN entry) for BCH/SLP activation
        task.
      operationId: task::enable_bch::user_action
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_bch::user_action
      responses:
        '200':
          description: Successful response for task::enable_bch::user_action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_bch_user_action_Response'
              example:
                mmrpc: '2.0'
                result:
                  result: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_bch::cancel:
    post:
      summary: task::enable_bch::cancel
      description: Cancel the BCH/SLP activation task before completion.
      operationId: task::enable_bch::cancel
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_bch::cancel
      responses:
        '200':
          description: Successful response for task::enable_bch::cancel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_bch_cancel_Response'
              example:
                mmrpc: '2.0'
                result:
                  result: string_value
                  error: string_value
                  error_path: string_value
                  error_trace: string_value
                  error_type: string_value
                  error_data: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_bch::status:
    post:
      summary: 'Enable BCH Task: Status'
      description: Query the status of BCH/SLP activation task.
      operationId: task::enable_bch::status
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_bch::status
      responses:
        '200':
          description: Successful response for task::enable_bch::status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_bch_status_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_qtum::init:
    post:
      summary: 'Enable QTUM Task: Init'
      description: Task managed activation of QTUM and QRC20 tokens.
      operationId: task::enable_qtum::init
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_qtum::init
      responses:
        '200':
          description: Successful response for task::enable_qtum::init
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_qtum_init_Response'
              example:
                mmrpc: '2.0'
                result:
                  task_id: 123
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_qtum::user_action:
    post:
      summary: 'Enable QTUM Task: User Action'
      description: Handle user action (e.g., Trezor PIN entry) for QTUM/QRC20 activation
        task.
      operationId: task::enable_qtum::user_action
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_qtum::user_action
      responses:
        '200':
          description: Successful response for task::enable_qtum::user_action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_qtum_user_action_Response'
              example:
                mmrpc: '2.0'
                result:
                  result: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_qtum::cancel:
    post:
      summary: task::enable_qtum::cancel
      description: Cancel the QTUM activation task.
      operationId: task::enable_qtum::cancel
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_qtum::cancel
      responses:
        '200':
          description: Successful response for task::enable_qtum::cancel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_qtum_cancel_Response'
              example:
                mmrpc: '2.0'
                result:
                  result: string_value
                  error: string_value
                  error_path: string_value
                  error_trace: string_value
                  error_type: string_value
                  error_data: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_qtum::status:
    post:
      summary: 'Enable QTUM Task: Status'
      description: Query the status of QTUM/QRC20 activation task.
      operationId: task::enable_qtum::status
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_qtum::status
      responses:
        '200':
          description: Successful response for task::enable_qtum::status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_qtum_status_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_z_coin::init:
    post:
      summary: 'Enable Z Coin Task: Init'
      description: Task managed activation of ZHTLC coins like ARRR & ZOMBIE.
      operationId: task::enable_z_coin::init
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_z_coin::init
                params:
                  type: object
                  properties:
                    activation_params:
                      description: A standard [ActivationRpcData](/komodo-defi-framework/api/common_structures/activation/#activation-rpc-data)
                        object.
                      type: object
                    ticker:
                      description: Ticker of coin to activate
                      type: string
                  required:
                  - activation_params
                  - ticker
      responses:
        '200':
          description: Successful response for task::enable_z_coin::init
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_z_coin_init_Response'
              example:
                mmrpc: '2.0'
                result:
                  task_id: 123
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_z_coin::user_action:
    post:
      summary: 'Enable Z Coin Task: User Action'
      description: Handle user action (e.g., Trezor PIN entry) for ZHTLC coin activation
        task.
      operationId: task::enable_z_coin::user_action
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_z_coin::user_action
                params:
                  type: object
                  properties:
                    task_id:
                      description: The identifying number returned when initiating
                        the initialisation process.
                      type: integer
                    user_action:
                      description: Object containing the params below
                      type: object
                    user_action.action_type:
                      description: Will be `TrezorPin` for this method
                      type: string
                    user_action.pin:
                      description: When the Trezor device is displaying a grid of
                        numbers for PIN entry, this param will contain your Trezor
                        pin, as mapped through your keyboard numpad. See the image
                        below for more information.
                      type: string
                  required:
                  - task_id
                  - user_action
                  - user_action.action_type
                  - user_action.pin
      responses:
        '200':
          description: Successful response for task::enable_z_coin::user_action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_z_coin_user_action_Response'
              example:
                mmrpc: '2.0'
                result:
                  result: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_z_coin::cancel:
    post:
      summary: 'Enable Z Coin Task: Cancel'
      description: Cancel the ZHTLC coin activation task before completion.
      operationId: task::enable_z_coin::cancel
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_z_coin::cancel
                params:
                  type: object
                  properties:
                    task_id:
                      description: The identifying number returned when initiating
                        the enabling process.
                      type: integer
                  required:
                  - task_id
      responses:
        '200':
          description: Successful response for task::enable_z_coin::cancel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_z_coin_cancel_Response'
              example:
                mmrpc: '2.0'
                result:
                  result: string_value
                  error: string_value
                  error_path: string_value
                  error_trace: string_value
                  error_type: string_value
                  error_data: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_z_coin::status:
    post:
      summary: 'Enable Z Coin Task: Status'
      description: Query the status of ZHTLC coin activation task.
      operationId: task::enable_z_coin::status
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_z_coin::status
                params:
                  type: object
                  properties:
                    forget_if_finished:
                      description: If false, will return final response for completed
                        tasks.
                      type: boolean
                      default: '`true`'
                    task_id:
                      description: The identifying number returned when initiating
                        the initialisation process.
                      type: integer
                      default: '-'
                  required:
                  - task_id
      responses:
        '200':
          description: Successful response for task::enable_z_coin::status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_z_coin_status_Response'
              example:
                mmrpc: '2.0'
                result:
                  status: string_value
                  details: {}
                  Parameter: {}
                  '---------------': {}
                  current_block: 123
                  ticker: string_value
                  wallet_balance: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_lightning::init:
    post:
      summary: Initialize Lightning Activation Task
      description: Request a task to initialize a lightning node on the Komodo DeFi
        Framework.
      operationId: task::enable_lightning::init
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_lightning::init
      responses:
        '200':
          description: Successful response for task::enable_lightning::init
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_lightning_init_Response'
              example:
                mmrpc: '2.0'
                result:
                  task_id: 123
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_lightning::cancel:
    post:
      summary: Cancel Lightning Activation Task
      description: Cancel the initialization of a lightning node on the Komodo DeFi
        Framework.
      operationId: task::enable_lightning::cancel
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_lightning::cancel
                params:
                  type: object
                  properties:
                    task_id:
                      description: The task id returned from `task::enable_lightning::init`
                      type: integer
                  required:
                  - task_id
      responses:
        '200':
          description: Successful response for task::enable_lightning::cancel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_lightning_cancel_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::enable_lightning::status:
    post:
      summary: Check Lightning Activation Status
      description: Check the status of a lightning node initialization task on the
        Komodo DeFi Framework.
      operationId: task::enable_lightning::status
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::enable_lightning::status
      responses:
        '200':
          description: Successful response for task::enable_lightning::status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_enable_lightning_status_Response'
              example:
                mmrpc: '2.0'
                result:
                  platform_coin: string_value
                  address: string_value
                  balance: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::wallet::task_managed:
    post:
      summary: Task Managed Wallet Methods Overview
      description: Overview of task managed wallet methods in the Komodo DeFi Framework
        API.
      operationId: task::wallet::task_managed
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::wallet::task_managed
      responses:
        '200':
          description: Successful response for task::wallet::task_managed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_wallet_task_managed_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::get_new_address:
    post:
      summary: Get New Address Task
      description: Overview of get new address task-managed methods in the Komodo
        DeFi Framework API.
      operationId: task::get_new_address
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::get_new_address
      responses:
        '200':
          description: Successful response for task::get_new_address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_get_new_address_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::account_balance:
    post:
      summary: Account Balance Task
      description: Overview of account balance task-managed methods in the Komodo
        DeFi Framework API.
      operationId: task::account_balance
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::account_balance
      responses:
        '200':
          description: Successful response for task::account_balance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_account_balance_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::create_new_account:
    post:
      summary: Create New Account Task
      description: Overview of create new account task-managed methods in the Komodo
        DeFi Framework API.
      operationId: task::create_new_account
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::create_new_account
      responses:
        '200':
          description: Successful response for task::create_new_account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_create_new_account_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::scan_for_new_addresses:
    post:
      summary: Scan for New Addresses Task
      description: Overview of scan for new addresses task-managed methods in the
        Komodo DeFi Framework API.
      operationId: task::scan_for_new_addresses
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::scan_for_new_addresses
      responses:
        '200':
          description: Successful response for task::scan_for_new_addresses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_scan_for_new_addresses_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::withdraw:
    post:
      summary: Withdraw Task Overview
      description: Overview of withdraw task-managed methods in the Komodo DeFi Framework
        API.
      operationId: task::withdraw
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::withdraw
      responses:
        '200':
          description: Successful response for task::withdraw
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_withdraw_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::get_new_address::init:
    post:
      summary: Initialize Get New Address Task
      description: Generate a new HD address in the Komodo DeFi Framework API.
      operationId: task::get_new_address::init
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::get_new_address::init
                params:
                  type: object
                  properties:
                    account_id:
                      description: Generally this will be `0` unless you have multiple
                        accounts registered on your Trezor
                      type: integer
                      default: '`0`'
                    chain:
                      description: '`Internal`, or `External`. External is used for
                        addresses that are intended to be visible outside of the wallet
                        (e.g. for receiving payments). Internal is used for addresses
                        which are not meant to be visible outside of the wallet and
                        is used to return the leftover change from a transaction.'
                      type: string
                      default: '`"External"`'
                    coin:
                      description: The ticker of the coin you want to get a new address
                        for
                      type: string
                      default: '`-`'
                    gap_limit:
                      description: The maximum number of empty addresses in a row.
                        Defaults to the value provided on activation or 20 if no value
                        was provided
                      type: integer
                      default: '`20`'
                  required:
                  - coin
      responses:
        '200':
          description: Successful response for task::get_new_address::init
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_get_new_address_init_Response'
              example:
                mmrpc: '2.0'
                result:
                  new_address: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::get_new_address::user_action:
    post:
      summary: 'Get New Address Task: User Action'
      description: Send user action (PIN) to the Trezor device during HD address creation
        in the Komodo DeFi Framework API.
      operationId: task::get_new_address::user_action
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::get_new_address::user_action
                params:
                  type: object
                  properties:
                    task_id:
                      description: The identifying number returned when initiating
                        the initialisation process.
                      type: integer
                    user_action:
                      description: Object containing the params below
                      type: object
                    user_action.action_type:
                      description: Will be `TrezorPin` for this method
                      type: string
                    user_action.pin:
                      description: When the Trezor device is displaying a grid of
                        numbers for PIN entry, this param will contain your Trezor
                        pin, as mapped through your keyboard numpad. See the image
                        below for more information.
                      type: string
                  required:
                  - task_id
                  - user_action
                  - user_action.action_type
                  - user_action.pin
      responses:
        '200':
          description: Successful response for task::get_new_address::user_action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_get_new_address_user_action_Response'
              example:
                mmrpc: '2.0'
                result:
                  result: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::get_new_address::cancel:
    post:
      summary: ancel Get New Address Task
      description: Cancel a HD address creation task in the Komodo DeFi Framework
        API.
      operationId: task::get_new_address::cancel
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::get_new_address::cancel
                params:
                  type: object
                  properties:
                    task_id:
                      description: The identifying number returned when initiating
                        the enabling process.
                      type: integer
                  required:
                  - task_id
      responses:
        '200':
          description: Successful response for task::get_new_address::cancel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_get_new_address_cancel_Response'
              example:
                mmrpc: '2.0'
                result:
                  result: string_value
                  error: string_value
                  error_path: string_value
                  error_trace: string_value
                  error_type: string_value
                  error_data: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::get_new_address::status:
    post:
      summary: Get New Address Task Status
      description: Check the status of a HD address creation task in the Komodo DeFi
        Framework API.
      operationId: task::get_new_address::status
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::get_new_address::status
                params:
                  type: object
                  properties:
                    forget_if_finished:
                      description: If `false`, will return final response for completed
                        tasks.
                      type: boolean
                      default: '`true`'
                    task_id:
                      description: The identifying number returned when initiating
                        the task.
                      type: integer
                      default: '`-`'
                  required:
                  - task_id
      responses:
        '200':
          description: Successful response for task::get_new_address::status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_get_new_address_status_Response'
              example:
                mmrpc: '2.0'
                result:
                  status: string_value
                  details: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::account_balance::init:
    post:
      summary: Initialize Account Balance Task
      description: Initialise an account balance request for HD wallets in the Komodo
        DeFi Framework API.
      operationId: task::account_balance::init
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::account_balance::init
                params:
                  type: object
                  properties:
                    account_index:
                      description: For GUIs, this will be zero. In CLI you can use
                        other values if you [know what you are doing](https://learnmeabitcoin.com/technical/hd-wallets)
                      type: integer
                    coin:
                      description: Ticker of activated coin you want to see addresses
                        and balance for
                      type: string
                  required:
                  - account_index
                  - coin
      responses:
        '200':
          description: Successful response for task::account_balance::init
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_account_balance_init_Response'
              example:
                mmrpc: '2.0'
                result:
                  task_id: 123
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::account_balance::cancel:
    post:
      summary: Cancel Account Balance Task
      description: Cancel an account balance request in the Komodo DeFi Framework
        API.
      operationId: task::account_balance::cancel
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::account_balance::cancel
                params:
                  type: object
                  properties:
                    task_id:
                      description: The identifying number returned when initiating
                        the task.
                      type: integer
                  required:
                  - task_id
      responses:
        '200':
          description: Successful response for task::account_balance::cancel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_account_balance_cancel_Response'
              example:
                mmrpc: '2.0'
                result:
                  error: string_value
                  error_data: string_value
                  error_path: string_value
                  error_trace: string_value
                  error_type: string_value
                  result: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::account_balance::status:
    post:
      summary: Account Balance Task Status
      description: Query the status/response of an account balance request in the
        Komodo DeFi Framework API.
      operationId: task::account_balance::status
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::account_balance::status
                params:
                  type: object
                  properties:
                    forget_if_finished:
                      description: If `false`, will return final response for completed
                        tasks.
                      type: boolean
                      default: '`true`'
                    task_id:
                      description: The identifying number returned when initiating
                        the task.
                      type: integer
                      default: '`-`'
                  required:
                  - task_id
      responses:
        '200':
          description: Successful response for task::account_balance::status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_account_balance_status_Response'
              example:
                mmrpc: '2.0'
                result:
                  current_block: 123
                  ticker: string_value
                  wallet_balance: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::create_new_account::init:
    post:
      summary: Initialize Create New Account Task
      description: Initialize a task to create a new HD account using the Komodo DeFi
        Framework API.
      operationId: task::create_new_account::init
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::create_new_account::init
                params:
                  type: object
                  properties:
                    account_id:
                      description: If not defined, will increment to the next unused
                        account id in the wallet.
                      type: integer
                      default: '-'
                    coin:
                      description: Ticker of coin you would like to initialize a HD
                        account for.
                      type: string
                      default: '-'
                    gap_limit:
                      description: The maximum number of empty addresses in a row.
                        Defaults to the value provided on activation, or `20` if no
                        value was provided.
                      type: integer
                      default: '`20`'
                    scan:
                      description: If `true`, will scan the account for funded addresses.
                      type: boolean
                      default: '`true`'
                  required:
                  - coin
      responses:
        '200':
          description: Successful response for task::create_new_account::init
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_create_new_account_init_Response'
              example:
                mmrpc: '2.0'
                result:
                  task_id: 123
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::create_new_account::user_action:
    post:
      summary: 'Create New Account Task: User Action'
      description: Send user action (PIN) to the Trezor device during HD account creation
        in the Komodo DeFi Framework API.
      operationId: task::create_new_account::user_action
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::create_new_account::user_action
                params:
                  type: object
                  properties:
                    task_id:
                      description: The identifying number returned when initiating
                        the account creation process.
                      type: integer
                    user_action:
                      description: Object containing the params below
                      type: object
                    user_action.action_type:
                      description: Will be `TrezorPin` for this method
                      type: string
                    user_action.pin:
                      description: When the Trezor device is displaying a grid of
                        numbers for PIN entry, this param will contain your Trezor
                        pin, as mapped through your keyboard numpad. See the image
                        below for more information.
                      type: string
                  required:
                  - task_id
                  - user_action
                  - user_action.action_type
                  - user_action.pin
      responses:
        '200':
          description: Successful response for task::create_new_account::user_action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_create_new_account_user_action_Response'
              example:
                mmrpc: '2.0'
                result:
                  result: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::create_new_account::cancel:
    post:
      summary: Cancel Create New Account Task
      description: Cancel a HD account creation task in the Komodo DeFi Framework
        API.
      operationId: task::create_new_account::cancel
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::create_new_account::cancel
                params:
                  type: object
                  properties:
                    task_id:
                      description: The identifying number returned when initiating
                        the account creation process.
                      type: integer
                  required:
                  - task_id
      responses:
        '200':
          description: Successful response for task::create_new_account::cancel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_create_new_account_cancel_Response'
              example:
                mmrpc: '2.0'
                result:
                  result: string_value
                  error: string_value
                  error_path: string_value
                  error_trace: string_value
                  error_type: string_value
                  error_data: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::create_new_account::status:
    post:
      summary: Create New Account Task Status
      description: Query the status of a HD account creation task in the Komodo DeFi
        Framework API.
      operationId: task::create_new_account::status
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::create_new_account::status
                params:
                  type: object
                  properties:
                    forget_if_finished:
                      description: If `false`, will return final response for completed
                        tasks.
                      type: boolean
                      default: '`true`'
                    task_id:
                      description: The identifying number returned when initiating
                        the task.
                      type: integer
                      default: '`-`'
                  required:
                  - task_id
      responses:
        '200':
          description: Successful response for task::create_new_account::status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_create_new_account_status_Response'
              example:
                mmrpc: '2.0'
                result:
                  status: string_value
                  details: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::scan_for_new_addresses::init:
    post:
      summary: Initialize Scan For New Addresses Task
      description: Initiate a scan for new HD addresses in the Komodo DeFi Framework
        API.
      operationId: task::scan_for_new_addresses::init
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::scan_for_new_addresses::init
                params:
                  type: object
                  properties:
                    account_id:
                      description: HD wallets only. Generally this will be `0` unless
                        you have multiple accounts registered on your HD wallet
                      type: integer
                      default: '`0`'
                    coin:
                      description: The ticker of the coin you want to scan addresses
                        for
                      type: string
                      default: '`-`'
                    gap_limit:
                      description: The maximum number of empty addresses in a row.
                        Defaults to the value provided on activation or 20 if no value
                        was provided
                      type: integer
                      default: '`20`'
                  required:
                  - coin
      responses:
        '200':
          description: Successful response for task::scan_for_new_addresses::init
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_scan_for_new_addresses_init_Response'
              example:
                mmrpc: '2.0'
                result:
                  task_id: 123
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::scan_for_new_addresses::cancel:
    post:
      summary: Cancel Scan For New Addresses Task
      description: Cancel a scan for new HD addresses task in the Komodo DeFi Framework
        API.
      operationId: task::scan_for_new_addresses::cancel
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::scan_for_new_addresses::cancel
                params:
                  type: object
                  properties:
                    task_id:
                      description: The identifying number returned when initiating
                        the scan process.
                      type: integer
                  required:
                  - task_id
      responses:
        '200':
          description: Successful response for task::scan_for_new_addresses::cancel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_scan_for_new_addresses_cancel_Response'
              example:
                mmrpc: '2.0'
                result:
                  result: string_value
                  error: string_value
                  error_path: string_value
                  error_trace: string_value
                  error_type: string_value
                  error_data: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::scan_for_new_addresses::status:
    post:
      summary: Scan For New Addresses Task Status
      description: Query the status of a scan for new HD addresses in the Komodo DeFi
        Framework API.
      operationId: task::scan_for_new_addresses::status
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::scan_for_new_addresses::status
                params:
                  type: object
                  properties:
                    forget_if_finished:
                      description: If `false`, will return final response for completed
                        tasks.
                      type: boolean
                      default: '`true`'
                    task_id:
                      description: The identifying number returned when initiating
                        the task.
                      type: integer
                      default: '`-`'
                  required:
                  - task_id
      responses:
        '200':
          description: Successful response for task::scan_for_new_addresses::status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_scan_for_new_addresses_status_Response'
              example:
                mmrpc: '2.0'
                result:
                  status: string_value
                  details: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::withdraw::init:
    post:
      summary: Initialize Withdraw Task
      description: Generate, sign, and return a withdrawal transaction in the Komodo
        DeFi Framework API.
      operationId: task::withdraw::init
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::withdraw::init
                params:
                  type: object
                  properties:
                    amount:
                      description: The amount the user desires to withdraw, ignored
                        when `max=true`
                      type: string
                      default: '`-`'
                    coin:
                      description: The name of the coin the user desires to withdraw
                      type: string
                      default: '`-`'
                    fee:
                      description: Used only to set a custom fee, otherwise fee value
                        will be derived from a deamon's `estimatefee` (or similar)
                        RPC method
                      type: object
                      default: '`-`'
                    fee.amount:
                      description: Fee amount in coin units, used only when type is
                        `UtxoFixed` (fixed amount not depending on tx size) or `UtxoPerKbyte`
                        (amount per Kbyte)
                      type: string
                      default: '`-`'
                    fee.type:
                      description: 'Type of transaction fee; possible values: `UtxoFixed`
                        or `UtxoPerKbyte`'
                      type: string
                      default: '`-`'
                    from:
                      description: Used only for transactions using a hardware wallet.
                        For more information, see the [Trezor Integration guide](/komodo-defi-framework/api/v20/utils/task_init_trezor/)
                      type: string
                      default: '`-`'
                    from.account_id:
                      description: HD wallets only. Generally this will be `0` unless
                        you have multiple accounts registered on your HD wallet
                      type: integer
                      default: '`-`'
                    from.address_id:
                      description: HD wallets only. Check the output from coin activation
                        to find the ID of an address with balance.
                      type: integer
                      default: '`-`'
                    from.chain:
                      description: HD wallets only. `Internal`, or `External`. External
                        is used for addresses that are intended to be visible outside
                        of the wallet (e.g. for receiving payments). `Internal` is
                        used for addresses which are not meant to be visible outside
                        of the wallet and is used to return the leftover change from
                        a transaction.
                      type: string
                      default: '`-`'
                    from.derivation_path:
                      description: HD wallets only. Follows the format `m/44'/COIN_ID'/ACCOUNT_ID'/CHAIN/ADDRESS_ID`
                      type: string
                      default: '`-`'
                    max:
                      description: Withdraw the maximum available amount.
                      type: boolean
                      default: '`false`'
                    memo:
                      description: Used for ZHTLC and Tendermint coins only. Attaches
                        a memo to the transaction.
                      type: string
                      default: '`-`'
                    to:
                      description: Coins are withdrawn to this address
                      type: string
                      default: '`-`'
                  required:
                  - coin
                  - to
      responses:
        '200':
          description: Successful response for task::withdraw::init
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_withdraw_init_Response'
              example:
                mmrpc: '2.0'
                result:
                  task_id: 123
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::withdraw::user_action:
    post:
      summary: Withdraw Task User Action
      description: Send user action (PIN) to the Trezor device during withdrawal in
        the Komodo DeFi Framework API.
      operationId: task::withdraw::user_action
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::withdraw::user_action
                params:
                  type: object
                  properties:
                    task_id:
                      description: The identifying number returned when initiating
                        the withdrawal process.
                      type: integer
                    user_action:
                      description: Object containing the params below
                      type: object
                    user_action.action_type:
                      description: Will be `TrezorPin` for this method
                      type: string
                    user_action.pin:
                      description: When the Trezor device is displaying a grid of
                        numbers for PIN entry, this param will contain your Trezor
                        pin, as mapped through your keyboard numpad. See the image
                        below for more information.
                      type: string
                  required:
                  - task_id
                  - user_action
                  - user_action.action_type
                  - user_action.pin
      responses:
        '200':
          description: Successful response for task::withdraw::user_action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_withdraw_user_action_Response'
              example:
                mmrpc: '2.0'
                result:
                  result: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::withdraw::cancel:
    post:
      summary: Cancel Withdraw Task
      description: Cancel a withdrawal transaction generation task in the Komodo DeFi
        Framework API.
      operationId: task::withdraw::cancel
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::withdraw::cancel
                params:
                  type: object
                  properties:
                    task_id:
                      description: The identifying number returned when initiating
                        the withdraw process.
                      type: integer
                  required:
                  - task_id
      responses:
        '200':
          description: Successful response for task::withdraw::cancel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_withdraw_cancel_Response'
              example:
                mmrpc: '2.0'
                result:
                  result: string_value
                  error: string_value
                  error_path: string_value
                  error_trace: string_value
                  error_type: string_value
                  error_data: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::withdraw::status:
    post:
      summary: Withdraw Task Status
      description: Get the status of a withdrawal transaction generation in the Komodo
        DeFi Framework API.
      operationId: task::withdraw::status
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::withdraw::status
                params:
                  type: object
                  properties:
                    forget_if_finished:
                      description: If `false`, will return final response for completed
                        tasks.
                      type: boolean
                      default: '`true`'
                    task_id:
                      description: The identifying number returned when initiating
                        the initialisation process.
                      type: integer
                      default: '`-`'
                  required:
                  - task_id
      responses:
        '200':
          description: Successful response for task::withdraw::status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_withdraw_status_Response'
              example:
                mmrpc: '2.0'
                result:
                  status: string_value
                  details: {}
                  details.to: string_value
                  details.from: string_value
                  details.my_balance_change: string_value
                  details.received_by_me: string_value
                  details.spent_by_me: string_value
                  details.total_amount: string_value
                  details.fee_details: {}
                  details.tx_hash: string_value
                  details.tx_hex: string_value
                  details.coin: string_value
                  details.transaction_type: string_value
                  details.kmd_rewards: {}
                  details.kmd_rewards.amount: string_value
                  details.kmd_rewards.claimed_by_me: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::init_trezor::init:
    post:
      summary: task::init_trezor::init
      description: Initialise your Trezor device for use in the Komodo DeFi Framework
        API.
      operationId: task::init_trezor::init
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::init_trezor::init
      responses:
        '200':
          description: Successful response for task::init_trezor::init
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_init_trezor_init_Response'
              example:
                mmrpc: '2.0'
                result:
                  task_id: 123
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::init_trezor::user_action:
    post:
      summary: task::init_trezor::user_action
      description: Send user action (PIN or passphrase) to the Trezor device during
        initialisation in the Komodo DeFi Framework API.
      operationId: task::init_trezor::user_action
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::init_trezor::user_action
      responses:
        '200':
          description: Successful response for task::init_trezor::user_action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_init_trezor_user_action_Response'
              example:
                mmrpc: '2.0'
                result:
                  result: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::init_trezor::cancel:
    post:
      summary: Cancel Trezor Initialization Task
      description: Cancel the Trezor initialisation task in the Komodo DeFi Framework
        API.
      operationId: task::init_trezor::cancel
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              - params
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::init_trezor::cancel
                params:
                  type: object
                  properties:
                    task_id:
                      description: The identifying number returned when initiating
                        the initialisation process.
                      type: integer
                  required:
                  - task_id
      responses:
        '200':
          description: Successful response for task::init_trezor::cancel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_init_trezor_cancel_Response'
              example:
                mmrpc: '2.0'
                result:
                  result: string_value
                  error: string_value
                  error_path: string_value
                  error_trace: string_value
                  error_type: string_value
                  error_data: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task::init_trezor::status:
    post:
      summary: task::init_trezor::status
      description: Query the status of Trezor device initialisation in the Komodo
        DeFi Framework API.
      operationId: task::init_trezor::status
      tags:
      - task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - task::init_trezor::status
      responses:
        '200':
          description: Successful response for task::init_trezor::status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_init_trezor_status_Response'
              example:
                mmrpc: '2.0'
                result:
                  status: string_value
                  details: {}
                  details.type: string_value
                  details.model: string_value
                  details.device_name: string_value
                  details.device_id: string_value
                  details.device_pubkey: string_value
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        error_path:
          type: string
        error_trace:
          type: string
        error_type:
          type: string
        error_data:
          type: object
