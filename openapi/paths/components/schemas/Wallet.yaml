AccountAddressInfo:
  type: object
  properties:
    address:
      description: The account address for a specific derivation path under the `account_index`.
      type: string
    derivation_path:
      description: The [BIP44 derivation path](https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki)
        of the address.
      type: string
    chain:
      description: '`External` or `Internal`, as defined in the activation request.'
      type: string
    balance:
      $ref: '#/components/schemas/BalanceInfo'
      description: A standard [BalanceInfo](/komodo-defi-framework/api/common_structures/wallet/#balance-info)
        object.
  required:
  - address
  - derivation_path
  - chain
  - balance
  description: 'The `AccountAddressInfo` object includes the following items for active
    addresses in the activation response for a coin in HD mode:'
AddressDerivationPath:
  type: object
  properties:
    account_id:
      description: Used as a layer of separation or hierarchy.
      type: integer
      default: 0
    chain:
      description: Accepted values are `External` (0) and `Internal` (1).
      type: string
      default: External
    address_id:
      description: Used as a layer of separation or hierarchy.
      type: integer
      default: 0
  description: The `AddressDerivationPath` object defines the account / change / address\_index
    of the [derivation path](https://medium.com/mycrypto/wtf-is-a-derivation-path-c3493ca2eb52)
    used for your wallet. Using different values for `account_id` or `address_id`
    parameters will result in a different address and private key for each combination.
    The `chain` parameter is used to specify if the change from a transaction. Set
    to `External` for addresses that are intended to be visible outside of the wallet
    (e.g. for receiving payments). `Internal` is used for addresses which are not
    meant to be visible outside of the wallet and is used to return the leftover change
    from a transaction.
AddressInfo:
  type: object
  properties:
    balances:
      description: A standard [balanceInfos](/komodo-defi-framework/api/common_structures/wallet/#balance-info)
        object. Not included in responses where `get_balances` is `false`
      type: object
    derivation_method:
      $ref: '#/components/schemas/DerivationMethod'
      description: A standard [DerivationMethod](/komodo-defi-framework/api/common_structures/wallet/#derivation-method)
        object
    pubkey:
      description: The public key associated with the seed used to launch Komodo DeFi
        Framework
      type: string
    tickers:
      description: A list of tokens which were successfully activated. Only included
        in responses where `get_balances` is `false`
      type: array
      items:
        type: string
  required:
  - derivation_method
  - pubkey
  description: 'The `AddressInfo` object includes the following items for a given
    address:'
AddressPath:
  type: object
  properties:
    account_id:
      description: The index of the account in the wallet, starting from `0`.
      type: integer
    chain:
      description: The `chain` is either `External` or `Internal`, and expressed as
        an integer with `External` being 0 and `Internal` being 1.
      type: integer
    address_id:
      description: The index of the address in the account, starting from `0`.
      type: integer
    derivation_path:
      description: The derivation path of the address, following the format `m/44'/COIN_ID'/ACCOUNT_ID'/CHAIN/ADDRESS_ID`
        (or `m/84'/COIN_ID'/ACCOUNT_ID'/CHAIN/ADDRESS_ID` for segwit coins).
      type: string
  required:
  - account_id
  description: 'The `AddressPath` object includes the following items:'
BalanceInfo:
  type: object
  properties:
    spendable:
      description: The available amount of a coin or token which is ready to be traded
        or withdrawn.
      type: string
      enum:
      - numeric
    unspendable:
      description: The amount of a coin or token which is awaiting confirmation on
        the block chain for an incoming or outgoing transaction.
      type: string
      enum:
      - numeric
  required:
  - spendable
  - unspendable
  description: 'The `BalanceInfo` object includes the following items for a given
    coin or token:'
DerivationMethod:
  type: object
  properties:
    type:
      description: 'Defines how keypairs will be generated. Possible values: `Iguana`
        or `HDWallet`'
      type: string
  required:
  - type
  description: 'The `DerivationMethod` object includes the following items for a given
    coin or token:'
ExtendedFeeInfo:
  type: object
  properties:
    coin:
      description: the fee is paid from the user's balance of this coin. This coin
        name may differ from the `base` or `rel` coins. For example, ERC20 fees are
        paid by ETH (gas)
      type: string
    amount:
      description: fee amount (in decimal representation)
      type: string
      enum:
      - numeric
    amount_rat:
      description: fee amount (in rational representation)
      type: string
    amount_fraction:
      description: fee amount (in fraction representation)
      type: string
    paid_from_trading_vol:
      description: whether the fee is paid from trading volume and not use actual
        `coin` balance
      type: boolean
  required:
  - coin
  - amount
  - amount_rat
  - amount_fraction
  - paid_from_trading_vol
  description: Schema definition for ExtendedFeeInfo
FeeInfo:
  type: object
  properties:
    type:
      description: 'Type of transaction fee. Possible values: `UtxoFixed`, `UtxoPerKbyte`,
        `UtxoPriority`, `EthGas`, `Qrc20Gas`, `CosmosGas`'
      type: string
    amount:
      description: Fee amount in coin units, used only when type is `UtxoFixed` (fixed
        amount not depending on tx size) or `UtxoPerKbyte` (amount per Kbyte)
      type: string
      enum:
      - numeric
    priority:
      description: 'Used only when type is `UtxoPriority`. Possible values: ''Low'',
        ''Normal'', ''High''.'
      type: string
    gas_price:
      description: Used only when fee type is `CosmosGas`; sets the gas price.
      type: number
    gas:
      description: Used only when fee type is `EthGas`; sets the gas limit for transaction
      type: integer
    gas_limit:
      description: Used only when fee type is `Qrc20Gas` or `CosmosGas`; sets the
        gas limit for transaction
      type: integer
  required:
  - type
  description: 'The `FeeInfo` response object includes the following items for [withdraw
    (v2)](/komodo-defi-framework/api/v20/wallet/tx/withdraw/) requests:'
HistoryTarget:
  type: object
  properties:
    type:
      description: Filters results by `account_id` or `address_id` part of the derivation
        path.
      type: string
    account_id:
      description: '`ACCOUNT_ID` child in the `m/44''/COIN''/ACCOUNT_ID''/CHAIN/ADDRESS_ID`
        BIP44 derivation path.'
      type: integer
    address_id:
      description: '`ADDRESS_ID` child in the `m/44''/COIN''/ACCOUNT_ID''/CHAIN/ADDRESS_ID`
        BIP44 derivation path.'
      type: integer
    chain:
      description: '`Internal`, or `External`. External is used for addresses that
        are meant to be visible outside of the wallet (e.g. for receiving payments).
        Internal is used for addresses which are not meant to be visible outside of
        the wallet and is used for return transaction change.'
      type: string
  required:
  - type
  - account_id
  description: Used to specify a HD wallet `account_id` or `address_id` for [my\_tx\_history
    v2](/komodo-defi-framework/api/v20/wallet/tx/my_tx_history/) requests.
InputTxns:
  type: object
  properties:
    tx_hash:
      description: The transaction id of an unspent transaction from the same wallet
        output.
      type: string
    index:
      description: The [output index](https://bitcoin.stackexchange.com/questions/100765/what-does-the-index-of-an-utxo-stand-for)
        of this unspent transaction output.
      type: integer
    script_pub_key:
      description: The [scriptpubkey](https://learnmeabitcoin.com/technical/scriptPubKey)
        of this unspent transaction output.
      type: string
    amount:
      description: The value of this unspent transaction output.
      type: number
  required:
  - tx_hash
  - index
  - script_pub_key
  - amount
  description: 'The `InputTxns` object includes the following items:'
NewAddressInfo:
  type: object
  properties:
    address:
      description: The account address for a specific derivation path under the `account_index`.
      type: string
    derivation_path:
      description: The [BIP44 derivation path](https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki)
        of the address. If there are no more addresses with balances within the gap
        limit, the address index will increment.
      type: string
    balance:
      $ref: '#/components/schemas/BalanceInfo'
      description: A standard [BalanceInfo](/komodo-defi-framework/api/common_structures/wallet/#balance-info)
        object.
    chain:
      description: '`Internal`, or `External`. External is used for addresses that
        are meant to be visible outside of the wallet (e.g. for receiving payments).
        Internal is used for addresses which are not meant to be visible outside of
        the wallet and is used for return transaction change.'
      type: string
  required:
  - address
  - derivation_path
  - balance
  - chain
  description: 'The `NewAddressInfo` response object includes the following items
    for request in HD mode:'
PayForGas:
  type: object
  properties:
    tx_type:
      description: ETH/EVM coins and tokens only. Options are `Legacy` or `Eip1559`.
        The type of transaction values being configured.
      type: string
    gas_price:
      description: Only used if tx\_type is `Legacy`. Values are in Gwei. The maximium
        price per gas unit the user is willing to pay for the transaction.
      type: string
    max_fee_per_gas:
      description: Only used if tx\_type is `Eip1559`. Values are in Gwei. The maximum
        amount to pay per unit of gas to get your transaction included in a block.
      type: string
    max_priority_fee_per_gas:
      description: Only used if tx\_type is `Eip1559`. Values are in Gwei. This is
        paid directly to the miner, and can be set by the user to attract minimal
        delay in transaction confirmation.
      type: string
    min_wait_time:
      description: Only used if tx\_type is `Eip1559`. Estimated minimum transaction
        wait time in mempool (in ms) for this priority level.
      type: integer
    max_wait_time:
      description: Only used if tx\_type is `Eip1559`. Estimated maximum transaction
        wait time in mempool (in ms) for this priority level.
      type: integer
  required:
  - tx_type
  description: 'The `PayForGas` object includes the following items:'
StakingDetails:
  type: object
  properties:
    type:
      description: The coin type. Currently, only 'Cosmos' and `Qtum` are supported.
      type: string
    validator_address:
      description: The address of the validator to delegate staking to.
      type: string
    amount:
      description: The amount of coins to stake send to the validator for delegated
        staking (Cosmos only - QTUM will stake your whole balance).
      type: string
  description: 'The `StakingDetails` object includes the following items:'
StakingInfoDetails:
  type: object
  properties:
    type:
      description: The coin type. Currently, only 'Cosmos' is supported.
      type: string
    filter_by_status:
      description: Return only validators matching a specific status. Options are
        `Bonded`, `Unbonded`, and `All`. Defaults to `Bonded`.
      type: string
    limit:
      description: Optional, defaults to `10`. The number of validators displayed
        per page in response.
      type: integer
    page_number:
      description: Optional, defaults to `1`. The page offset for items in response.
      type: integer
  description: 'The `StakingInfoDetails` object includes the following items:'
ClaimingDetails:
  type: object
  properties:
    type:
      description: The coin type. Currently, only 'Cosmos' and `Qtum` are supported.
      type: string
    validator_address:
      description: The address of the validator to delegate staking to.
      type: string
    force:
      description: Defaults to `false`. If `true`, will process unprofitable transactions
        (reward value less than network fees)
      type: boolean
  description: 'The `ClaimingDetails` object includes the following items:'
PrivKeyPolicy:
  type: object
  properties:
    type:
      description: Options are `ContextPrivKey`, `WalletConnect`, `Metamask`, or `Trezor`.
        Defaults to `ContextPrivKey`.
      type: string
    data:
      description: '`WalletConnect` type only. The `session_topic` hex string, returned
        from the response to [wc\_new\_connection](/komodo-defi-framework/api/v20-dev/wc_new_connection/#wc-new-connection).'
      type: array
      items:
        type: string
  description: 'The `PrivKeyPolicy` object includes the following items:'
RawTxInfo:
  type: object
  properties:
    tx_hex:
      description: UTXO only. The raw unsigned hex of a proposed transaction.
      type: string
    prev_txns:
      description: UTXO only. A list of standard [InputTxns objects](/komodo-defi-framework/api/common_structures/wallet/#input-txns).
      type: array
      items:
        type: string
    to:
      description: ETH/EVM only. A destination address to send the funds to.
      type: string
    value:
      description: ETH/EVM only. The amount of funds to be sent as a string with a
        `0x` prefix, in [wei](https://ethereum.stackexchange.com/questions/253/the-ether-denominations-are-called-finney-szabo-and-wei-what-who-are-these-na)
        units.
      type: string
    gas_limit:
      description: ETH/EVM only. The maximum gas to be used for sending the transaction,
        in [gwei](https://eth-converter.com/) units.
      type: string
    pay_for_gas:
      $ref: '#/components/schemas/PayForGas'
      description: ETH/EVM only. Used for EIP-1559 fee policy config. A standard [PayForGas](/komodo-defi-framework/api/common_structures/wallet/#pay-for-gas)
        object.
  description: 'The `RawTxInfo` object includes the following items:'
ScanAddressesInfo:
  type: object
  properties:
    account_index:
      description: '`ACCOUNT_ID` child in the `m/44''/COIN''/ACCOUNT_ID''/CHAIN/ADDRESS_ID`
        BIP44 derivation path. **Please don''t confuse with the global account.**'
      type: integer
    derivation_path:
      description: The [BIP44 derivation path](https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki)
        of the account.
      type: string
    new_addresses:
      $ref: '#/components/schemas/NewAddressInfo'
      description: A list of standard [NewAddressInfo](/komodo-defi-framework/api/common_structures/wallet/#new-address-info)
        objects.
  required:
  - account_index
  - derivation_path
  - new_addresses
  description: 'The `ScanAddressesInfo` response object includes the following items
    for request in HD mode:'
TotalFeeInfo:
  type: object
  properties:
    coin:
      description: the fee is paid from the user's balance of this coin. This coin
        name may differ from the `base` or `rel` coins. For example, ERC20 fees are
        paid by ETH (gas)
      type: string
    amount:
      description: fee amount (in decimal representation)
      type: string
      enum:
      - numeric
    amount_rat:
      description: fee amount (in rational representation)
      type: string
    amount_fraction:
      description: fee amount (in fraction representation)
      type: string
    required_balance:
      description: the required `coin` balance to pay the fee
      type: string
      enum:
      - numeric
    required_balance_rat:
      description: '`required_balance` in rational representation'
      type: string
    required_balance_fraction:
      description: '`required_balance` in fraction representation'
      type: string
  required:
  - coin
  - amount
  - amount_rat
  - amount_fraction
  - required_balance
  - required_balance_rat
  - required_balance_fraction
  description: Schema definition for TotalFeeInfo
WithdrawFee:
  type: object
  properties:
    type:
      description: The fee type. Either `Utxo`, `Tendermint`, `Qrc20` or `Eth`.
      type: string
    amount:
      description: '`Utxo` or `Tendermint` type only. The fee amount.'
      type: string
    coin:
      description: The coin which will be used to pay the transaction fee.
      type: string
    gas:
      description: '`Eth` type only. The amount of gas to be used for the transaction.'
      type: integer
    gas_price:
      description: '`Eth` or `Qrc20` type only. Price per unit of gas to be used for
        the transaction.'
      type: string
    gas_limit:
      description: '`Tendermint` or `Qrc20` type only. Maximum gas to be used for
        the transaction.'
      type: string
    miner_fee:
      description: '`Tendermint` type only. Fee to mine the transaction.'
      type: string
    total_fee:
      description: '`Eth` type only. Gas price multiplied by gas amount.'
      type: string
    total_gas_fee:
      description: '`Qrc20` type only. Gas price multiplied by gas amount.'
      type: string
  required:
  - type
  - coin
  description: The `WithdrawFee` object varies depending on the coin or token type.
    Refer to the examples to view the object structure for each type.
WalletAccountInfo:
  type: object
  properties:
    account_index:
      description: '`ACCOUNT_ID` child in the `m/44''/COIN''/ACCOUNT_ID''/CHAIN/ADDRESS_ID`
        BIP44 derivation path. **Please don''t confuse with the global account.**'
      type: integer
    derivation_path:
      description: Derivation path up to the `COIN` child. E.g. `"m/44'/141'/0'"`
      type: string
    total_balance:
      $ref: '#/components/schemas/BalanceInfo'
      description: A standard [BalanceInfo](/komodo-defi-framework/api/common_structures/wallet/#balance-info)
        object.
    addresses:
      $ref: '#/components/schemas/AccountAddressInfo'
      description: A list of standard [AccountAddressInfo](/komodo-defi-framework/api/common_structures/wallet/#account-address-info)
        objects.
  required:
  - account_index
  - derivation_path
  - total_balance
  - addresses
  description: 'The `WalletAccountInfo` object includes the following items in the
    activation response for a coin in HD mode:'
WalletBalanceInfo:
  type: object
  properties:
    wallet_type:
      description: In HD wallet mode, this will return `HD`. <DevComment> What are
        the other values? </DevComment>
      type: string
    accounts:
      $ref: '#/components/schemas/WalletAccountInfo'
      description: A standard [WalletAccountInfo](/komodo-defi-framework/api/common_structures/wallet/#wallet-account-info)
        object.
  required:
  - wallet_type
  - accounts
  description: 'The `WalletBalanceInfo` object includes the following items in the
    activation response for a coin in HD mode:'
WithdrawFromInfo:
  type: object
  properties:
    derivation_path:
      description: The [BIP44 derivation path](https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki)
        of the address.
      type: string
    account_id:
      description: '`ACCOUNT_ID` child in the `m/44''/COIN''/ACCOUNT_ID''/CHAIN/ADDRESS_ID`
        BIP44 derivation path. **Please don''t confuse with the global account.**'
      type: integer
    address_id:
      description: '`ADDRESS_ID` child in the `m/44''/COIN''/ACCOUNT_ID''/CHAIN/ADDRESS_ID`
        BIP44 derivation path.'
      type: integer
    chain:
      description: '`Internal`, or `External`. External is used for addresses that
        are meant to be visible outside of the wallet (e.g. for receiving payments).
        Internal is used for addresses which are not meant to be visible outside of
        the wallet and is used for return transaction change.'
      type: string
  description: The `WithdrawFromInfo` response object includes the following items
    for HD Wallet [withdraw (v2)](/komodo-defi-framework/api/v20/wallet/tx/withdraw/)
    requests. You can use either the `derivation_path` on its own, or the `account_id`,
    `chain` and `address_id` together.
NotSufficientBalance:
  type: object
  properties:
    coin:
      description: the name of the coin which balance is not sufficient. This coin
        name may differ from the requested coin. For example, ERC20 fees are paid
        by ETH (gas)
      type: string
    available:
      description: the balance available for transfer
      type: string
      enum:
      - numeric
    required:
      description: the amount required to transfer the specified amount. This amount
        is necessary but may not be sufficient
      type: string
      enum:
      - numeric
  required:
  - coin
  - available
  - required
  description: The `available` balance is not sufficient to transfer the specified
    amount.
ZeroBalanceToWithdrawMax:
  type: object
  properties:
    (none):
      description: ''
      type: string
  description: The available balance is zero.
AmountTooLow:
  type: object
  properties:
    amount:
      description: the amount the user was willing to transfer
      type: string
      enum:
      - numeric
    threshold:
      description: the `amount` has not to be less than the `threshold`
      type: string
      enum:
      - numeric
  required:
  - amount
  - threshold
  description: The specified amount is too low. Required at least `threshold`.
InvalidAddress:
  type: object
  properties:
    (none):
      description: the error description
      type: string
  required:
  - (none)
  description: The specified `to` address is not valid.
InvalidFeePolicy:
  type: object
  properties:
    (none):
      description: the error description
      type: string
  required:
  - (none)
  description: The specified `fee` is not valid.
