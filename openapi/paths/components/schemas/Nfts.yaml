GetNftTransfersFilters:
  type: object
  properties:
    receive:
      description: If `true`, only transfers where user received NFTs are included
        in the response.
      type: boolean
      default: false
    send:
      description: If `true`, only transfers where user sent NFTs are included in
        the response.
      type: boolean
      default: false
    from_date:
      description: A timestamp in [unix epoch format](https://www.epochconverter.com/).
        If `true`, filter includes transfers from this date onwards (inclusive).
      type: integer
    to_date:
      description: A timestamp in [unix epoch format](https://www.epochconverter.com/).
        If `true`, filter includes transfers up to this date (inclusive).
      type: integer
    exclude_spam:
      description: If `true`, only transfers which have param `possible_spam:false`
        are included in the response.
      type: boolean
      default: false
    exclude_phishing:
      description: If `true`, only transfers which have param `possible_phishing:false`
        are included in the response.
      type: boolean
      default: false
  description: Schema definition for GetNftTransfersFilters
NftFilter:
  type: object
  properties:
    exclude_spam:
      description: If `true`, only tokens which have param `possible_spam:false` are
        included in the response.
      type: boolean
      default: false
    exclude_phishing:
      description: If `true`, only tokens which have param `possible_phishing:false`
        are included in the response.
      type: boolean
      default: false
  description: 'The `NftFilter` object includes the following items for a given coin
    or token:'
NftInfoBasic:
  type: object
  properties:
    amount:
      description: The amount of this NFT the user owns (used by `ERC1155`).
      type: string
    chain:
      description: Chain name. One of `AVALANCHE`, `BSC`, `ETH`, `FANTOM`, or `POLYGON`.
      type: string
    contract_type:
      description: The type of NFT contract standard. One of `ERC721` or `ERC1155`.
      type: string
    token_address:
      description: The address of the NFT contract.
      type: string
    token_id:
      description: The token ID of the NFT.
      type: string
  required:
  - amount
  - chain
  - contract_type
  - token_address
  - token_id
  description: 'The `NftInfoBasic` object includes the following items for a given
    token:'
NftInfo:
  type: object
  properties:
    amount:
      description: The amount of this NFT the user owns (used by `ERC1155`).
      type: string
    block_number_minted:
      description: The block height when the NFT was minted. May be `null`.
      type: integer
    block_number:
      description: The block height when the amount or owner changed.
      type: integer
    chain:
      description: Chain name. One of `AVALANCHE`, `BSC`, `ETH`, `FANTOM`, or `POLYGON`.
      type: string
    contract_type:
      description: The type of NFT contract standard. One of `ERC721` or `ERC1155`.
      type: string
    last_token_uri_sync:
      description: When the token\_uri was last updated.
      type: string
    last_metadata_sync:
      description: When the metadata was last updated.
      type: string
    metadata:
      description: A JSON object containing NFT metadata. May be `null`.
      type: object
    minter_address:
      description: Minter address. May be `null`.
      type: string
    owner_of:
      description: The wallet address of the owner of the NFT.
      type: string
    possible_spam:
      description: If `true`, the contract address has [been identified](https://docs.moralis.io/web3-data-api/evm/nft-spam-detection)
        as associated with spam or suspicious activities.
      type: boolean
    possible_phishing:
      description: If `true`, the token has been identified as associated with phishing,
        as at least one of domain fields is found in database with phishing domains.
      type: boolean
    synced_at:
      description: When the token was last synced with the node.
      type: string
    token_address:
      description: The address of the NFT contract.
      type: string
    token_id:
      description: The token ID of the NFT.
      type: string
    token_hash:
      description: The token hash. May be `null`.
      type: string
    token_uri:
      description: The URI to the metadata of the token. May be `null`.
      type: string
    token_domain:
      description: Token domain. May be `null`.
      type: string
    uri_meta:
      $ref: '#/components/schemas/NftMetadata'
      description: A standard [NftMetadata](/komodo-defi-framework/api/common_structures/nfts/#nft-metadata)
        object.
  required:
  - amount
  - block_number
  - chain
  - contract_type
  - last_token_uri_sync
  - last_metadata_sync
  - owner_of
  - possible_spam
  - possible_phishing
  - synced_at
  - token_address
  - token_id
  - uri_meta
  description: 'The `NftInfo` object includes the following items for a given token:'
NftMetadata:
  type: object
  properties:
    image:
      description: Direct URL to the NFT's image.
      type: string
    image_url:
      description: Url to the NFT's image. Derived from the `image` or `image_url`
        fields to prioritize the non-null value. Can be null if neither is provided.
      type: string
    image_domain:
      description: Extracted domain from the 'image\_url', if valid.
      type: string
    name:
      description: Name of the token.
      type: string
    description:
      description: Description of the token.
      type: string
    attributes:
      description: The values within this parameter will vary, and are set by the
        creator. Often used to store traits.
      type: array
      items:
        type: object
    animation_url:
      description: Url to an animation to be displayed instead of a static image.
      type: string
    animation_domain:
      description: Extracted domain from the `animation_url`, if valid.
      type: string
    external_url:
      description: URL to the external source related to the token.
      type: string
    external_domain:
      description: Extracted domain from the `external_url`, if valid.
      type: string
    image_details:
      description: JSON containing additional details or attributes of the image.
      type: object
  description: 'The `NftMetadata` object includes the following items for a given
    coin or token:'
NftProvider:
  type: object
  properties:
    type:
      description: Specifies the type of the provider.
      type: string
    info:
      description: Additional information about the provider
      type: object
    info.url:
      description: URL of the provider's endpoint
      type: string
    info.komodo_proxy:
      description: Indicates whether proxy authentication is enabled for the endpoint
      type: boolean
  required:
  - type
  - info
  - info.url
  description: The `NftProvider` object is used in the 'enable\_nft' RPC method. It
    defines the NFT providers that are avaialable and their configuration.
NftTransfer:
  type: object
  properties:
    amount:
      description: Amount of tokens transferred.
      type: string
    block_hash:
      description: May be `null`. Hash of block in which transfer occurred.
      type: string
    block_number:
      description: Height of block in which transfer occurred.
      type: integer
    block_timestamp:
      description: Block time in [unix epoch format](https://www.epochconverter.com/).
      type: integer
    chain:
      description: Chain name. One of `AVALANCHE`, `BSC`, `ETH`, `FANTOM`, or `POLYGON`.
      type: string
    token_uri:
      description: May be `null`. The URI to the metadata of the token.
      type: string
    token_domain:
      description: May be `null`. Extracted domain from the `token_uri`, if valid.
      type: string
    collection_name:
      description: May be `null`. Name of collection which token belongs to.
      type: string
    image_url:
      description: May be `null`. The URI to the token image.
      type: string
    image_domain:
      description: May be `null`. Extracted domain from the `image_url`, if valid.
      type: string
    token_name:
      description: May be `null`. Name of the token.
      type: string
    contract_type:
      description: Contract type. `ERC721` or `ERC1155`.
      type: string
    token_address:
      description: Address of token transferred.
      type: string
    token_id:
      description: Token ID.
      type: string
    possible_spam:
      description: If `true`, the contract address has [been identified](https://docs.moralis.io/web3-data-api/evm/nft-spam-detection)
        as associated with spam or suspicious activities.
      type: boolean
    possible_phishing:
      description: If `true`, the token has been identified as associated with phishing,
        as at least one of domain fields is found in database with phishing domains.
      type: boolean
    transaction_hash:
      description: Transaction ID of the transfer.
      type: string
    transaction_index:
      description: May be `null`. Transaction index of the transfer.
      type: string
    log_index:
      description: Log index of the transfer.
      type: string
    value:
      description: May be `null`. Tranfer value.
      type: string
    transaction_type:
      description: May be `null`. Transaction type. Possible values are `Single`.
      type: string
    from_address:
      description: Address of previous owner which sent the token(s).
      type: string
    to_address:
      description: Address of new owner which received the token(s).
      type: string
    status:
      description: Transfer status. Will be either `Send` or `Receive`. When the `from_address`
        and `to_address` are the same (i.e. sending to yourself), this value will
        be `Receive`.
      type: string
    verified:
      description: May be `null`. A deprecated field which will be removed in future.
      type: integer
    operator:
      description: May be `null`.
      type: string
    fee_details:
      $ref: '#/components/schemas/FeeInfo'
      description: Optional. A standard [FeeInfo](/komodo-defi-framework/api/common_structures/wallet/#fee-info)
        object.
    confirmations:
      description: The count of blocks produced since this transaction was confirmed.
      type: integer
  description: 'The `NftTransfer` object includes the following items for each token
    transaction:'
NftTransferFilter:
  type: object
  properties:
    receive:
      description: If `true`, only transfers where user received NFTs are included
        in the response.
      type: boolean
      default: false
    send:
      description: If `true`, only transfers where user sent NFTs are included in
        the response.
      type: boolean
      default: false
    from_date:
      description: A timestamp in [unix epoch format](https://www.epochconverter.com/).
        If `true`, filter includes transfers from this date onwards (inclusive).
      type: integer
    to_date:
      description: A timestamp in [unix epoch format](https://www.epochconverter.com/).
        If `true`, filter includes transfers up to this date (inclusive).
      type: integer
    exclude_spam:
      description: If `true`, only transfers which have param `possible_spam:false`
        are included in the response.
      type: boolean
      default: false
    exclude_phishing:
      description: If `true`, only transfers which have param `possible_phishing:false`
        are included in the response.
      type: boolean
      default: false
  description: 'The `NftTransferFilter` object includes the following items for a
    given coin or token:'
MoralisNftDetails:
  type: object
  properties:
    amount:
      description: The amount of this NFT the user owns (used by `ERC1155`).
      type: string
    block_number_minted:
      description: The block height when the NFT was minted. May be `null`.
      type: integer
    block_number:
      description: The block height when the amount or owner changed.
      type: integer
    chain:
      description: Chain name. One of `AVALANCHE`, `BSC`, `ETH`, `FANTOM`, or `POLYGON`.
      type: string
    name:
      description: May be `null`. An NFT collection name.
      type: string
    contract_type:
      description: The type of NFT contract standard. One of `ERC721` or `ERC1155`.
      type: string
    last_token_uri_sync:
      description: When the token\_uri was last updated.
      type: string
    metadata:
      description: May be `null` or a JSON stringified object containing NFT metadata.
      type: string
    normalized_metadata:
      description: A JSON object containing NFT metadata.
      type: object
    possible_spam:
      description: Indicates if the NFT collection is flagged as spam.
      type: boolean
    symbol:
      description: May be `null`. The symbol of the NFT collection.
      type: string
    synced_at:
      description: When the NFT was last synced with the node.
      type: string
    token_address:
      description: The smart contract address of this NFT.
      type: string
    token_hash:
      description: A hash uniquely identifying this NFT's metadata.
      type: string
    token_id:
      description: The token ID of this NFT.
      type: string
    token_uri:
      description: May be `null`. A URI to the NFT metadata (Usually an IPFS link).
      type: string
    possible_phishing:
      description: Indicates if the NFT is flagged as phishing.
      type: boolean
  required:
  - amount
  - block_number
  - chain
  - contract_type
  - last_token_uri_sync
  - possible_spam
  - synced_at
  - token_address
  - token_hash
  - token_id
  - possible_phishing
  description: Schema definition for MoralisNftDetails
TokenProtocol:
  type: object
  properties:
    type:
      description: Token type - e.g `ERC20` for tokens on the Ethereum network
      type: string
    protocol_data:
      description: Protocol-specific data object
      type: object
  required:
  - type
  - protocol_data
  description: Standard object structure used in token information methods like [get\_token\_info](/komodo-defi-framework/api/v20/utils/get_token_info/#get-token-info).
TokenProtocolData:
  type: object
  properties:
    platform:
      description: The parent coin of the token's platform - e.g `MATIC` for PLG20
        tokens
      type: string
    contract_address:
      $ref: '#/components/schemas/EthScan'
      description: '**Must be mixed case** The identifying hex string for the token''s
        contract. Can be found on sites like [EthScan](https://etherscan.io/), [BscScan](https://bscscan.com/)
        & [PolygonScan](https://polygonscan.com/)'
  required:
  - platform
  - contract_address
  description: Sub-object of [TokenProtocol](/komodo-defi-framework/api/common_structures/nfts/#token-protocol)
    containing platform-specific token information.
TokenActivationParams:
  type: object
  properties:
    required_confirmations:
      description: Confirmations to wait for steps in swap. Defaults to value in coins
        file if not set.
      type: integer
  description: Standard object structure used in token activation methods for specifying
    activation parameters.
WithdrawNftData:
  type: object
  properties:
    token_address:
      description: The contract address of the NFT
      type: string
    token_id:
      description: The ID of the NFT
      type: string
    to:
      description: The recipient's address
      type: string
    amount:
      description: The amount to withdraw (for ERC1155 NFTs). For ERC721 NFTs, this
        is always `1` and can be omitted.
      type: string
  required:
  - token_address
  - token_id
  - to
  description: 'The `WithdrawNftData` object is used for withdrawals of NFTs on ERC721
    and ERC1155 contracts. It includes the following items for a given coin or token:'
