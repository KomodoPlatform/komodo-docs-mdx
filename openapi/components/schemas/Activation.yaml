EnableUtxoInitRequestBody:
  type: object
  required: [ticker, activation_params]
  properties:
    ticker:
      type: string
      description: The ticker of the coin you want to enable (e.g., 'KMD', 'BTC').
    activation_params:
      $ref: '#/ActivationParams'
      description: An object containing the activation parameters for the coin.
ActivationParams:
  type: object
  required: [mode, scan_policy, priv_key_policy, min_addresses_number, gap_limit]
  properties:
    priv_key_policy:
      type: string
      enum: [ContextPrivKey, Trezor]
      description: >
        Defaults to 'ContextPrivKey'. Set as 'Trezor' to activate in Trezor mode.
    min_addresses_number:
      type: integer
      description: How many additional addresses to generate at a minimum.
    scan_policy:
      type: string
      enum: [do_not_scan, scan_if_new_wallet, scan]
      description: >
        Whether or not to scan for new addresses. Select from 'do_not_scan', 'scan_if_new_wallet' or 'scan'. Note that 'scan' will result in multiple requests to the Komodo DeFi Framework.
    gap_limit:
      type: integer
      description: >
        The max number of empty addresses in a row. If transactions were sent to an address outside the gap_limit, they will not be identified when scanning.
    mode:
      $ref: '#/Mode'
      description: An object containing RPC type and data parameters.
Mode:
  type: object
  required: [rpc, rpc_data]
  properties:
    rpc:
      type: string
      enum: [Native, Electrum]
      description: >
        UTXO RPC mode. Options: 'Native' if running a native blockchain node, or 'Electrum' to use electrum RPCs. If using electrum, a list of electrum servers is required under 'rpc_data.servers'.
    rpc_data:
      $ref: '#/RpcData'
      description: An object containing electrum server information.
RpcData:
  type: object
  properties:
    servers:
      type: array
      description: A list of electrum server URLs.
      items:
        $ref: '#/ElectrumServer'
ElectrumServer:
  type: object
  required: [url]
  properties:
    url:
      type: string
      description: The URL and port of a coin's electrum server.
    ws_url:
      type: string
      description: Optional. Used to define electrum server url/port for websocket connections.
    protocol:
      type: string
      enum: [TCP, SSL]
      description: Defines electrum server protocol as 'TCP' or 'SSL'. Defaults to 'TCP'.
    disable_cert_verification:
      type: boolean
      description: Optional. For 'SSL' electrum connections, this will allow expired certificates.
EnableUtxoInitResponse:
  type: object
  properties:
    mmrpc:
      type: string
      description: The JSON-RPC version (should be '2.0').
    result:
      type: object
      properties:
        task_id:
          type: integer
          description: An identifying number which is used to query task status.
    id:
      nullable: true
      description: The request id (null if not set).
EnableUtxoStatusRequestBody:
  type: object
  required: [task_id]
  properties:
    task_id:
      type: integer
      description: The identifying number returned when initiating the initialisation process.
    forget_if_finished:
      type: boolean
      default: true
      description: If false, will return final response for completed tasks. Optional, defaults to true.
EnableUtxoStatusResponse:
  type: object
  properties:
    mmrpc:
      type: string
      description: The JSON-RPC version (should be '2.0').
    result:
      type: object
      properties:
        status:
          type: string
          description: Status of the activation task (e.g., 'Ok', 'InProgress', 'UserActionRequired').
        details:
          oneOf:
            - $ref: '#/StatusDetailsHD'
            - $ref: '#/StatusDetailsIguana'
            - type: string
          description: Depending on the state of enabling progress, this will contain different information.
    id:
      nullable: true
      description: The request id (null if not set).
    error:
      type: string
      description: Error message, if any.
    error_path:
      type: string
      description: An indicator of the class or function which returned the error.
    error_trace:
      type: string
      description: An indicator of where in the source code the error was thrown.
    error_type:
      type: string
      description: An enumerated value for the returned error.
    error_data:
      type: string
      description: Additional context for the error type.
StatusDetailsHD:
  type: object
  properties:
    ticker:
      type: string
      description: Ticker of the coin being activated.
    current_block:
      type: integer
      description: Block height of the coin being activated.
    wallet_balance:
      $ref: '#/WalletBalanceHD'
      description: A standard WalletBalanceInfo object for HD wallets.
StatusDetailsIguana:
  type: object
  properties:
    ticker:
      type: string
      description: Ticker of the coin being activated.
    current_block:
      type: integer
      description: Block height of the coin being activated.
    wallet_balance:
      $ref: '#/WalletBalanceIguana'
      description: A standard WalletBalanceInfo object for Iguana wallets.
WalletBalanceHD:
  type: object
  properties:
    wallet_type:
      type: string
      enum: [HD]
      description: The wallet type (HD).
    accounts:
      type: array
      description: List of HD accounts.
      items:
        $ref: '#/HDAccount'
HDAccount:
  type: object
  properties:
    account_index:
      type: integer
      description: The account index.
    derivation_path:
      type: string
      description: The derivation path for the account.
    total_balance:
      type: object
      description: Total balance for the account, keyed by coin ticker.
      additionalProperties:
        $ref: '#/BalanceInfo'
    addresses:
      type: array
      description: List of addresses for the account.
      items:
        $ref: '#/HDAddress'
HDAddress:
  type: object
  properties:
    address:
      type: string
      description: The address string.
    derivation_path:
      type: string
      description: The derivation path for the address.
    chain:
      type: string
      description: The chain type (e.g., 'External').
    balance:
      type: object
      description: Balance for the address, keyed by coin ticker.
      additionalProperties:
        $ref: '#/BalanceInfo'
BalanceInfo:
  type: object
  properties:
    spendable:
      type: string
      description: Spendable balance for the address/account.
    unspendable:
      type: string
      description: Unspendable balance for the address/account.
WalletBalanceIguana:
  type: object
  properties:
    wallet_type:
      type: string
      enum: [Iguana]
      description: The wallet type (Iguana).
    address:
      type: string
      description: The address string.
    balance:
      type: object
      description: Balance for the address, keyed by coin ticker.
      additionalProperties:
        $ref: '#/BalanceInfo'
EnableUtxoUserActionRequestBody:
  type: object
  required: [task_id, user_action]
  properties:
    task_id:
      type: integer
      description: The identifying number returned when initiating the initialisation process.
    user_action:
      type: object
      description: Object containing the user action parameters.
      required: [action_type, pin]
      properties:
        action_type:
          type: string
          enum: [TrezorPin]
          description: Will be 'TrezorPin' for this method.
        pin:
          type: string
          description: When the Trezor device is displaying a grid of numbers for PIN entry, this param will contain your Trezor pin, as mapped through your keyboard numpad.
EnableUtxoUserActionResponse:
  type: object
  properties:
    mmrpc:
      type: string
      description: The JSON-RPC version (should be '2.0').
    result:
      type: string
      description: The outcome of the request.
    id:
      nullable: true
      description: The request id (null if not set).
EnableUtxoCancelRequestBody:
  type: object
  required: [task_id]
  properties:
    task_id:
      type: integer
      description: The identifying number returned when initiating the enabling process.
EnableUtxoCancelResponse:
  type: object
  properties:
    mmrpc:
      type: string
      description: The JSON-RPC version (should be '2.0').
    result:
      type: string
      description: Indicates task cancellation was successful.
    error:
      type: string
      description: An error message to explain what went wrong.
    error_path:
      type: string
      description: An indicator of the class or function which returned the error.
    error_trace:
      type: string
      description: An indicator of where in the source code the error was thrown.
    error_type:
      type: string
      description: An enumerated value for the returned error.
    error_data:
      type: string
      description: The input task ID which resulted in the error.
    id:
      nullable: true
      description: The request id (null if not set).
ActivationMode:
  type: object
  description: Defines the activation mode for QTUM, BCH, UTXO & ZHTLC coins.
  properties:
    rpc:
      type: string
      description: 'Native if running a native blockchain node, Electrum if using electrum servers or Light for ZHTLC coins.'
    rpc_data:
      $ref: '#/ActivationRpcData'
ActivationRpcData:
  type: object
  description: Contains information about electrum & lightwallet_d servers for coins being used in Electrum or Light mode.
  properties:
    light_wallet_d_servers:
      type: array
      items:
        type: string
      description: 'ZHTLC only. A list of urls which are hosting lightwallet_d servers for a coin.'
    electrum_servers:
      type: array
      items:
        $ref: '#/ActivationServers'
      description: 'ZHTLC only. A list of ActivationServers objects.'
    electrum:
      type: array
      items:
        $ref: '#/ActivationServers'
      description: 'QTUM, BCH & UTXO coins only. A list of ActivationServers objects.'
    sync_params:
      oneOf:
        - type: integer
        - type: string
      description: 'ZHTLC coins only. Optional, defaults to two days ago. Defines where to start scanning blockchain data upon initial activation.'
ActivationServers:
  type: object
  description: Contains information electrum servers for coins being used in Electrum or Light mode.
  properties:
    url:
      type: string
      description: The URL and port for an electrum server.
    ws_url:
      type: string
      description: Optional, for WSS only. The URL and port for an electrum server's WSS port.
    protocol:
      type: string
      description: Optional, defaults to TCP. Transport protocol used to connect to the server. Options: TCP or SSL.
    disable_cert_verification:
      type: boolean
      description: Optional, defaults to false. If true, disables server SSL/TLS certificate verification.
AddressDerivationPath:
  type: object
  description: Defines the account / change / address_index of the derivation path used for your wallet.
  properties:
    account_id:
      type: integer
      description: Optional, defaults to 0. Used as a layer of separation or hierarchy.
    chain:
      type: string
      description: Optional. Accepted values are External (0) and Internal (1). Defaults to External.
    address_id:
      type: integer
      description: Optional, defaults to 0. Used as a layer of separation or hierarchy.
AddressInfo:
  type: object
  description: Includes the following items for a given address.
  properties:
    balances:
      type: object
      description: A standard BalanceInfo object. Not included in responses where get_balances is false.
    derivation_method:
      type: object
      description: A standard DerivationMethod object.
    pubkey:
      type: string
      description: The public key associated with the seed used to launch Komodo DeFi Framework.
    tickers:
      type: array
      items:
        type: string
      description: A list of tokens which were successfully activated. Only included in responses where get_balances is false.
CoinProtocol:
  type: object
  description: Coin protocol information.
  properties:
    type:
      type: integer
      description: One of the Coin Types supported by the Komodo DeFi Framework.
    protocol_data:
      $ref: '#/CoinProtocolData'
CoinProtocolData:
  type: object
  description: Coin protocol data.
  properties:
    platform:
      type: string
      description: Indicates the platform parent coin for EMV-like protocols, or the coin used for lightning nodes.
    network:
      type: string
      description: Either mainnet or testnet.
    confirmation_targets:
      type: object
      description: A standard ConfirmationTargets object.
CoinNode:
  type: object
  description: Includes the following items for a given coin or token.
  properties:
    url:
      type: string
      description: URL of an RPC node.
    komodo_auth:
      type: boolean
      description: Optional, defaults to false. Must be set to true to access RPC nodes run behind komodo-defi-proxy.
SwapV2Contracts:
  type: object
  description: Includes the following items for a given coin or token.
  properties:
    maker_swap_v2_contract:
      type: string
      description: Address for the maker's new V2 swap smart contract.
    taker_swap_v2_contract:
      type: string
      description: Address for the taker's new V2 swap smart contract.
    nft_maker_swap_v2_contract:
      type: string
      description: Address for the maker's new V2 NFT swap smart contract.
TokensRequest:
  type: object
  description: Used for withdrawals of NFTs on ERC721 and ERC1155 contracts.
  properties:
    ticker:
      type: string
      description: Ticker of the token to be enabled.
    required_confirmations:
      type: integer
      description: How many confirmations to wait during the transaction steps of an atomic swap. Overwrites value in coins file; defaults to 3.
UtxoMergeParams:
  type: object
  description: Defines how often and at which thresholds to merge UTXOs.
  properties:
    merge_at:
      type: integer
      description: Mamimum UTXO count before merge loop is initiated.
    check_every:
      type: integer
      description: How frequently (in blocks) the wallet UTXO count is evaluated.
    max_merge_at_once:
      type: integer
      description: The maximum number of UTXOs to inlude as inputs for a merge transaction.

TokenActivationParams:
  type: object
  description: Standard token activation parameters
  properties:
    required_confirmations:
      type: integer
      description: Optional. Confirmations to wait for steps in swap. Defaults to value in the coins file if not set
      minimum: 1
      example: 3

TendermintActivationParams:
  type: object
  description: Tendermint-specific activation parameters
  properties:
    required_confirmations:
      type: integer
      description: Optional. Confirmations to wait for steps in swap. Defaults to value in the coins file if not set
      minimum: 1
      example: 3
    rpc_urls:
      type: array
      description: Optional. List of RPC URLs for the Tendermint network
      items:
        type: string
        format: uri
      example: ["https://rpc.cosmos.network:443"] 