RpcV1Request:
  type: object
  description: Base RPC v1 request structure (legacy format)
  required:
    - method
    - userpass
  properties:
    method:
      type: string
      description: The method name
    userpass:
      type: string
      description: RPC password for authentication
      example: "RPC_UserP@SSW0RD"
    id:
      type: integer
      description: Optional. Identifies a request to allow matching it with a response. Defaults to null
      example: 0

RpcV2Request:
  type: object
  description: Base RPC v2 request structure (current format)
  required:
    - method
    - userpass
    - mmrpc
    - params
  properties:
    method:
      type: string
      description: The method name
    userpass:
      type: string
      description: RPC password for authentication
      example: "RPC_UserP@SSW0RD"
    mmrpc:
      type: string
      enum: ["2.0"]
      description: The JSON-RPC version
      example: "2.0"
    id:
      type: integer
      description: Optional. Identifies a request to allow matching it with a response. Defaults to null
      example: 0
    params:
      type: object
      description: Request parameters

# Deprecated - use RpcV1Request or RpcV2Request instead
RpcRequest:
  type: object
  description: Base RPC request structure (deprecated - use RpcV1Request or RpcV2Request)
  required:
    - method
    - userpass
    - mmrpc
    - params
  properties:
    method:
      type: string
      description: The method name
    userpass:
      type: string
      description: RPC password for authentication
      example: "RPC_UserP@SSW0RD"
    mmrpc:
      type: string
      enum: ["2.0"]
      description: The JSON-RPC version
      example: "2.0"
    id:
      type: integer
      description: Optional. Identifies a request to allow matching it with a response. Defaults to null
      example: 0

RpcResponse:
  type: object
  description: Base RPC response structure
  properties:
    mmrpc:
      type: string
      description: The JSON-RPC version (should be '2.0')
      example: "2.0"
    id:
      type: integer
      description: Identifies a response to allow matching it with a request
      example: 0

RpcSuccessResponse:
  allOf:
    - $ref: '#/RpcResponse'
    - type: object
      properties:
        result:
          type: object
          description: Successful response result

RpcErrorResponse:
  allOf:
    - $ref: '#/RpcResponse'
    - type: object
      properties:
        error:
          type: string
          description: Error message describing what went wrong
        error_path:
          type: string
          description: Path where the error occurred
        error_trace:
          type: string
          description: Error trace information
        error_type:
          type: string
          description: Type of error
        error_data:
          type: string
          description: Additional error data

TradeAction:
  type: string
  enum: ["buy", "sell"]
  description: Trading action - buy or sell

CoinTicker:
  type: string
  description: Cryptocurrency ticker symbol
  pattern: "^[A-Z0-9-]+$"
  example: "KMD"

AmountString:
  type: string
  description: Numeric amount as string to preserve precision
  pattern: "^[0-9]*\\.?[0-9]+$"
  example: "1.5"

PercentageString:
  type: string
  description: Percentage value as string (0-1 range where 0.25 = 25%)
  pattern: "^[0-1](\\.\\d+)?$"
  example: "0.25"

UrlString:
  type: string
  format: uri
  description: Valid URL string
  example: "https://example.com/api"

ConfirmationSettings:
  type: object
  description: Blockchain confirmation settings
  properties:
    confs:
      type: integer
      description: Number of required blockchain confirmations
      minimum: 1
      example: 3
    nota:
      type: boolean
      description: Whether dPoW notarization is required
      example: false 