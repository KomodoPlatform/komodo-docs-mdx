{
	"info": {
		"_postman_id": "GENERATED-ID-LEGACY-METHODS",
		"name": "Komodo DeFi Framework - Legacy Methods",
		"description": "Legacy RPC methods for Komodo DeFi Framework from dispatcher_legacy.rs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Legacy Methods",
			"item": [
				{
					"name": "active_swaps",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments",
									"const rawData = pm.request.body.toString();",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"active_swaps\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "all_swaps_uuids_by_filter",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments",
									"const rawData = pm.request.body.toString();",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"all_swaps_uuids_by_filter\"\n}"
						},
						"description": "Example: {\"params\": {\"type\": \"Maker\", \"from_timestamp\": 0, \"to_timestamp\": 0 }}",
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "ban_pubkey",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"ban_pubkey\",\n    \"pubkey\": \"{{pubkey}}\",\n    \"coin\": \"{{coin}}\",\n    \"base\": \"{{base}}\",\n    \"rel\": \"{{rel}}\",\n    \"price\": \"{{price}}\",\n    \"volume\": \"{{volume}}\",\n    \"uuid\": \"{{uuid}}\",\n    \"address\": \"{{address}}\",\n    \"tx_hex\": \"{{tx_hex}}\",\n    \"to_address_type\": \"transparent\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "best_orders",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"best_orders\",\n    \"coin\": \"{{coin}}\",\n    \"action\": \"buy\",\n    \"type\": \"exact\",\n    \"amount\": \"1\"\n}"
						},
						"description": "Example: { \"request_by_pairs\": true, \"pairs\": [\"KMD/BTC\"], \"volume_type\": \"base\", \"volume\": \"1.0\" }",
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "buy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"buy\",\n    \"base\": \"{{base}}\",\n    \"rel\": \"{{rel}}\",\n    \"price\": \"{{price}}\",\n    \"volume\": \"{{volume}}\",\n    \"uuid\": \"{{uuid}}\",\n    \"address\": \"{{address}}\",\n    \"tx_hex\": \"{{tx_hex}}\",\n    \"to_address_type\": \"transparent\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "cancel_all_orders",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"cancel_all_orders\",\n    \"cancel_by\": {\"type\": \"All\"}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "Example: {\"type\": \"Pair\", \"data\": {\"base\": \"KMD\", \"rel\": \"BTC\"}} | Example: {\"type\": \"Coin\", \"data\": {\"ticker\": \"KMD\"}}",
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "cancel_order",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"cancel_order\",\n    \"uuid\": \"{{uuid}}\",\n    \"address\": \"{{address}}\",\n    \"tx_hex\": \"{{tx_hex}}\",\n    \"to_address_type\": \"transparent\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "coins_needed_for_kick_start",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"coins_needed_for_kick_start\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "convert_utxo_address",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"convert_utxo_address\",\n    \"coin\": \"ARRR\",\n    \"address\": \"PUT_ARRR_SAPLING_ADDRESS_HERE\",\n    \"to_address_type\": \"transparent\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "convertaddress",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"convertaddress\",\n    \"coin\": \"QTUM\",\n    \"address\": \"PUT_QTUM_ADDRESS_HERE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "disable_coin",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"disable_coin\",\n    \"coin\": \"{{coin}}\",\n    \"base\": \"{{base}}\",\n    \"rel\": \"{{rel}}\",\n    \"price\": \"{{price}}\",\n    \"volume\": \"{{volume}}\",\n    \"uuid\": \"{{uuid}}\",\n    \"address\": \"{{address}}\",\n    \"tx_hex\": \"{{tx_hex}}\",\n    \"to_address_type\": \"transparent\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "electrum",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"electrum\",\n    \"coin\": \"{{coin}}\",\n    \"servers\": [ { \"url\": \"electrum1.cipig.net:10000\", \"protocol\": \"TCP\" } ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "enable",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"enable\",\n    \"coin\": \"{{coin}}\",\n    \"urls\": [\"electrum1.cipig.net:10000\", \"electrum2.cipig.net:10000\"], \n    \"tx_history\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "get_directly_connected_peers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"get_directly_connected_peers\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "get_enabled_coins",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"get_enabled_coins\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "get_gossip_mesh",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"get_gossip_mesh\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "get_gossip_peer_topics",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"get_gossip_peer_topics\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "get_gossip_topic_peers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"get_gossip_topic_peers\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "get_my_peer_id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"get_my_peer_id\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "get_relay_mesh",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"get_relay_mesh\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "get_trade_fee",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"get_trade_fee\",\n    \"coin\": \"{{coin}}\",\n    \"base\": \"{{base}}\",\n    \"rel\": \"{{rel}}\",\n    \"price\": \"{{price}}\",\n    \"volume\": \"{{volume}}\",\n    \"uuid\": \"{{uuid}}\",\n    \"address\": \"{{address}}\",\n    \"tx_hex\": \"{{tx_hex}}\",\n    \"to_address_type\": \"transparent\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "help",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"help\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "import_swaps",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"import_swaps\",\n    \"swaps_data\": [] \n    \/\/ Example: {\"swaps_data\": [ { \"uuid\": \"...\", \"maker_coin\": \"KMD\", ... } ] } \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "kmd_rewards_info",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"kmd_rewards_info\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "list_banned_pubkeys",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"list_banned_pubkeys\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "list_known_peers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"list_known_peers\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "list_onion_debug_files",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"list_onion_debug_files\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "max_taker_vol",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"max_taker_vol\",\n    \"coin\": \"{{coin}}\",\n    \"base\": \"{{base}}\",\n    \"rel\": \"{{rel}}\",\n    \"price\": \"{{price}}\",\n    \"volume\": \"{{volume}}\",\n    \"uuid\": \"{{uuid}}\",\n    \"address\": \"{{address}}\",\n    \"tx_hex\": \"{{tx_hex}}\",\n    \"to_address_type\": \"transparent\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "metrics",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"metrics\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "min_trading_vol",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"min_trading_vol\",\n    \"coin\": \"{{coin}}\",\n    \"base\": \"{{base}}\",\n    \"rel\": \"{{rel}}\",\n    \"price\": \"{{price}}\",\n    \"volume\": \"{{volume}}\",\n    \"uuid\": \"{{uuid}}\",\n    \"address\": \"{{address}}\",\n    \"tx_hex\": \"{{tx_hex}}\",\n    \"to_address_type\": \"transparent\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "my_balance",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"my_balance\",\n    \"coin\": \"{{coin}}\",\n    \"base\": \"{{base}}\",\n    \"rel\": \"{{rel}}\",\n    \"price\": \"{{price}}\",\n    \"volume\": \"{{volume}}\",\n    \"uuid\": \"{{uuid}}\",\n    \"address\": \"{{address}}\",\n    \"tx_hex\": \"{{tx_hex}}\",\n    \"to_address_type\": \"transparent\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "my_orders",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"my_orders\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "my_recent_swaps",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"my_recent_swaps\",\n    \"limit\": 10,\n    \"from_uuid\": null \n    \/\/ Example: {\"limit\": 5, \"from_uuid\": \"some_uuid\"} \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "my_swap_status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"my_swap_status\",\n    \"params\": {\"uuid\": \"{{uuid}}\", \"address\": \"{{address}}\", \"tx_hex\": \"{{tx_hex}}\", \"to_address_type\": \"transparent\"} \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "order_status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"order_status\",\n    \"uuid\": \"{{uuid}}\",\n    \"address\": \"{{address}}\",\n    \"tx_hex\": \"{{tx_hex}}\",\n    \"to_address_type\": \"transparent\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "orderbook",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"orderbook\",\n    \"base\": \"{{base}}\",\n    \"rel\": \"{{rel}}\",\n    \"price\": \"{{price}}\",\n    \"volume\": \"{{volume}}\",\n    \"uuid\": \"{{uuid}}\",\n    \"address\": \"{{address}}\",\n    \"tx_hex\": \"{{tx_hex}}\",\n    \"to_address_type\": \"transparent\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "orderbook_depth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"orderbook_depth\",\n    \"pairs\": [\"KMD/BTC\", \"RICK/MORTY\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "orders_history_by_filter",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"orders_history_by_filter\",\n    \"filter\": { \"type\": \"All\", \"from_timestamp\": 0, \"to_timestamp\": 0, \"include_status\": \"All\" } \n    // Example: {\"type\": \"Maker\", ... } \n    // Example: {\"type\": \"Taker\", ... } \n    // Example: {\"include_status\": \"Cancelled\"} \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "peers_info",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"peers_info\",\n    \"show_all_peers\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "ping",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"ping\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "remove_gossip_peer_topics",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"remove_gossip_peer_topics\",\n    \"remove_from_all_peers\": true,\n    \"topics\": [\"topic1\", \"topic2\"]\n    // Example: { \"peers\": [\"peer_id1\", \"peer_id2\"], \"topics\": [\"topic_a\"] }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "remove_gossip_topic_peers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"remove_gossip_topic_peers\",\n    \"remove_from_all_topics\": true,\n    \"peers\": [\"peer_id1\", \"peer_id2\"]\n    // Example: { \"topics\": [\"topic_a\", \"topic_b\"], \"peers\": [\"peer_id_x\"] }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "sell",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"sell\",\n    \"base\": \"{{base}}\",\n    \"rel\": \"{{rel}}\",\n    \"price\": \"{{price}}\",\n    \"volume\": \"{{volume}}\",\n    \"uuid\": \"{{uuid}}\",\n    \"address\": \"{{address}}\",\n    \"tx_hex\": \"{{tx_hex}}\",\n    \"to_address_type\": \"transparent\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "send_raw_transaction",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"send_raw_transaction\",\n    \"coin\": \"{{coin}}\",\n    \"tx_hex\": \"{{tx_hex}}\",\n    \"to_address_type\": \"transparent\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "set_gossip_mesh",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"set_gossip_mesh\",\n    \"gossip_mesh_params\": { \"mesh_n_high\": 8, \"mesh_n_low\": 2, \"mesh_outbound_min\": 1, \"mesh_n\": 3 }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "set_gossip_peer_topics",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"set_gossip_peer_topics\",\n    \"set_for_all_peers\": true,\n    \"topics\": [\"topic_all_1\", \"topic_all_2\"]\n    // Example: {\"peers\": [\"peer_id_A\"], \"topics\": [\"topic_A1\", \"topic_A2\"]} \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "set_gossip_topic_peers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"set_gossip_topic_peers\",\n    \"set_for_all_topics\": true,\n    \"peers\": [\"peer_all_1\", \"peer_all_2\"]\n    // Example: {\"topics\": [\"topic_X\"], \"peers\": [\"peer_X1\", \"peer_X2\"]} \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "set_proactive_node_addresses",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"set_proactive_node_addresses\",\n    \"node_addresses\": [\"127.0.0.1:12345\", \"192.168.1.100:54321\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "set_relay_mesh",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"set_relay_mesh\",\n    \"relays\": 5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "setprice",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"setprice\",\n    \"base\": \"{{base}}\",\n    \"rel\": \"{{rel}}\",\n    \"price\": \"{{price}}\",\n    \"volume\": \"{{volume}}\",\n    \"cancel_previous\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "sim_panic",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"sim_panic\",\n    \"message\": \"Test panic message\",\n    \"panic_type\": \"fatal\" \n    // \"panic_type\": \"non_fatal\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "speed_test_for_connected_nodes",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"speed_test_for_connected_nodes\",\n    \"wait_for_response\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "start_version_stat_collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"start_version_stat_collection\",\n    \"interval_seconds\": 3600,\n    \"folder_path\": \"stats_folder\" \n    // Example: { \"interval_seconds\": 60, \"folder_path\": \"my_mm_stats\" }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "stats_provider_url",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"stats_provider_url\",\n    \"new_url\": \"https://my.stats.provider.com/api\" \n    // Example: { \"new_url\": null } to disable \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "stop_version_stat_collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"stop_version_stat_collection\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "stop",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"stop\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "trade_preimage",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"trade_preimage\",\n    \"pair\": [\"KMD\", \"BTC\"],\n    \"volume\": \"1\",\n    \"price\": \"{{price}}\",\n    \"uuid\": \"{{uuid}}\",\n    \"address\": \"{{address}}\",\n    \"tx_hex\": \"{{tx_hex}}\",\n    \"to_address_type\": \"transparent\"\n    // Example: { \"pair\": [\"KMD\", \"BTC\"], \"volume\": \"1.0\", \"price\": \"0.001\", \"aggregator_params\": { \"exclude_sources\": [\"Binance\"] } } \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "trades_by_gui_filter",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"trades_by_gui_filter\",\n    \"trade_type\": \"All\",\n    \"pair_str\": \"All\",\n    \"from_timestamp\": 0,\n    \"to_timestamp\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "unban_pubkeys",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"unban_pubkeys\",\n    \"pubkeys\": [\"{{pubkey}}1\", \"{{pubkey}}2\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "update_maker_order",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"update_maker_order\",\n    \"uuid\": \"{{uuid}}\",\n    \"new_price\": \"{{price}}\",\n    \"address\": \"{{address}}\",\n    \"tx_hex\": \"{{tx_hex}}\",\n    \"to_address_type\": \"transparent\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "validateaddress",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"validateaddress\",\n    \"coin\": \"{{coin}}\",\n    \"address\": \"{{address}}\",\n    \"base\": \"{{base}}\",\n    \"rel\": \"{{rel}}\",\n    \"price\": \"{{price}}\",\n    \"volume\": \"{{volume}}\",\n    \"uuid\": \"{{uuid}}\",\n    \"tx_hex\": \"{{tx_hex}}\",\n    \"to_address_type\": \"transparent\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "version",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"version\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				},
				{
					"name": "withdraw",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Strip JSON Comments\\r",
									"const rawData = pm.request.body.toString();\\r",
									"const strippedData = rawData.replace(/\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g, (m, g) => g ? \"\" : m);",
									"pm.request.body.raw = strippedData;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userpass\": \"{{userpass}}\",\n    \"method\": \"withdraw\",\n    \"coin\": \"{{coin}}\",\n    \"to\": \"{{address}}\",\n    \"amount\": \"1.0\" \n    // Example: { \"max\": true } to withdraw all \n    // Example for ETH/ERC20: { \"fee\": { \"type\": \"EthGas\", \"gas_price\": \"100\", \"gas\": 21000 } } \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mmhost}}:{{mmport}}",
							"host": [
								"{{mmhost}}"
							],
							"port": "{{mmport}}"
						}
					},
					"response": []
				}
			]
		}
	]
} 