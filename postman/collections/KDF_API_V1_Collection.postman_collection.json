{
  "info": {
    "_postman_id": "c6570eb8-5a1b-47f3-abc2-d053dcfbe51c",
    "name": "Komodo DeFi Framework API - V1",
    "description": {
      "content": "\n# Komodo DeFi Framework API - V1\n\nThis collection provides a comprehensive set of executable examples for the Komodo DeFi Framework API vv1. It includes **86 requests** covering a wide range of functionalities, from coin activation and trading to wallet management and real-time streaming.\n\n## Getting Started\n\n1.  **Install the Environment**: Make sure to import and select the corresponding **Komodo DeFi Framework - V1** environment. This contains essential variables like `userpass`, `address`, and `port`.\n2.  **Run `mm2`**: Ensure an instance of the Komodo DeFi daemon (`mm2`) is running and accessible at the address specified in your environment variables.\n3.  **Explore and Execute**: Navigate through the folders to find the methods you're interested in. Each request is pre-configured to work with the provided environment.\n\n## Collection Structure\n\nThe collection is organized into folders based on functionality:\n- **Coin & Token Activation**: Methods for enabling coins and tokens.\n- **Trading & Orders**: Everything related to order placement, swaps, and market data.\n- **Wallet Management**: Operations for checking balances, transaction history, etc.\n- **And more...**\n\nEach request includes a description that links back to the official documentation for more details.\n\n---\n*Generated by the Komodo Docs Team on 2025-06-29*\n",
      "type": "text/markdown"
    },
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Coin & Token Activation",
      "item": [
        {
          "name": "enable - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"enable\", \"coin\": \"{{coin}}\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `enable`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **enable** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/enable/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for enable\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "get_enabled_coins - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"get_enabled_coins\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `get_enabled_coins`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **get_enabled_coins** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/get_enabled_coins/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for get_enabled_coins\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        }
      ],
      "description": "Methods for activating coins, tokens, and blockchain protocols"
    },
    {
      "name": "Task Management",
      "item": [
        {
          "name": "cancel_all_orders - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"cancel_all_orders\", \"cancel_by\": {\"type\": \"All\"}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `cancel_all_orders`\n**Operation**: `cancel`\n\nThis request demonstrates the **cancel** operation for the **cancel_all_orders** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/cancel_all_orders/cancel/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for cancel_all_orders\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "cancel_all_orders - Request 2",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"cancel_all_orders\", \"cancel_by\": {\"type\": \"Pair\", \"data\": {\"base\": \"DOC\", \"rel\": \"MARTY\"}}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `cancel_all_orders`\n**Operation**: `cancel`\n\nThis request demonstrates the **cancel** operation for the **cancel_all_orders** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/cancel_all_orders/cancel/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for cancel_all_orders\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "cancel_all_orders - Request 3",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"cancel_all_orders\", \"cancel_by\": {\"type\": \"Coin\", \"data\": {\"ticker\": \"DOC\"}}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `cancel_all_orders`\n**Operation**: `cancel`\n\nThis request demonstrates the **cancel** operation for the **cancel_all_orders** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/cancel_all_orders/cancel/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for cancel_all_orders\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "order_status - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"order_status\", \"uuid\": \"c3b3105c-e914-4ed7-9f1c-604783b054a1\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `order_status`\n**Operation**: `status`\n\nThis request demonstrates the **status** operation for the **order_status** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/order_status/status/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for order_status\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        }
      ],
      "description": "Asynchronous task operations and status monitoring"
    },
    {
      "name": "Trading & Orders",
      "item": [
        {
          "name": "active_swaps - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"active_swaps\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `active_swaps`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **active_swaps** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/active_swaps/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for active_swaps\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "active_swaps - Request 2",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"active_swaps\", \"include_status\": true}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `active_swaps`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **active_swaps** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/active_swaps/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for active_swaps\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "all_swaps_uuids_by_filter - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"all_swaps_uuids_by_filter\", \"my_coin\": \"DOC\", \"other_coin\": \"MARTY\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `all_swaps_uuids_by_filter`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **all_swaps_uuids_by_filter** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/all_swaps_uuids_by_filter/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for all_swaps_uuids_by_filter\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "all_swaps_uuids_by_filter - Request 2",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"all_swaps_uuids_by_filter\", \"my_coin\": \"DOC\", \"from_timestamp\": 1611705600}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `all_swaps_uuids_by_filter`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **all_swaps_uuids_by_filter** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/all_swaps_uuids_by_filter/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for all_swaps_uuids_by_filter\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "all_swaps_uuids_by_filter - Request 3",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"all_swaps_uuids_by_filter\", \"my_coin\": \"DOC\", \"from_timestamp\": 1611705600, \"to_timestamp\": 1611792001}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `all_swaps_uuids_by_filter`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **all_swaps_uuids_by_filter** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/all_swaps_uuids_by_filter/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for all_swaps_uuids_by_filter\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "best_orders - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"best_orders\", \"coin\": \"{{coin}}\", \"action\": \"buy\", \"volume\": \"1\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `best_orders`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **best_orders** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/best_orders/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for best_orders\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "buy - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"buy\", \"base\": \"{{base}}\", \"rel\": \"{{rel}}\", \"price\": 1.1, \"volume\": 2.4}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `buy`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **buy** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/buy/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for buy\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "cancel_order - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"cancel_order\", \"uuid\": \"6a242691-6c05-474a-85c1-5b3f42278f41\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `cancel_order`\n**Operation**: `cancel`\n\nThis request demonstrates the **cancel** operation for the **cancel_order** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/cancel_order/cancel/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for cancel_order\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "get_trade_fee - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"get_trade_fee\", \"coin\": \"{{coin}}\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `get_trade_fee`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **get_trade_fee** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/get_trade_fee/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for get_trade_fee\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "import_swaps - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"import_swaps\", \"swaps\": [{\"error_events\": [\"StartFailed\", \"NegotiateFailed\", \"TakerFeeSendFailed\", \"MakerPaymentValidateFailed\", \"TakerPaymentTransactionFailed\", \"TakerPaymentDataSendFailed\", \"TakerPaymentWaitForSpendFailed\", \"MakerPaymentSpendFailed\", \"TakerPaymentRefunded\", \"TakerPaymentRefundFailed\"], \"events\": [{\"event\": {\"data\": {\"lock_duration\": 7800, \"maker\": \"631dcf1d4b1b693aa8c2751afc68e4794b1e5996566cfc701a663f8b7bbbe640\", \"maker_amount\": \"3\", \"maker_coin\": \"BEER\", \"maker_coin_start_block\": 156186, \"maker_payment_confirmations\": 0, \"maker_payment_wait\": 1568883784, \"my_persistent_pub\": \"02031d4256c4bc9f99ac88bf3dba21773132281f65f9bf23a59928bce08961e2f3\", \"started_at\": 1568881184, \"taker_amount\": \"4\", \"taker_coin\": \"ETOMIC\", \"taker_coin_start_block\": 175041, \"taker_payment_confirmations\": 1, \"taker_payment_lock\": 1568888984, \"uuid\": \"07ce08bf-3db9-4dd8-a671-854affc1b7a3\"}, \"type\": \"Started\"}, \"timestamp\": 1568881185316}, {\"event\": {\"data\": {\"maker_payment_locktime\": 1568896784, \"maker_pubkey\": \"02631dcf1d4b1b693aa8c2751afc68e4794b1e5996566cfc701a663f8b7bbbe640\", \"secret_hash\": \"eba736c5cc9bb33dee15b4a9c855a7831a484d84\"}, \"type\": \"Negotiated\"}, \"timestamp\": 1568881246025}, {\"event\": {\"data\": {\"tx_hash\": \"0c07be4dda88d8d75374496aa0f27e12f55363ce8d558cb5feecc828545e5f87\", \"tx_hex\": \"0400008085202f890146b98696761d5e8667ffd665b73e13a8400baab4b22230a7ede0e4708597ee9c000000006a473044022077acb70e5940dfe789faa77e72b34f098abbf0974ea94a0380db157e243965230220614ec4966db0a122b0e7c23aa0707459b3b4f8241bb630c635cf6e943e96362e012102031d4256c4bc9f99ac88bf3dba21773132281f65f9bf23a59928bce08961e2f3ffffffff02f0da0700000000001976a914ca1e04745e8ca0c60d8c5881531d51bec470743f88ac68630700000000001976a91405aab5342166f8594baf17a7d9bef5d56744332788ac5e3a835d000000000000000000000000000000\"}, \"type\": \"TakerFeeSent\"}, \"timestamp\": 1568881250689}, {\"event\": {\"data\": {\"tx_hash\": \"31d97b3359bdbdfbd241e7706c90691e4d7c0b7abd27f2b22121be7f71c5fd06\", \"tx_hex\": \"0400008085202f8901b4679094d4bf74f52c9004107cb9641a658213d5e9950e42a8805824e801ffc7010000006b483045022100b2e49f8bdc5a4b6c404e10150872dbec89a46deb13a837d3251c0299fe1066ca022012cbe6663106f92aefce88238b25b53aadd3522df8290ced869c3cc23559cc23012102631dcf1d4b1b693aa8c2751afc68e4794b1e5996566cfc701a663f8b7bbbe640ffffffff0200a3e1110000000017a91476e1998b0cd18da5f128e5bb695c36fbe6d957e98764c987c9bf0000001976a91464ae8510aac9546d5e7704e31ce177451386455588ac753a835d000000000000000000000000000000\"}, \"type\": \"MakerPaymentReceived\"}, \"timestamp\": 1568881291571}, {\"event\": {\"type\": \"MakerPaymentWaitConfirmStarted\"}, \"timestamp\": 1568881291571}, {\"event\": {\"type\": \"MakerPaymentValidatedAndConfirmed\"}, \"timestamp\": 1568881291985}, {\"event\": {\"data\": {\"tx_hash\": \"95926ab204049edeadb370c17a1168d9d79ee5747d8d832f73cfddf1c74f3961\", \"tx_hex\": \"0400008085202f8902875f5e5428c8ecfeb58c558dce6353f5127ef2a06a497453d7d888da4dbe070c010000006a4730440220416059356dc6dde0ddbee206e456698d7e54c3afa92132ecbf332e8c937e5383022068a41d9c208e8812204d4b0d21749b2684d0eea513467295e359e03c5132e719012102031d4256c4bc9f99ac88bf3dba21773132281f65f9bf23a59928bce08961e2f3ffffffff46b98696761d5e8667ffd665b73e13a8400baab4b22230a7ede0e4708597ee9c010000006b483045022100a990c798d0f96fd5ff7029fd5318f3c742837400d9f09a002e7f5bb1aeaf4e5a0220517dbc16713411e5c99bb0172f295a54c97aaf4d64de145eb3c5fa0fc38b67ff012102031d4256c4bc9f99ac88bf3dba21773132281f65f9bf23a59928bce08961e2f3ffffffff020084d7170000000017a9144d57b4930e6c86493034f17aa05464773625de1c877bd0de03010000001976a91405aab5342166f8594baf17a7d9bef5d56744332788ac8c3a835d000000000000000000000000000000\"}, \"type\": \"TakerPaymentSent\"}, \"timestamp\": 1568881296904}, {\"event\": {\"data\": {\"secret\": \"fb968d5460399f20ffd09906dc8f65c21fbb5cb8077a8e6d7126d0526586ca96\", \"transaction\": {\"tx_hash\": \"68f5ec617bd9a4a24d7af0ce9762d87f7baadc13a66739fd4a2575630ecc1827\", \"tx_hex\": \"0400008085202f890161394fc7f1ddcf732f838d7d74e59ed7d968117ac170b3adde9e0404b26a929500000000d8483045022100a33d976cf509d6f9e66c297db30c0f44cced2241ee9c01c5ec8d3cbbf3d41172022039a6e02c3a3c85e3861ab1d2f13ba52677a3b1344483b2ae443723ba5bb1353f0120fb968d5460399f20ffd09906dc8f65c21fbb5cb8077a8e6d7126d0526586ca96004c6b63049858835db1752102031d4256c4bc9f99ac88bf3dba21773132281f65f9bf23a59928bce08961e2f3ac6782012088a914eba736c5cc9bb33dee15b4a9c855a7831a484d84882102631dcf1d4b1b693aa8c2751afc68e4794b1e5996566cfc701a663f8b7bbbe640ac68ffffffff011880d717000000001976a91464ae8510aac9546d5e7704e31ce177451386455588ac942c835d000000000000000000000000000000\"}}, \"type\": \"TakerPaymentSpent\"}, \"timestamp\": 1568881328643}, {\"event\": {\"data\": {\"error\": \"taker_swap:798] utxo:950] utxo:950] error\"}, \"type\": \"MakerPaymentSpendFailed\"}, \"timestamp\": 1568881328645}, {\"event\": {\"type\": \"Finished\"}, \"timestamp\": 1568881328648}], \"my_info\": {\"my_amount\": \"4\", \"my_coin\": \"ETOMIC\", \"other_amount\": \"3\", \"other_coin\": \"BEER\", \"started_at\": 1568881184}, \"recoverable\": true, \"success_events\": [\"Started\", \"Negotiated\", \"TakerFeeSent\", \"MakerPaymentReceived\", \"MakerPaymentWaitConfirmStarted\", \"MakerPaymentValidatedAndConfirmed\", \"TakerPaymentSent\", \"TakerPaymentSpent\", \"MakerPaymentSpent\", \"Finished\"], \"type\": \"Taker\", \"uuid\": \"07ce08bf-3db9-4dd8-a671-854affc1b7a3\"}]}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `import_swaps`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **import_swaps** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/import_swaps/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for import_swaps\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "my_recent_swaps - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"my_recent_swaps\", \"limit\": 2, \"my_coin\": \"DOC\", \"other_coin\": \"MARTY\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `my_recent_swaps`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **my_recent_swaps** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/my_recent_swaps/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for my_recent_swaps\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "my_swap_status - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"method\": \"my_swap_status\", \"params\": {\"uuid\": \"3d2286d1-1eef-487b-a07a-904f33034792\"}, \"userpass\": \"{{userpass}}\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `my_swap_status`\n**Operation**: `status`\n\nThis request demonstrates the **status** operation for the **my_swap_status** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/my_swap_status/status/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for my_swap_status\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "orderbook - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"orderbook\", \"base\": \"{{base}}\", \"rel\": \"{{rel}}\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `orderbook`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **orderbook** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/orderbook/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for orderbook\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "orderbook_depth - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"orderbook_depth\", \"pairs\": [[\"DOC\", \"MARTY\"], [\"BTC\", \"KMD\"], [\"DOGE\", \"KMD\"]]}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `orderbook_depth`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **orderbook_depth** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/orderbook_depth/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for orderbook_depth\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "recover_funds_of_swap - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"recover_funds_of_swap\", \"params\": {\"uuid\": \"6343b2b1-c896-47d4-b0f2-a11798f654ed\"}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `recover_funds_of_swap`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **recover_funds_of_swap** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/recover_funds_of_swap/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for recover_funds_of_swap\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "sell - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"sell\", \"base\": \"{{base}}\", \"rel\": \"{{rel}}\", \"price\": 1.1, \"volume\": 2.4}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `sell`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **sell** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/sell/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for sell\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "stats_swap_status - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"method\": \"stats_swap_status\", \"userpass\": \"{{userpass}}\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `stats_swap_status`\n**Operation**: `status`\n\nThis request demonstrates the **status** operation for the **stats_swap_status** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/stats_swap_status/status/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for stats_swap_status\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "trade_preimage - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"trade_preimage\", \"base\": \"{{base}}\", \"rel\": \"{{rel}}\", \"price\": \"1\", \"volume\": \"0.1\", \"swap_method\": \"setprice\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `trade_preimage`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **trade_preimage** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/trade_preimage/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for trade_preimage\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "trade_preimage - Request 2",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"trade_preimage\", \"base\": \"{{base}}\", \"rel\": \"{{rel}}\", \"price\": \"1\", \"volume\": \"0.1\", \"swap_method\": \"buy\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `trade_preimage`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **trade_preimage** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/trade_preimage/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for trade_preimage\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "trade_preimage - Request 3",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"trade_preimage\", \"base\": \"{{base}}\", \"rel\": \"{{rel}}\", \"price\": \"1\", \"volume\": \"2.21363478\", \"swap_method\": \"setprice\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `trade_preimage`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **trade_preimage** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/trade_preimage/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for trade_preimage\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Setprice",
          "item": [
            {
              "name": "setprice - Request 1",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"setprice\", \"base\": \"{{base}}\", \"rel\": \"{{rel}}\", \"price\": \"0.9\", \"volume\": \"1\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `setprice`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **setprice** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/setprice/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for setprice\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "setprice - Request 2",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"setprice\", \"base\": \"{{base}}\", \"rel\": \"{{rel}}\", \"price\": \"0.9\", \"max\": true}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `setprice`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **setprice** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/setprice/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for setprice\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "setprice - Request 3",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"setprice\", \"base\": \"{{base}}\", \"rel\": \"{{rel}}\", \"volume\": [[1, [1]], [1, [1]]], \"price\": [[1, [1]], [1, [1]]]}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `setprice`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **setprice** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/setprice/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for setprice\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "setprice - Request 4",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"setprice\", \"base\": \"{{base}}\", \"rel\": \"{{rel}}\", \"volume\": {\"numer\": \"3\", \"denom\": \"2\"}, \"price\": {\"numer\": \"2\", \"denom\": \"1\"}}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `setprice`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **setprice** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/setprice/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for setprice\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "setprice - Request 5",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"setprice\", \"base\": \"{{base}}\", \"rel\": \"{{rel}}\", \"volume\": {\"numer\": \"3\", \"denom\": \"2\"}, \"price\": {\"numer\": \"2\", \"denom\": \"1\"}, \"min_volume\": \"1\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `setprice`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **setprice** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/setprice/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for setprice\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "setprice - Request 6",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"setprice\", \"base\": \"{{base}}\", \"rel\": \"{{rel}}\", \"volume\": {\"numer\": \"3\", \"denom\": \"2\"}, \"price\": {\"numer\": \"2\", \"denom\": \"1\"}, \"base_confs\": 2, \"base_nota\": true, \"rel_confs\": 5, \"rel_nota\": false}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `setprice`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **setprice** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/setprice/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for setprice\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "setprice - Request 7",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"setprice\", \"base\": \"{{base}}\", \"rel\": \"{{rel}}\", \"volume\": {\"numer\": \"4\", \"denom\": \"3\"}, \"price\": {\"numer\": \"7\", \"denom\": \"12\"}, \"save_in_history\": false}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `setprice`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **setprice** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/setprice/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for setprice\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ],
          "description": "Examples for the setprice method"
        }
      ],
      "description": "Order placement, trading, and market operations"
    },
    {
      "name": "Utility & Information",
      "item": [
        {
          "name": "autoprice - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"method\": \"autoprice\", \"base\": \"{{base}}\", \"rel\": \"{{rel}}\", \"userpass\": \"{{userpass}}\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `autoprice`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **autoprice** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/autoprice/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for autoprice\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "ban_pubkey - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"ban_pubkey\", \"pubkey\": \"2cd3021a2197361fb70b862c412bc8e44cff6951fa1de45ceabfdd9b4c520420\", \"reason\": \"test\", \"duration_min\": 15}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `ban_pubkey`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **ban_pubkey** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/ban_pubkey/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for ban_pubkey\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "coins_needed_for_kick_start - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"coins_needed_for_kick_start\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `coins_needed_for_kick_start`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **coins_needed_for_kick_start** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/coins_needed_for_kick_start/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for coins_needed_for_kick_start\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "convert_utxo_address - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"convert_utxo_address\", \"coin\": \"{{coin}}\", \"address\": \"{{address}}\", \"to_coin\": \"RVN\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `convert_utxo_address`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **convert_utxo_address** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/convert_utxo_address/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for convert_utxo_address\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "convertaddress - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"convertaddress\", \"coin\": \"{{coin}}\", \"from\": \"0xfb6916095ca1df60bb79ce92ce3ea74c37c5d359\", \"to_address_format\": {\"format\": \"mixedcase\"}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `convertaddress`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **convertaddress** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/convertaddress/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for convertaddress\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "disable_coin - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"disable_coin\", \"coin\": \"{{coin}}\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `disable_coin`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **disable_coin** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/disable_coin/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for disable_coin\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "electrum - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"coin\": \"{{coin}}\", \"method\": \"electrum\", \"servers\": [{\"url\": \"electrum1.cipig.net:10063\", \"protocol\": \"TCP\"}, {\"url\": \"electrum2.cipig.net:20063\", \"protocol\": \"SSL\", \"disable_cert_verification\": true}, {\"url\": \"electrum3.cipig.net:20063\", \"protocol\": \"SSL\", \"ws_url\": \"electrum3.cipig.net:30063\"}], \"min_connected\": 1, \"max_connected\": 2, \"userpass\": \"{{userpass}}\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `electrum`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **electrum** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/electrum/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for electrum\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "fundvalue - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"method\": \"fundvalue\", \"userpass\": \"{{userpass}}\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `fundvalue`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **fundvalue** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/fundvalue/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for fundvalue\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "help - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"help\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `help`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **help** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/help/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for help\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "inventory - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"method\": \"inventory\", \"userpass\": \"{{userpass}}\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `inventory`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **inventory** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/inventory/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for inventory\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "kmd_rewards_info - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"kmd_rewards_info\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `kmd_rewards_info`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **kmd_rewards_info** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/kmd_rewards_info/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for kmd_rewards_info\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "list_banned_pubkeys - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"list_banned_pubkeys\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `list_banned_pubkeys`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **list_banned_pubkeys** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/list_banned_pubkeys/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for list_banned_pubkeys\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "max_taker_vol - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"method\": \"max_taker_vol\", \"coin\": \"{{coin}}\", \"userpass\": \"{{userpass}}\", \"mm2\": 1}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `max_taker_vol`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **max_taker_vol** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/max_taker_vol/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for max_taker_vol\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "metrics - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"method\": \"metrics\", \"userpass\": \"{{userpass}}\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `metrics`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **metrics** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/metrics/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for metrics\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "min_trading_vol - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"min_trading_vol\", \"coin\": \"{{coin}}\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `min_trading_vol`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **min_trading_vol** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/min_trading_vol/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for min_trading_vol\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "my_orders - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"my_orders\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `my_orders`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **my_orders** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/my_orders/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for my_orders\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "send_raw_transaction - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"send_raw_transaction\", \"coin\": \"{{coin}}\", \"tx_hex\": \"0400008085202f8902d6a5b976db5e5c9e8f9ead50713b25f22cd061edc8ff0ff1049fd2cd775ba087000000006b483045022100bf2073c1ecfef3fc78f272045f46a722591401f61c2d2fac87fc474a17df7c3102200ca1bd0664ba75f3383e5cbbe96127ad534a86238dbea256e000b0fe2067ab8c012102031d4256c4bc9f99ac88bf3dba21773132281f65f9bf23a59928bce08961e2f3ffffffffd04d4e07ac5dacd08fb76e08d2a435fc4fe2b16eb0158695c820b44f42f044cb010000006a47304402200a0c21e8c0ae4a740f3663fe08aeff02cea6495157d531045b58d2dd79fb802702202f80dddd264db33f55e49799363997a175d39a91242a95f268c40f7ced97030b012102031d4256c4bc9f99ac88bf3dba21773132281f65f9bf23a59928bce08961e2f3ffffffff0200e1f505000000001976a91405aab5342166f8594baf17a7d9bef5d56744332788acc3b3ca27000000001976a91405aab5342166f8594baf17a7d9bef5d56744332788ac00000000000000000000000000000000000000\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `send_raw_transaction`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **send_raw_transaction** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/send_raw_transaction/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for send_raw_transaction\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "set_required_confirmations - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"set_required_confirmations\", \"coin\": \"{{coin}}\", \"confirmations\": 3}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `set_required_confirmations`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **set_required_confirmations** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/set_required_confirmations/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for set_required_confirmations\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "set_requires_notarization - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"set_requires_notarization\", \"coin\": \"{{coin}}\", \"requires_notarization\": true}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `set_requires_notarization`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **set_requires_notarization** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/set_requires_notarization/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for set_requires_notarization\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "show_priv_key - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"show_priv_key\", \"coin\": \"{{coin}}\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `show_priv_key`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **show_priv_key** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/show_priv_key/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for show_priv_key\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "stop - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"stop\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `stop`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **stop** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/stop/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for stop\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "unban_pubkeys - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"unban_pubkeys\", \"unban_by\": {\"type\": \"All\"}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `unban_pubkeys`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **unban_pubkeys** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/unban_pubkeys/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for unban_pubkeys\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "unban_pubkeys - Request 2",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"unban_pubkeys\", \"unban_by\": {\"type\": \"Few\"}, \"data\": [\"2cd3021a2197361fb70b862c412bc8e44cff6951fa1de45ceabfdd9b4c520420\", \"2cd3021a2197361fb70b862c412bc8e44cff6951fa1de45ceabfdd9b4c520422\"]}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `unban_pubkeys`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **unban_pubkeys** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/unban_pubkeys/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for unban_pubkeys\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "validateaddress - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"validateaddress\", \"coin\": \"{{coin}}\", \"address\": \"{{address}}\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `validateaddress`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **validateaddress** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/validateaddress/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for validateaddress\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "version - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"method\": \"version\", \"userpass\": \"{{userpass}}\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `version`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **version** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/version/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for version\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get",
          "item": [
            {
              "name": "get_directly_connected_peers - Request 1",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"get_directly_connected_peers\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `get_directly_connected_peers`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **get_directly_connected_peers** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/get_directly_connected_peers/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for get_directly_connected_peers\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "get_gossip_mesh - Request 1",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"get_gossip_mesh\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `get_gossip_mesh`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **get_gossip_mesh** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/get_gossip_mesh/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for get_gossip_mesh\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "get_gossip_peer_topics - Request 1",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"get_gossip_peer_topics\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `get_gossip_peer_topics`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **get_gossip_peer_topics** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/get_gossip_peer_topics/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for get_gossip_peer_topics\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "get_gossip_topic_peers - Request 1",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"get_gossip_topic_peers\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `get_gossip_topic_peers`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **get_gossip_topic_peers** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/get_gossip_topic_peers/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for get_gossip_topic_peers\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "get_my_peer_id - Request 1",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"get_my_peer_id\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `get_my_peer_id`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **get_my_peer_id** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/get_my_peer_id/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for get_my_peer_id\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "get_relay_mesh - Request 1",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"get_relay_mesh\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `get_relay_mesh`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **get_relay_mesh** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/get_relay_mesh/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for get_relay_mesh\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ],
          "description": "Examples for the get method"
        },
        {
          "name": "Orders",
          "item": [
            {
              "name": "orders_history_by_filter - Request 1",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"orders_history_by_filter\", \"order_type\": \"Taker\", \"initial_action\": \"Buy\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `orders_history_by_filter`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **orders_history_by_filter** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/orders_history_by_filter/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for orders_history_by_filter\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "orders_history_by_filter - Request 2",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"orders_history_by_filter\", \"base\": \"{{base}}\", \"rel\": \"{{rel}}\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `orders_history_by_filter`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **orders_history_by_filter** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/orders_history_by_filter/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for orders_history_by_filter\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "orders_history_by_filter - Request 3",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"orders_history_by_filter\", \"base\": \"{{base}}\", \"from_price\": 1, \"to_volume\": 1}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `orders_history_by_filter`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **orders_history_by_filter** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/orders_history_by_filter/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for orders_history_by_filter\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "orders_history_by_filter - Request 4",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"orders_history_by_filter\", \"was_taker\": true, \"from_timestamp\": 1611705600}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `orders_history_by_filter`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **orders_history_by_filter** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/orders_history_by_filter/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for orders_history_by_filter\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "orders_history_by_filter - Request 5",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"orders_history_by_filter\", \"status\": \"Timed Out\", \"include_details\": true}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `orders_history_by_filter`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **orders_history_by_filter** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/orders_history_by_filter/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for orders_history_by_filter\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ],
          "description": "Examples for the orders method"
        },
        {
          "name": "Update",
          "item": [
            {
              "name": "update_maker_order - Request 1",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"update_maker_order\", \"uuid\": \"6a242691-6c05-474a-85c1-5b3f42278f41\", \"new_price\": \"0.9\", \"volume_delta\": \"1\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `update_maker_order`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **update_maker_order** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/update_maker_order/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for update_maker_order\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "update_maker_order - Request 2",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"update_maker_order\", \"uuid\": \"6a242691-6c05-474a-85c1-5b3f42278f41\", \"new_price\": \"0.9\", \"max\": true}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `update_maker_order`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **update_maker_order** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/update_maker_order/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for update_maker_order\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "update_maker_order - Request 3",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"update_maker_order\", \"uuid\": \"6a242691-6c05-474a-85c1-5b3f42278f41\", \"volume_delta\": [[1, [1]], [1, [1]]], \"new_price\": [[1, [1]], [1, [1]]]}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `update_maker_order`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **update_maker_order** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/update_maker_order/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for update_maker_order\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "update_maker_order - Request 4",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"update_maker_order\", \"uuid\": \"6a242691-6c05-474a-85c1-5b3f42278f41\", \"volume_delta\": {\"numer\": \"3\", \"denom\": \"2\"}, \"new_price\": {\"numer\": \"2\", \"denom\": \"1\"}}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `update_maker_order`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **update_maker_order** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/update_maker_order/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for update_maker_order\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "update_maker_order - Request 5",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"update_maker_order\", \"uuid\": \"6a242691-6c05-474a-85c1-5b3f42278f41\", \"volume_delta\": {\"numer\": \"3\", \"denom\": \"2\"}, \"new_price\": {\"numer\": \"2\", \"denom\": \"1\"}, \"min_volume\": \"1\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `update_maker_order`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **update_maker_order** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/update_maker_order/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for update_maker_order\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "update_maker_order - Request 6",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"update_maker_order\", \"uuid\": \"6a242691-6c05-474a-85c1-5b3f42278f41\", \"volume_delta\": {\"numer\": \"3\", \"denom\": \"2\"}, \"new_price\": {\"numer\": \"2\", \"denom\": \"1\"}, \"base_confs\": 2, \"base_nota\": true, \"rel_confs\": 5, \"rel_nota\": false}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `update_maker_order`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **update_maker_order** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/update_maker_order/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for update_maker_order\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ],
          "description": "Examples for the update method"
        }
      ],
      "description": "General utility methods and system information"
    },
    {
      "name": "Wallet Management",
      "item": [
        {
          "name": "my_balance - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"my_balance\", \"coin\": \"{{coin}}\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `my_balance`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **my_balance** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/my_balance/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for my_balance\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "my_tx_history - Request 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"my_tx_history\", \"coin\": \"{{coin}}\", \"limit\": 1, \"from_id\": \"1d5c1b67f8ebd3fc480e25a1d60791bece278f5d1245c5f9474c91a142fee8e1\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `my_tx_history`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **my_tx_history** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/my_tx_history/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for my_tx_history\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "my_tx_history - Request 2",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"my_tx_history\", \"coin\": \"{{coin}}\", \"max\": true, \"from_id\": \"1d5c1b67f8ebd3fc480e25a1d60791bece278f5d1245c5f9474c91a142fee8e1\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": [
                "{{base_url}}"
              ]
            },
            "description": {
              "content": "\n**Method**: `my_tx_history`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **my_tx_history** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/my_tx_history/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
              "type": "text/markdown"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": "pm.test(\"Status code is 200 for my_tx_history\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Withdraw",
          "item": [
            {
              "name": "withdraw - Request 1",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"method\": \"withdraw\", \"coin\": \"{{coin}}\", \"to\": \"RJTYiYeJ8eVvJ53n2YbrVmxWNNMVZjDGLh\", \"amount\": \"{{amount}}\", \"userpass\": \"{{userpass}}\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `withdraw`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **withdraw** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/withdraw/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for withdraw\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "withdraw - Request 2",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"method\": \"withdraw\", \"coin\": \"{{coin}}\", \"to\": \"R9o9xTocqr6CeEDGDH6mEYpwLoMz6jNjMW\", \"amount\": \"{{amount}}\", \"fee\": \"{{fee}}\", \"userpass\": \"{{userpass}}\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `withdraw`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **withdraw** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/withdraw/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for withdraw\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "withdraw - Request 3",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"method\": \"withdraw\", \"coin\": \"{{coin}}\", \"to\": \"R9o9xTocqr6CeEDGDH6mEYpwLoMz6jNjMW\", \"amount\": \"{{amount}}\", \"fee\": \"{{fee}}\", \"userpass\": \"{{userpass}}\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `withdraw`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **withdraw** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/withdraw/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for withdraw\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "withdraw - Request 4",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"method\": \"withdraw\", \"coin\": \"{{coin}}\", \"to\": \"0xbab36286672fbdc7b250804bf6d14be0df69fa28\", \"amount\": \"{{amount}}\", \"userpass\": \"{{userpass}}\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `withdraw`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **withdraw** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/withdraw/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for withdraw\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "withdraw - Request 5",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"withdraw\", \"coin\": \"{{coin}}\", \"to\": \"RECIPIENT_ADDRESS\", \"amount\": \"{{amount}}\", \"fee\": \"{{fee}}\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `withdraw`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **withdraw** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/withdraw/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for withdraw\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "withdraw - Request 6",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"method\": \"withdraw\", \"coin\": \"{{coin}}\", \"to\": \"0xbab36286672fbdc7b250804bf6d14be0df69fa28\", \"max\": true, \"userpass\": \"{{userpass}}\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `withdraw`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **withdraw** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/withdraw/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for withdraw\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "withdraw - Request 7",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"method\": \"withdraw\", \"coin\": \"{{coin}}\", \"to\": \"qHmJ3KA6ZAjR9wGjpFASn4gtUSeFAqdZgs\", \"amount\": \"{{amount}}\", \"userpass\": \"{{userpass}}\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `withdraw`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **withdraw** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/withdraw/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for withdraw\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "withdraw - Request 8",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"userpass\": \"{{userpass}}\", \"method\": \"withdraw\", \"coin\": \"{{coin}}\", \"to\": \"qHmJ3KA6ZAjR9wGjpFASn4gtUSeFAqdZgs\", \"amount\": \"{{amount}}\", \"fee\": \"{{fee}}\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}",
                  "host": [
                    "{{base_url}}"
                  ]
                },
                "description": {
                  "content": "\n**Method**: `withdraw`\n**Operation**: `request`\n\nThis request demonstrates the **request** operation for the **withdraw** method.\n\n### Description\nFor detailed information about the parameters, response, and potential errors for this method, please refer to the official documentation.\n\n[**View Full Documentation**](https://docs.komodoplatform.com/komodo-defi-framework/api/v1/withdraw/request/)\n\n---\n*This is an auto-generated request. Manual modifications may be required for specific use cases.*\n",
                  "type": "text/markdown"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": "pm.test(\"Status code is 200 for withdraw\", function () {    pm.response.to.have.status(200);});pm.test(\"Response has a result for {api_method}\", function () {{    var jsonData = pm.response.json();    pm.expect(jsonData.result).to.exist;});",
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ],
          "description": "Examples for the withdraw method"
        }
      ],
      "description": "Wallet operations, balances, and transaction management"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "2e96531e-05da-4ef1-ab13-f5b554ca24e3",
        "exec": [
          "// Pre-request Script to set the request body",
          "// This script ensures that the raw JSON body is correctly formatted",
          "",
          "if (pm.request.body && pm.request.body.raw) {",
          "    try {",
          "        const body = JSON.parse(pm.request.body.raw);",
          "        pm.request.body.raw = JSON.stringify(body, null, 2);",
          "    } catch (e) {",
          "        console.error('Failed to parse and stringify request body: ', e);",
          "    }",
          "}"
        ],
        "type": "text/javascript"
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "{{address}}:{{port}}",
      "type": "string",
      "description": "Base URL for the Komodo DeFi Framework API"
    }
  ]
}