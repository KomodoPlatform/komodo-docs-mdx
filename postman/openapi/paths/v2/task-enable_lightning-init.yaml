/task::enable_lightning::init:
  post:
    operationId: task_enable_lightning_init
    summary: Initialize Lightning Network Task
    description: |
      Request a task to run a lightning node. Use the returned task_id to check the status of the lightning node.
      An error will be returned if a lightning node was already running for the requested ticker.
      
      Note: Lightning methods are currently only available using the native Komodo DeFi Framework.
    x-mdx-doc-path: ../../src/pages/komodo-defi-framework/api/v20/lightning/activation/index.mdx
    requestBody:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: '../../../components/schemas/Common.yaml#/RpcV2Request'
              - type: object
                properties:
                  method:
                    type: string
                    enum: ["task::enable_lightning::init"]
                    description: The method name
                    example: "task::enable_lightning::init"
                  params:
                    type: object
                    required:
                      - ticker
                      - activation_params
                    properties:
                      ticker:
                        $ref: '../../../components/schemas/Common.yaml#/CoinTicker'
                        description: Ticker of coin to activate
                        example: "tBTC-lightning"
                      activation_params:
                        $ref: '../../../components/schemas/Lightning.yaml#/LightningActivationParams'
                        description: Lightning activation parameters
    responses:
      '200':
        description: Successfully initiated Lightning node task
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../../../components/schemas/Common.yaml#/RpcSuccessResponse'
                - type: object
                  properties:
                    result:
                      type: object
                      properties:
                        task_id:
                          type: integer
                          description: An identifying number which is used to query task status
                          example: 1
      '400':
        description: Bad request - Various error conditions
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../../../components/schemas/Common.yaml#/RpcErrorResponse'
                - type: object
                  properties:
                    error_type:
                      type: string
                      description: Type of error
                      enum:
                        - "L2ConfigIsNotFound"
                        - "InvalidRequest"
                        - "UnexpectedL2Protocol"
                        - "PlatformCoinIsNotActivated"
                        - "InvalidPlatformConfiguration"
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '../../../components/schemas/Common.yaml#/RpcErrorResponse' 