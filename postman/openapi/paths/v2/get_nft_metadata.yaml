/get_nft_metadata:
  post:
    operationId: get_nft_metadata
    summary: Get NFT Metadata
    description: |
      Returns metadata for a specific NFT from the user's wallet.
    x-mdx-doc-path: ../../src/pages/komodo-defi-framework/api/v20/non_fungible_tokens/get_nft_metadata/index.mdx
    requestBody:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: '../../../components/schemas/Common.yaml#/RpcV2Request'
              - type: object
                properties:
                  method:
                    type: string
                    enum: ["get_nft_metadata"]
                    description: The method name
                    example: "get_nft_metadata"
                  params:
                    type: object
                    properties:
                      chain:
                        type: string
                        enum: ["AVALANCHE", "BSC", "ETH", "FANTOM", "POLYGON"]
                        description: The token chain
                        example: "BSC"
                      token_address:
                        type: string
                        pattern: "^0x[a-fA-F0-9]{40}$"
                        description: The token address (40-character hex with 0x prefix)
                        example: "0xfd913a305d70a60aac4faac70c739563738e1f81"
                      token_id:
                        type: string
                        description: Token ID
                        example: "214300044414"
                      protect_from_spam:
                        type: boolean
                        description: Optional, defaults to false. If true, any potential spam link found in collection name, token name, symbol will be replaced with 'URL redacted for user protection'
                        default: false
                        example: false
                    required:
                      - chain
                      - token_address
                      - token_id
    responses:
      '200':
        description: NFT metadata retrieved successfully
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../../../components/schemas/Common.yaml#/RpcSuccessResponse'
                - type: object
                  properties:
                    result:
                      type: object
                      properties:
                        amount:
                          $ref: ../../../components/schemas/Common.yaml#/AmountString
                          description: The amount of this NFT the user owns (used by ERC1155)
                        block_number_minted:
                          type: integer
                          nullable: true
                          description: The block height when the NFT was minted. May be null
                          example: 19645247
                        block_number:
                          type: integer
                          description: The block height when the amount or owner changed
                          example: 45776404
                        chain:
                          type: string
                          enum: ["AVALANCHE", "BSC", "ETH", "FANTOM", "POLYGON"]
                          description: Chain name
                          example: "POLYGON"
                        name:
                          type: string
                          nullable: true
                          description: May be null. An NFT collection name
                          example: "OpenSea Collections"
                        contract_type:
                          type: string
                          enum: ["ERC721", "ERC1155"]
                          description: The type of NFT contract standard
                          example: "ERC1155"
                        last_token_uri_sync:
                          type: string
                          format: date-time
                          description: When the token_uri was last updated
                          example: "2023-09-01T04:04:30.867Z"
                        last_metadata_sync:
                          type: string
                          format: date-time
                          description: When the metadata was last updated
                          example: "2023-09-01T04:35:01.128Z"
                        metadata:
                          type: string
                          nullable: true
                          description: The metadata of the token. May be null
                          example: '{"image":"https://i.seadn.io/gae/nY8wjVVQqDZBl-Bk3h9kwSqR1bXt16x_tESRAQmctEb0SCFCPtvtSsBtp98TFiUzP-LpMGt_kiqHDDOfkgbxOuWxkdH4aBNkmzrjZM0?w=500&amp;auto=format","name":"Doge Napoleon","description":null,"external_link":null,"animation_url":"https://openseauserdata.com/files/df71203f48e54d027bb2c47b2840cacb.mp4","traits":[]}'
                        minter_address:
                          type: string
                          nullable: true
                          description: Minter address. May be null
                          example: "ERC1155 tokens don't have a single minter"
                        owner_of:
                          type: string
                          pattern: "^0x[a-fA-F0-9]{40}$"
                          description: The wallet address of the owner of the NFT (40-character hex with 0x prefix)
                          example: "0xab95d01bc8214e4d993043e8ca1b68db2c946498"
                        possible_spam:
                          type: boolean
                          description: If true, the contract address has been identified as associated with spam or suspicious activities
                          example: true
                        possible_phishing:
                          type: boolean
                          description: If true, the token has been identified as associated with phishing, as at least one of domain fields is found in database with phishing domains
                          example: false
                        symbol:
                          type: string
                          nullable: true
                          description: May be null. The symbol of the NFT contract
                          example: "OPENSTORE"
                        token_address:
                          type: string
                          pattern: "^0x[a-fA-F0-9]{40}$"
                          description: The address of the NFT contract (40-character hex with 0x prefix)
                          example: "0x2953399124f0cbb46d2cbacd8a89cf0599974963"
                        token_id:
                          type: string
                          description: The token ID of the NFT
                          example: "110473361632261669912565539602449606788298723469812631769659886404530570536720"
                        token_hash:
                          type: string
                          nullable: true
                          description: The token hash. May be null
                          example: "af811b641bccbdc10c444ba4f3a2ffb5"
                        token_uri:
                          type: string
                          nullable: true
                          format: uri
                          description: The URI to the metadata of the token. May be null
                          example: "https://api.opensea.io/api/v2/metadata/matic/0x2953399124F0cBB46d2CbACD8A89cF0599974963/0xf43db4f488f644b73a9442de4978fb7572b73d85000000000000110000002710"
                        token_domain:
                          type: string
                          nullable: true
                          description: Token domain. May be null
                          example: "api.opensea.io"
                        uri_meta:
                          $ref: ../../components/schemas/NFTs.yaml#/NftMetadata
                          description: A standard NftMetadata object
                      required:
                        - amount
                        - block_number_minted
                        - block_number
                        - chain
                        - name
                        - contract_type
                        - last_token_uri_sync
                        - last_metadata_sync
                        - metadata
                        - minter_address
                        - owner_of
                        - possible_spam
                        - possible_phishing
                        - symbol
                        - token_address
                        - token_id
                        - token_hash
                        - token_uri
                        - token_domain
                        - uri_meta
      '400':
        description: Bad request
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../../../components/schemas/Common.yaml#/RpcErrorResponse'
                - type: object
                  properties:
                    error_type:
                      type: string
                      description: Type of error
                      enum:
                        - "TokenNotFoundInWallet"
                    error_data:
                      type: object
                      description: Additional error data with token details
                      properties:
                        token_address:
                          type: string
                          pattern: "^0x[a-fA-F0-9]{40}$"
                          description: The token address that was not found
                        token_id:
                          type: string
                          description: The token ID that was not found
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '../../../components/schemas/Common.yaml#/RpcErrorResponse' 