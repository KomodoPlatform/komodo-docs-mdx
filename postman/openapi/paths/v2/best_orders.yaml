/best_orders:
  post:
    operationId: best_orders
    summary: Get Best Orders
    description: |
      Returns the best priced trades available on the orderbook.
      There are two options for the request: either by volume or by number.
      The response can contain coins that are not activated on the Komodo DeFi Framework API instance.
    x-mdx-doc-path: ../../src/pages/komodo-defi-framework/api/v20/swaps_and_orders/best_orders/index.mdx
    requestBody:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: '../../../components/schemas/Common.yaml#/RpcV2Request'
              - type: object
                properties:
                  method:
                    type: string
                    enum: ["best_orders"]
                    description: The method name
                    example: "best_orders"
                  params:
                    type: object
                    required:
                      - coin
                      - action
                      - request_by
                    properties:
                      coin:
                        $ref: '../../../components/schemas/Common.yaml#/CoinTicker'
                        description: The ticker of the coin to get best orders
                      action:
                        $ref: '../../../components/schemas/Common.yaml#/TradeAction'
                        description: Whether to buy or sell the selected coin
                      exclude_mine:
                        type: boolean
                        description: Defaults to false. If true, the users orders will be excluded from the response
                        default: false
                        example: false
                      request_by:
                        $ref: ../../components/schemas/Orders.yaml#/RequestBy
                        description: A standard RequestBy object
    responses:
      '200':
        description: Best orders retrieved successfully
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../../../components/schemas/Common.yaml#/RpcSuccessResponse'
                - type: object
                  properties:
                    result:
                      type: object
                      properties:
                        orders:
                          type: object
                          description: The ticker -> array of standard OrderData objects map
                          additionalProperties:
                            type: array
                            items:
                              $ref: ../../components/schemas/Orders.yaml#/OrderData
                        original_tickers:
                          type: array
                          items:
                            $ref: '../../../components/schemas/Common.yaml#/CoinTicker'
                          description: Tickers included in response when orderbook_ticker is configured for the queried coin in coins file
                          example: ["DGB"]
      '400':
        description: Bad request - Invalid parameters
        content:
          application/json:
            schema:
              $ref: '../../../components/schemas/Common.yaml#/RpcErrorResponse'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../../../components/schemas/Common.yaml#/RpcErrorResponse'
                - type: object
                  properties:
                    error:
                      type: string
                      description: Error message describing the internal error 