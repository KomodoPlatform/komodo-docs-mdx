/task_enable_qtum_init:
  post:
    operationId: task::enable_qtum::init
    summary: Initialize QTUM Activation Task
    description: |
      Use this method for task managed activation of QTUM coins and tokens. 
      This starts an asynchronous task that can be monitored with task::enable_qtum::status.
    x-mdx-doc-path: ../../src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_qtum/index.mdx
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - method
              - userpass
              - mmrpc
              - params
            properties:
              method:
                type: string
                enum: ["task::enable_qtum::init"]
                description: The method name
                example: "task::enable_qtum::init"
              userpass:
                type: string
                description: RPC password for authentication
                example: "RPC_UserP@SSW0RD"
              mmrpc:
                type: string
                enum: ["2.0"]
                description: The JSON-RPC version
                example: "2.0"
              id:
                type: integer
                description: Optional. Identifies a request to allow matching it with a response. Defaults to null
              params:
                type: object
                required:
                  - ticker
                  - activation_params
                properties:
                  ticker:
                    type: string
                    enum: ["QTUM", "tQTUM"]
                    description: The ticker of the coin you want to enable
                    example: "QTUM"
                  activation_params:
                    type: object
                    required:
                      - mode
                    properties:
                      priv_key_policy:
                        type: string
                        enum: ["ContextPrivKey", "Trezor"]
                        description: Defaults to ContextPrivKey. Set as Trezor to activate in Trezor mode
                        default: "ContextPrivKey"
                        example: "Trezor"
                      min_addresses_number:
                        type: integer
                        description: How many additional addresses to generate at a minimum
                        example: 3
                      scan_policy:
                        type: string
                        enum: ["do_not_scan", "scan_if_new_wallet", "scan"]
                        description: Whether or not to scan for new addresses. Note that scan will result in multiple requests to the Komodo DeFi Framework
                        example: "scan_if_new_wallet"
                      gap_limit:
                        type: integer
                        description: The max number of empty addresses in a row. If transactions were sent to an address outside the gap_limit, they will not be identified when scanning
                        example: 20
                      mode:
                        $ref: ../../components/schemas/Activation.yaml#/ActivationMode
                        description: A standard ActivationMode object with RPC type and data parameters
    responses:
      '200':
        description: Task initialization successful
        content:
          application/json:
            schema:
              type: object
              properties:
                mmrpc:
                  type: string
                  description: The JSON-RPC version (should be '2.0')
                  example: "2.0"
                result:
                  type: object
                  properties:
                    task_id:
                      type: integer
                      description: An identifying number which is used to query task status
                      example: 1
                id:
                  type: integer
                  description: Identifies a response to allow matching it with a request
      '400':
        description: Bad request - Various error conditions
        content:
          application/json:
            schema:
              type: object
              properties:
                mmrpc:
                  type: string
                  example: "2.0"
                error:
                  type: string
                  description: Error message describing what went wrong
                error_path:
                  type: string
                  description: Path where the error occurred
                error_trace:
                  type: string
                  description: Error trace information
                error_type:
                  type: string
                  description: Type of error
                error_data:
                  type: string
                  description: Additional error data
                id:
                  type: integer
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                mmrpc:
                  type: string
                  example: "2.0"
                error:
                  type: string
                  description: Error message describing the internal error
                id:
                  type: integer 