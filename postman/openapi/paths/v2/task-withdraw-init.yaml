/task-withdraw-init:
  post:
    operationId: task-withdraw-init
    summary: Initialize Withdraw Task
    description: |
      Initializes a task to perform cryptocurrency withdrawal operations.
      This starts an asynchronous withdrawal process.
    x-mdx-doc-path: ../../src/pages/komodo-defi-framework/api/v20/coin_activation/index.mdx
    requestBody:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: '../../../components/schemas/Common.yaml#/RpcV2Request'
              - type: object
                properties:
                  method:
                    type: string
                    enum: ["task::withdraw::init"]
                    description: The method name
                    example: "task::withdraw::init"
                  params:
                    type: object
                    properties:
                      coin:
                        $ref: ../../../components/schemas/Common.yaml#/CoinTicker
                        description: The name of the coin the user desires to withdraw
                      to:
                        type: string
                        description: Coins are withdrawn to this address
                        example: "RECIPIENT_ADDRESS"
                      amount:
                        $ref: ../../../components/schemas/Common.yaml#/AmountString
                        description: The amount the user desires to withdraw, ignored when max=true
                      memo:
                        type: string
                        description: Optional, used for ZHTLC and Tendermint coins only. Attaches a memo to the transaction
                      from:
                        type: object
                        description: Optional, used only for transactions using a hardware wallet or HD wallets
                        properties:
                          derivation_path:
                            type: string
                            description: Optional, HD wallets only. Follows the format m/44'/COIN_ID'/ACCOUNT_ID'/CHAIN/ADDRESS_ID
                            pattern: "^m/44'/\\d+'/\\d+'/\\d+/\\d+$"
                            example: "m/44'/20'/0'/0/2"
                          account_id:
                            type: integer
                            description: Optional, HD wallets only. Generally this will be 0 unless you have multiple accounts registered on your HD wallet
                            example: 0
                          chain:
                            type: string
                            enum: ["Internal", "External"]
                            description: Optional, HD wallets only. Internal or External. External is used for addresses that are intended to be visible outside of the wallet. Internal is used for change addresses
                            example: "External"
                          address_id:
                            type: integer
                            description: Optional, HD wallets only. Check the output from coin activation to find the ID of an address with balance
                            example: 2
                      max:
                        type: boolean
                        description: Optional. Withdraw the maximum available amount. Defaults to false
                        default: false
                        example: false
                      fee:
                        type: object
                        description: Optional. Used only to set a custom fee, otherwise fee value will be derived from a daemon's estimatefee RPC method
                        properties:
                          type:
                            type: string
                            enum: ["UtxoFixed", "UtxoPerKbyte"]
                            description: Type of transaction fee
                            example: "UtxoFixed"
                          amount:
                            $ref: ../../../components/schemas/Common.yaml#/AmountString
                            description: Fee amount in coin units, used only when type is UtxoFixed (fixed amount not depending on tx size) or UtxoPerKbyte (amount per Kbyte)
                    required:
                      - coin
                      - to
    responses:
      '200':
        description: Task initialization successful
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../../../components/schemas/Common.yaml#/RpcSuccessResponse'
                - type: object
                  properties:
                    result:
                      type: object
                      properties:
                        task_id:
                          type: integer
                          description: An identifying number which is used to query task status
                          example: 0
                      required:
                        - task_id
      '400':
        description: Bad request
        content:
          application/json:
            schema:
              $ref: '../../../components/schemas/Common.yaml#/RpcErrorResponse'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '../../../components/schemas/Common.yaml#/RpcErrorResponse' 