/my_recent_swaps:
  post:
    operationId: my_recent_swaps
    summary: Get My Recent Swaps
    description: |
      Returns the data of the most recent atomic swaps executed by the Komodo DeFi Framework API node.
      All filters are combined using logical AND.
    x-mdx-doc-path: ../../src/pages/komodo-defi-framework/api/v20/swaps_and_orders/my_recent_swaps/index.mdx
    requestBody:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: '../../../components/schemas/Common.yaml#/RpcV2Request'
              - type: object
                properties:
                  method:
                    type: string
                    enum: ["my_recent_swaps"]
                    description: The method name
                    example: "my_recent_swaps
                  params:
                    type: object
                    properties:
                      my_coin:
                        $ref: ../../../components/schemas/Common.yaml#/CoinTicker
                        description: Optional. Coin being used by you for the swap/trade
                      other_coin:
                        $ref: ../../../components/schemas/Common.yaml#/CoinTicker
                        description: Optional. Coin you are trading against
                      from_timestamp:
                        type: integer
                        description: Optional. Start timestamp in UNIX format
                        example: 1672531200
                      to_timestamp:
                        type: integer
                        description: Optional. End timestamp in UNIX format
                        example: 1734067200
                      from_uuid:
                        type: string
                        format: uuid
                        description: Optional. The UUID from which to start fetching results
                        example: "0a3859ba-0e28-49de-b015-641c050a6409
                      limit:
                        type: integer
                        description: Optional. The maximum number of results to return
                        example: 5
                      page_number:
                        type: integer
                        description: Optional. Offset for paginated results
                        example: 1
    responses:
      '200':
        description: Recent swaps retrieved successfully
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../../../components/schemas/Common.yaml#/RpcSuccessResponse'
                - type: object
                  properties:
                    result:
                      type: object
                      properties:
                        swaps:
                          type: array
                          description: A list of standard SwapStatus objects
                          items:
                            $ref: ../../components/schemas/Swaps.yaml#/SwapStatus
                        from_uuid:
                          type: string
                          nullable: true
                          format: uuid
                          description: The from_uuid that was set in the request; this value is null if nothing was set
                          example: "0a3859ba-0e28-49de-b015-641c050a6409
                        skipped:
                          type: integer
                          description: The number of skipped records (i.e. the position of from_uuid in the list + 1 or (page_number - 1) * limit)
                          example: 0
                        limit:
                          type: integer
                          description: The limit that was set in the request; note that the actual number of swaps can differ from the specified limit
                          example: 5
                        total:
                          type: integer
                          description: Total number of swaps available with the selected filters
                          example: 10
                        page_number:
                          type: integer
                          nullable: true
                          description: The page_number that was set in the request; if both page_number and from_uuid are not set it defaults to 1; if from_uuid is present this value will be null
                          example: 1
                        total_pages:
                          type: integer
                          description: Total pages available with the selected filters and limit
                          example: 2
                        found_records:
                          type: integer
                          description: The number of returned swaps
                          example: 5
                      required:
                        - swaps
                        - from_uuid
                        - skipped
                        - limit
                        - total
                        - page_number
                        - total_pages
                        - found_records
      '400':
        description: Bad request - Invalid parameters
        content:
          application/json:
            schema:
              $ref: '../../../components/schemas/Common.yaml#/RpcErrorResponse'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '../../../components/schemas/Common.yaml#/RpcErrorResponse' 