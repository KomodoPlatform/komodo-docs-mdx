/sign_raw_transaction:
  post:
    operationId: sign_raw_transaction
    summary: Sign Raw Transaction
    description: |
      This method allows users to:
      - Create a signed UTXO raw transaction given unsigned hex, and optionally a set of prior transaction inputs.
      - Create a signed EVM raw transaction, given the destination address, amount and gas limit.
      
      The transaction can then be broadcasted to the network using the send_raw_transaction method to complete the process.
      
      Note: This method is used to sign a raw transaction that has already been created. For UTXO coins, the unsigned hex is required to sign the transaction. If prev_txns is not provided, it will be sourced via electrums.
    x-mdx-doc-path: ../../src/pages/komodo-defi-framework/api/v20/wallet/tx/sign_raw_transaction/index.mdx
    requestBody:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: '../../../components/schemas/Common.yaml#/RpcV2Request'
              - type: object
                properties:
                  method:
                    type: string
                    enum: ["sign_raw_transaction"]
                    description: The method name
                    example: "sign_raw_transaction"
                  params:
                    type: object
                    properties:
                      coin:
                        $ref: ../../../components/schemas/Common.yaml#/CoinTicker
                        description: The coin to sign the raw transaction with
                      type:
                        type: string
                        enum: ["UTXO", "ETH"]
                        description: The operation type. UTXO for utxo coins, ETH for EVM coins
                        example: "UTXO"
                      tx:
                        $ref: ../../components/schemas/Wallet.yaml#/RawTxInfo
                        description: A standard RawTxInfo object
                    required:
                      - coin
                      - type
                      - tx
    responses:
      '200':
        description: Raw transaction signed successfully
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../../../components/schemas/Common.yaml#/RpcSuccessResponse'
                - type: object
                  properties:
                    result:
                      type: object
                      properties:
                        tx_hex:
                          type: string
                          description: The signed transaction hex, ready for broadcast
                          example: "0400008085202f8901c8d6d8764e51bbadc0592b99f37b3b7d8c9719686d5a9bf63652a0802a1cd036020000006a47304402206b40df6d7b1d87622ea1eba0cdce09dfaf21556a408b2bd245920c2f3e9ff5e702201bd7bcc9587a9731cfd7c57057f173cbf635d2818263a96f211c413f6e83d187012103d8064eece4fa5c0f8dc0267f68cee9bdd527f9e88f3594a323428718c391ecc2feffffff0100dd96d8080000001976a914d346067e3c3c3964c395fee208594790e29ede5d88ac46366665000000000000000000000000000000"
                      required:
                        - tx_hex
      '400':
        description: Bad request
        content:
          application/json:
            schema:
              allOf:
                - $ref: '../../../components/schemas/Common.yaml#/RpcErrorResponse'
                - type: object
                  properties:
                    error_type:
                      type: string
                      description: Type of error
                      enum:
                        - "SigningError"
                        - "InvalidRequest"
                        - "InvalidParam"
                        - "NoSuchCoin"
                    error_data:
                      type: string
                      description: Additional error data
                      examples:
                        - "with_key_pair:114] P2PKH script doesn't match expected prev script"
                        - "invalid digit found in string"
                        - "Invalid input length"
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '../../../components/schemas/Common.yaml#/RpcErrorResponse' 