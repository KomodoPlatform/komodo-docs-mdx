VolumeConfig:
  type: object
  description: Volume configuration for trading
  properties:
    percentage:
      $ref: '../Common.yaml#/PercentageString'
      description: Percentage of balance to trade (range 0-1, where 0.25 = 25%)
    usd:
      $ref: '../Common.yaml#/AmountString'
      description: USD value for volume configuration

BotTradingPairConfig:
  type: object
  description: Configuration for a trading pair in the bot
  required:
    - base
    - rel
    - spread
    - enable
  properties:
    base:
      $ref: '../Common.yaml#/CoinTicker'
      description: Ticker of the coin you wish to sell
    rel:
      $ref: '../Common.yaml#/CoinTicker'
      description: Ticker of the coin you wish to buy
    max:
      type: boolean
      description: Set to true if you would like to trade your whole balance
      example: true
    max_volume:
      $ref: '#/VolumeConfig'
      description: Maximum volume configuration (cannot use at same time as min_volume.usd if greater than 1.0, max=true is implied)
    min_volume:
      $ref: '#/VolumeConfig'
      description: Minimum volume configuration (cannot use both percentage and usd at same time)
    min_base_price:
      type: number
      description: Minimum USD price of base coin to accept in trade
      example: 250
    min_rel_price:
      type: number
      description: Minimum USD price of rel coin to accept in trade
      example: 50
    min_pair_price:
      type: number
      description: Minimum USD price of pair (base/rel) to accept in trade
      example: 5
    spread:
      $ref: '../Common.yaml#/AmountString'
      description: Target price in relation to prices API value (e.g. 1.05 = 5% over API price)
    base_confs:
      type: integer
      description: Number of required blockchain confirmations for base coin atomic swap transaction (defaults to base coin configuration if not set)
      minimum: 1
      example: 3
    base_nota:
      type: boolean
      description: Whether dPoW notarization is required for base coin atomic swap transaction (defaults to base coin configuration if not set)
      example: false
    rel_confs:
      type: integer
      description: Number of required blockchain confirmations for rel coin atomic swap transaction (defaults to rel coin configuration if not set)
      minimum: 1
      example: 3
    rel_nota:
      type: boolean
      description: Whether dPoW notarization is required for rel coin atomic swap transaction (defaults to rel coin configuration if not set)
      example: false
    enable:
      type: boolean
      description: Bot will ignore this config entry if set to false
      example: true
    price_elapsed_validity:
      type: number
      description: Will cancel current orders for this pair and not submit a new order if last price update time has been longer than this value in seconds
      default: 300
      minimum: 1
      example: 30
    check_last_bidirectional_trade_thresh_hold:
      type: boolean
      description: Will readjust the calculated CEX price if a precedent trade exists for the pair (or reversed pair), applied via a VWAP logic
      default: false
      example: true

SimpleMarketMakerBotRequest:
  type: object
  description: Request parameters for starting a simple market maker bot
  required:
    - cfg
  properties:
    price_urls:
      type: array
      items:
        $ref: '../Common.yaml#/UrlString'
      description: A list of URLs serving price data in JSON format. During each update loop, price data will be sourced from the first working URL in the list. If not defined, a default list will be used
      example:
        - "https://prices.komodo.live:1313/api/v2/tickers?expire_at=600"
        - "https://prices.komodo.earth/api/v2/tickers?expire_at=600"
        - "https://prices.komodian.info/api/v2/tickers?expire_at=600"
    bot_refresh_rate:
      type: number
      description: Bot loop interval in seconds
      default: 30
      minimum: 1
      example: 60
    cfg:
      type: object
      description: Configuration for trading pairs (name is the pair identifier, e.g., "DASH/KMD")
      additionalProperties:
        $ref: '#/BotTradingPairConfig'
      example:
        "DASH/KMD":
          base: "DASH"
          rel: "KMD"
          max: true
          min_volume:
            percentage: "0.25"
          spread: "1.025"
          base_confs: 3
          base_nota: false
          rel_confs: 3
          rel_nota: false
          enable: true
          price_elapsed_validity: 30
          check_last_bidirectional_trade_thresh_hold: true

SimpleMarketMakerBotResponse:
  type: object
  description: Response for successful bot start
  properties:
    result:
      type: string
      description: Success confirmation
      enum: ["Success"]
      example: "Success"

BotAlreadyStartedError:
  type: object
  description: Error response when bot is already running
  properties:
    error:
      type: string
      description: Error message
      example: "The bot is already started"
    error_path:
      type: string
      description: Path where the error occurred
      example: "simple_market_maker"
    error_trace:
      type: string
      description: Error trace information
      example: "simple_market_maker:770]"
    error_type:
      type: string
      description: Type of error
      enum:
        - "AlreadyStarted"
      example: "AlreadyStarted" 