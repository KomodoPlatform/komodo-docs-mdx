{
  "active_swaps": {
    "method_name": "active_swaps",
    "version": "v2",
    "parameters": [
      {
        "name": "include\\_status",
        "type": "bool",
        "required": false,
        "description": "Whether to include swap statuses in response.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/swaps_and_orders/active_swaps/index.mdx"
  },
  "all_swaps_uuids_by_filter": {
    "method_name": "all_swaps_uuids_by_filter",
    "version": "v1",
    "parameters": [
      {
        "name": "✗",
        "type": "return only swaps that match the `swap.started_at >= request.from_timestamp` condition",
        "required": false,
        "description": "string",
        "default_value": "my\\_coin",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "return only swaps that match the `swap.my_coin = request.my_coin` condition",
        "type": "",
        "required": false,
        "description": "✗",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "to\\_timestamp",
        "required": false,
        "description": "return only swaps that match the `swap.started_at < request.to_timestamp` condition",
        "default_value": "✗",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "from\\_timestamp",
        "type": "number",
        "required": false,
        "description": "my\\_coin",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "my\\_coin that was set in request",
        "type": "",
        "required": false,
        "description": "other\\_coin that was set in request",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "records\\_found",
        "type": "number",
        "required": false,
        "description": "to\\_timestamp",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "to\\_timestamp that was set in request",
        "type": "",
        "required": false,
        "description": "uuids of swaps that match the selected filters",
        "default_value": "array of strings",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/all_swaps_uuids_by_filter/index.mdx"
  },
  "autoprice": {
    "method_name": "autoprice",
    "version": "v1",
    "parameters": [
      {
        "name": "✓",
        "type": "Base coin symbol (e.g., `KMD`).",
        "required": false,
        "description": "string",
        "default_value": "rel",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Quote coin symbol (e.g., `BTC`).",
        "type": "",
        "required": false,
        "description": "✗",
        "default_value": "bool",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "userpass",
        "required": false,
        "description": "RPC password (`RPC_UserP@SSW0RD`).",
        "default_value": "✓",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "-------------",
      "InternalError",
      "Transport"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/autoprice/index.mdx"
  },
  "ban_pubkey": {
    "method_name": "ban_pubkey",
    "version": "v1",
    "parameters": [
      {
        "name": "✓",
        "type": "The pubkey to ban",
        "required": false,
        "description": "string",
        "default_value": "reason",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The reason for banning",
        "type": "",
        "required": false,
        "description": "✗",
        "default_value": "integer",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/ban_pubkey/index.mdx"
  },
  "best_orders": {
    "method_name": "best_orders",
    "version": "v2",
    "parameters": [
      {
        "name": "action",
        "type": "string",
        "required": true,
        "description": "A standard [ActionEnum](/komodo-defi-framework/api/common_structures/enums/#action-enum) enum. Whether to `buy` or `sell` the selected coin.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "The ticker of the coin to get best orders.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "exclude\\_mine",
        "type": "bool",
        "required": false,
        "description": "If `true`, the users orders will be excluded from the response.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "request\\_by",
        "type": "object",
        "required": true,
        "description": "A standard [RequestBy](/komodo-defi-framework/api/common_structures/orders/#request-by) object.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "----------------",
      "InvalidRequest",
      "CoinIsWalletOnly",
      "P2PError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/swaps_and_orders/best_orders/index.mdx"
  },
  "buy": {
    "method_name": "buy",
    "version": "v1",
    "parameters": [
      {
        "name": "base",
        "type": "string",
        "required": true,
        "description": "The name of the coin the user desires to receive",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "rel",
        "type": "string",
        "required": true,
        "description": "The name of the coin the user desires to sell",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "price",
        "type": "various",
        "required": true,
        "description": "The price in `rel` the user is willing to pay per one unit of the `base` coin. Can be a numeric string, expressed using standard [RationalValue](/komodo-defi-framework/api/common_structures/#rational-value) or [FractionalValue](/komodo-defi-framework/api/common_structures/#fractional-value) objects.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "volume",
        "type": "various",
        "required": true,
        "description": "The amount of coins the user is willing to receive of the `base` coin; the following values must be greater than or equal to the `min_trading_vol` of the corresponding coin: <ul><li>the argument `volume`</li><li>the product of the arguments `volume` and `price`</li></ul>. Can be a numeric string, expressed using standard [RationalValue](/komodo-defi-framework/api/common_structures/#rational-value) or [FractionalValue](/komodo-defi-framework/api/common_structures/#fractional-value) objects.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "min\\_volume",
        "type": "various",
        "required": false,
        "description": "The minimum amount of `base` coin to be purchased in any `GoodTillCancelled` orders after conversion to maker; the following values must be greater than or equal to the `min_trading_vol` of the corresponding coin: <ul><li>the argument `min_volume`</li><li>the product of the arguments `min_volume` and `price`</li></ul>. Can be a numeric string, expressed using standard [RationalValue](/komodo-defi-framework/api/common_structures/#rational-value) or [FractionalValue](/komodo-defi-framework/api/common_structures/#fractional-value) objects.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "match\\_by",
        "type": "object",
        "required": false,
        "description": "Optional. A standard [MatchBy](/komodo-defi-framework/api/common_structures/orders/#match-by) object, to filter to include only matches by pubkey or uuid. *Important:* This condition is not applied after a `GoodTillCancelled` order is converted to a `maker` request.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "order\\_type",
        "type": "object",
        "required": false,
        "description": "Optional. A standard [OrderType](/komodo-defi-framework/api/common_structures/orders/#order-type) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "base\\_confs",
        "type": "number",
        "required": false,
        "description": "Number of required blockchain confirmations for base coin atomic swap transaction; default to base coin configuration if not set",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "base\\_nota",
        "type": "boolean",
        "required": false,
        "description": "Whether dPoW notarization is required for base coin atomic swap transaction; default to base coin configuration if not set",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "rel\\_confs",
        "type": "number",
        "required": false,
        "description": "Number of required blockchain confirmations for rel coin atomic swap transaction; default to rel coin configuration if not set",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "rel\\_nota",
        "type": "boolean",
        "required": false,
        "description": "Whether dPoW notarization is required for rel coin atomic swap transaction; default to rel coin configuration if not set",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "save\\_in\\_history",
        "type": "boolean",
        "required": false,
        "description": "Defaults to `true`. If set to `false` no order history will be saved (though order status will be temporarily stored while in progress). If `true`, each order's short record history is stored in a local SQLite database table, and when the order is cancelled or fully matched, its history will be saved as a json file",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/buy/index.mdx"
  },
  "cancel_all_orders": {
    "method_name": "cancel_all_orders",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/cancel_all_orders/index.mdx"
  },
  "cancel_order": {
    "method_name": "cancel_order",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/cancel_order/index.mdx"
  },
  "coins_needed_for_kick_start": {
    "method_name": "coins_needed_for_kick_start",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/coins_needed_for_kick_start/index.mdx"
  },
  "convert_utxo_address": {
    "method_name": "convert_utxo_address",
    "version": "v1",
    "parameters": [
      {
        "name": "✓",
        "type": "Input UTXO address",
        "required": false,
        "description": "string",
        "default_value": "coin",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Ticker of UTXO coin corresponding to the input address (source coin)",
        "type": "",
        "required": false,
        "description": "✓",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/convert_utxo_address/index.mdx"
  },
  "convertaddress": {
    "method_name": "convertaddress",
    "version": "v1",
    "parameters": [
      {
        "name": "✓",
        "type": "The name of the coin address context",
        "required": false,
        "description": "string",
        "default_value": "from",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Input address",
        "type": "",
        "required": false,
        "description": "✓",
        "default_value": "object",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/convertaddress/index.mdx"
  },
  "disable_coin": {
    "method_name": "disable_coin",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/disable_coin/index.mdx"
  },
  "electrum": {
    "method_name": "electrum",
    "version": "v1",
    "parameters": [
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "Ticker of coin to activate",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "servers",
        "type": "list of objects",
        "required": true,
        "description": "A list of standard [ActivationServers](/komodo-defi-framework/api/common_structures/activation/#activation-servers) objects.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "mm2",
        "type": "integer",
        "required": false,
        "description": "Required if not set in `coins` file. Informs the Komodo DeFi Framework API whether or not the coin is expected to function. Accepted values are `0` or `1`",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "min\\_connected",
        "type": "integer",
        "required": false,
        "description": "Minimum number of electrum servers to maintain an active connection to.",
        "default_value": "1",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "max\\_connected",
        "type": "integer",
        "required": false,
        "description": "Maximum number of electrum servers to maintain an active connection to. If not set, defaults to all servers in activation request.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "required\\_confirmations",
        "type": "integer",
        "required": false,
        "description": "Number of confirmations for the Komodo DeFi Framework API to wait during the transaction steps of an atomic swap.",
        "default_value": "3",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "requires\\_notarization",
        "type": "boolean",
        "required": false,
        "description": "If `true`, coins protected by [Komodo Platform's dPoW security](https://satindergrewal.medium.com/delayed-proof-of-work-explained-9a74250dbb86) will wait for a notarization before progressing to the next atomic swap transactions step.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "swap\\_contract\\_address",
        "type": "string",
        "required": false,
        "description": "QRC20 only. Address of etomic swap smart contract",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "fallback\\_swap\\_contract",
        "type": "string",
        "required": false,
        "description": "QRC20 only. Address of backup etomic swap smart contract",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "utxo\\_merge\\_params",
        "type": "object",
        "required": false,
        "description": "A standard [UtxoMergeParams](/komodo-defi-framework/api/common_structures/activation/#utxo-merge-params) object. Used to reduce a wallet's UTXO count in cases where it is causing significantly slower RPC responses.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "balance",
        "type": "string (numeric)",
        "required": false,
        "description": "unspendable\\_balance",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The `coin` balance that is unspendable at the moment (e.g. if the address has immature UTXOs)",
        "type": "",
        "required": false,
        "description": "The ticker of the enabled coin",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "required\\_confirmations",
        "type": "number",
        "required": false,
        "description": "mature\\_confirmations",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The number of coinbase transaction confirmations required to become mature; UTXO coins only",
        "type": "",
        "required": false,
        "description": "Whether the node must wait for a notarization of the selected coin that is performing the atomic swap transactions; applicable only for coins using Komodo dPoW",
        "default_value": "bool",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/coin_activation/electrum/index.mdx"
  },
  "enable": {
    "method_name": "enable",
    "version": "v1",
    "parameters": [
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "The name of the coin the user desires to enable",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "urls",
        "type": "array of strings",
        "required": false,
        "description": "Required for ETH/ERC20 and other gas model chains. URLs of Ethereum RPC nodes to which the user desires to connect",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "swap\\_contract\\_address",
        "type": "string",
        "required": false,
        "description": "Required for QRC20 only. Address of etomic swap smart contract",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "fallback\\_swap\\_contract",
        "type": "string",
        "required": false,
        "description": "Required for QRC20 only. Address of backup etomic swap smart contract",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "gas\\_station\\_decimals",
        "type": "integer",
        "required": false,
        "description": "For ETH/ERC20 and other gas model chains. Defines the decimals used to denominate the gas station response to gwei units. For example, the ETH gas station uses 8 decimals, which means that \"average\": 860 is equal to 86 gwei. While the Matic gas station uses 9 decimals, so 860 would mean 860 gwei exactly.",
        "default_value": "8",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "gas\\_station\\_policy.policy",
        "type": "string",
        "required": false,
        "description": "For ETH/ERC20 and other gas model chains. Defines the method of gas price calculation from the station response. Value can be [gas-station-policy-enum](/komodo-defi-framework/api/common_structures/enums/#gas-station-policy-enum).",
        "default_value": "MeanAverageFast",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "mm2",
        "type": "integer",
        "required": false,
        "description": "Required if not set in `coins` file. Informs the Komodo DeFi Framework API whether or not the coin is expected to function. Accepted values are `0` or `1`",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "tx\\_history",
        "type": "bool",
        "required": false,
        "description": "If `true` the Komodo DeFi Framework API will preload transaction history as a background process. Must be set to `true` to use the [my\\_tx\\_history](/komodo-defi-framework/api/legacy/my_tx_history/#my-tx-history) method",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "required\\_confirmations",
        "type": "integer",
        "required": false,
        "description": "Number of confirmations for the Komodo DeFi Framework API to wait during the transaction steps of an atomic swap.",
        "default_value": "3",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "requires\\_notarization",
        "type": "boolean",
        "required": false,
        "description": "If `true`, coins protected by [Komodo Platform's dPoW security](https://satindergrewal.medium.com/delayed-proof-of-work-explained-9a74250dbb86) will wait for a notarization before progressing to the next atomic swap transactions step.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "balance",
        "type": "string (numeric)",
        "required": false,
        "description": "unspendable\\_balance",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The `coin` balance that is unspendable at the moment (e.g. if the address has immature UTXOs)",
        "type": "",
        "required": false,
        "description": "The ticker of enabled coin",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "required\\_confirmations",
        "type": "number",
        "required": false,
        "description": "requires\\_notarization",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Whether the node must wait for a notarization of the selected coin that is performing the atomic swap transactions",
        "type": "",
        "required": false,
        "description": "The number of coinbase transaction confirmations required to become mature; UTXO coins only",
        "default_value": "number (optional)",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/coin_activation/enable/index.mdx"
  },
  "fundvalue": {
    "method_name": "fundvalue",
    "version": "v1",
    "parameters": [
      {
        "name": "✗",
        "type": "If provided, restrict calculation to specified coin tickers.",
        "required": false,
        "description": "string",
        "default_value": "userpass",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "-------------",
      "InternalError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/fundvalue/index.mdx"
  },
  "get_directly_connected_peers": {
    "method_name": "get_directly_connected_peers",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/get_directly_connected_peers/index.mdx"
  },
  "get_enabled_coins": {
    "method_name": "get_enabled_coins",
    "version": "v2",
    "parameters": [
      {
        "name": ":----",
        "type": ":------:",
        "required": false,
        "description": "*None*",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/get_enabled_coins/index.mdx"
  },
  "get_gossip_mesh": {
    "method_name": "get_gossip_mesh",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/get_gossip_mesh/index.mdx"
  },
  "get_gossip_peer_topics": {
    "method_name": "get_gossip_peer_topics",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/get_gossip_peer_topics/index.mdx"
  },
  "get_gossip_topic_peers": {
    "method_name": "get_gossip_topic_peers",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/get_gossip_topic_peers/index.mdx"
  },
  "get_my_peer_id": {
    "method_name": "get_my_peer_id",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/get_my_peer_id/index.mdx"
  },
  "get_relay_mesh": {
    "method_name": "get_relay_mesh",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/get_relay_mesh/index.mdx"
  },
  "get_trade_fee": {
    "method_name": "get_trade_fee",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/get_trade_fee/index.mdx"
  },
  "help": {
    "method_name": "help",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/help/index.mdx"
  },
  "import_swaps": {
    "method_name": "import_swaps",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/import_swaps/index.mdx"
  },
  "inventory": {
    "method_name": "inventory",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/inventory/index.mdx"
  },
  "kmd_rewards_info": {
    "method_name": "kmd_rewards_info",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/kmd_rewards_info/index.mdx"
  },
  "list_banned_pubkeys": {
    "method_name": "list_banned_pubkeys",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/list_banned_pubkeys/index.mdx"
  },
  "max_taker_vol": {
    "method_name": "max_taker_vol",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/max_taker_vol/index.mdx"
  },
  "metrics": {
    "method_name": "metrics",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/metrics/index.mdx"
  },
  "min_trading_vol": {
    "method_name": "min_trading_vol",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/min_trading_vol/index.mdx"
  },
  "my_balance": {
    "method_name": "my_balance",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/my_balance/index.mdx"
  },
  "my_orders": {
    "method_name": "my_orders",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/my_orders/index.mdx"
  },
  "my_recent_swaps": {
    "method_name": "my_recent_swaps",
    "version": "v2",
    "parameters": [
      {
        "name": "from\\_timestamp",
        "type": "integer",
        "required": false,
        "description": "Start timestamp in UNIX format",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "from\\_uuid",
        "type": "string",
        "required": false,
        "description": "The UUID from which to start fetching results",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "The maximum number of results to return",
        "default_value": "10",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "my\\_coin",
        "type": "string",
        "required": false,
        "description": "Coin being used by you for the swap/trade.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "other\\_coin",
        "type": "string",
        "required": false,
        "description": "Coin you are trading against",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "page\\_number",
        "type": "integer",
        "required": false,
        "description": "Offset for paginated results",
        "default_value": "1",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "to\\_timestamp",
        "type": "integer",
        "required": false,
        "description": "End timestamp in UNIX format",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "from\\_uuid",
        "type": "string",
        "required": false,
        "description": "limit",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The limit that was set in the request; note that the actual number of swaps can differ from the specified limit (e.g. on the last page).",
        "type": "",
        "required": false,
        "description": "The page\\_number that was set in the request; if both `page_number` and `from_uuid` are not set in request it will default to `1`; if `from_uuid` is present in request this value will be always null.",
        "default_value": "integer",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "skipped",
        "type": "integer",
        "required": false,
        "description": "swaps",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "A list of standard [SwapStatus](/komodo-defi-framework/api/common_structures/swaps/#swap-status) objects.",
        "type": "",
        "required": false,
        "description": "Total number of swaps available with the selected filters.",
        "default_value": "integer",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/swaps_and_orders/my_recent_swaps/index.mdx"
  },
  "my_swap_status": {
    "method_name": "my_swap_status",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [
      "-------------",
      "SwapNotFound",
      "InternalError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/swaps_and_orders/my_swap_status/index.mdx"
  },
  "my_tx_history": {
    "method_name": "my_tx_history",
    "version": "v2",
    "parameters": [
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "Ticker of the coin to get history for.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Limits the number of returned transactions. Defaults to `10`. Ignored if `max = true`.",
        "default_value": "10",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "paging\\_options",
        "type": "object",
        "required": false,
        "description": "A standard [Pagination](/komodo-defi-framework/api/common_structures/#pagination) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "target",
        "type": "object",
        "required": false,
        "description": "A standard [HistoryTarget](/komodo-defi-framework/api/common_structures/wallet/#history-target) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "from\\_id",
        "type": "string",
        "required": false,
        "description": "limit",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "the limit that was set in the request; note that the actual number of transactions can differ from the specified limit (e.g. on the last page)",
        "type": "",
        "required": false,
        "description": "the page\\_number that was set in the request",
        "default_value": "number",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "skipped",
        "type": "number",
        "required": false,
        "description": "sync\\_status",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "A standard [SyncStatus](/komodo-defi-framework/api/common_structures/#sync-status) object. Provides the information that helps to track the progress of transaction history preloading at background",
        "type": "",
        "required": false,
        "description": "the total number of transactions available",
        "default_value": "number",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "total\\_pages",
        "type": "number",
        "required": false,
        "description": "transactions",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [
      "----------------",
      "NoSuchCoin",
      "InvalidHashError",
      "Transport",
      "HashNotExist",
      "InternalError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/tx/my_tx_history/index.mdx"
  },
  "order_status": {
    "method_name": "order_status",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/order_status/index.mdx"
  },
  "orderbook": {
    "method_name": "orderbook",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "Base currency of a pair",
        "required": false,
        "description": "string",
        "default_value": "rel",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "base",
        "type": "string",
        "required": false,
        "description": "bids",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "An array of standard [OrderDataV2](/komodo-defi-framework/api/common_structures/orders/#order-data-v2) objects containing outstanding bids",
        "type": "",
        "required": false,
        "description": "The id of the network on which the request is made",
        "default_value": "integer",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "numasks",
        "type": "integer",
        "required": false,
        "description": "numbids",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The number of outstanding bids",
        "type": "",
        "required": false,
        "description": "The name of the coin the user will trade",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "timestamp",
        "type": "integer",
        "required": false,
        "description": "total\\_asks\\_base\\_vol",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "A standard [NumericFormatsValue](/komodo-defi-framework/api/common_structures/#numeric-formats-value) object.",
        "type": "",
        "required": false,
        "description": "A standard [NumericFormatsValue](/komodo-defi-framework/api/common_structures/#numeric-formats-value) object.",
        "default_value": "object",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "total\\_bids\\_base\\_vol",
        "type": "object",
        "required": false,
        "description": "total\\_bids\\_rel\\_vol",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/swaps_and_orders/orderbook/index.mdx"
  },
  "orderbook_depth": {
    "method_name": "orderbook_depth",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/orderbook_depth/index.mdx"
  },
  "orders_history_by_filter": {
    "method_name": "orders_history_by_filter",
    "version": "v1",
    "parameters": [
      {
        "name": "✗",
        "type": "Return only orders that match the `order.base = base` condition",
        "required": false,
        "description": "varies",
        "default_value": "from\\_price",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Return only orders that match the `order.price >= from_price` condition",
        "type": "",
        "required": false,
        "description": "✗",
        "default_value": "integer",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "from\\_volume",
        "required": false,
        "description": "Return only orders that match the `order.volume >= from_volume` condition",
        "default_value": "✗",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "include\\_details",
        "type": "bool",
        "required": false,
        "description": "",
        "default_value": "Whether to include complete order details in response; defaults to false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "string",
        "type": "✗",
        "required": false,
        "description": "order\\_type",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "✗",
        "type": "A standard [OrderTypeEnum](/komodo-defi-framework/api/common_structures/enums/#order-type-enum) enum. Return only orders that match the `order_type`",
        "required": false,
        "description": "string",
        "default_value": "rel",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Return only orders that match the `order.rel = rel` condition",
        "type": "",
        "required": false,
        "description": "✗",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "to\\_price",
        "required": false,
        "description": "Return only orders that match the `order.price <= to_price` condition",
        "default_value": "✗",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "to\\_timestamp",
        "type": "number",
        "required": false,
        "description": "",
        "default_value": "Timestamp in UNIX format. Return only orders that match the `order.created_at <= to_timestamp` condition",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "varies",
        "type": "✗",
        "required": false,
        "description": "was\\_taker",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/orders_history_by_filter/index.mdx"
  },
  "recover_funds_of_swap": {
    "method_name": "recover_funds_of_swap",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/recover_funds_of_swap/index.mdx"
  },
  "sell": {
    "method_name": "sell",
    "version": "v1",
    "parameters": [
      {
        "name": "base",
        "type": "string",
        "required": true,
        "description": "The name of the coin the user desires to sell",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "rel",
        "type": "string",
        "required": true,
        "description": "The name of the coin the user desires to receive",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "price",
        "type": "numeric string or rational",
        "required": true,
        "description": "The amount of `rel` coins the user wants to receive for each unit of the `base` coin spent.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "volume",
        "type": "numeric string or rational",
        "required": true,
        "description": "The maximum amount of `base` coin available for sale in the order, ignored if max is `true`; the following values must be greater than or equal to the `min_trading_vol` of the corresponding coin: <ul><li>the argument `volume`</li><li>the product of the arguments `volume` and `price`</li></ul>",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "base\\_confs",
        "type": "number",
        "required": false,
        "description": "Number of required blockchain confirmations for base coin atomic swap transaction; default to base coin configuration if not set",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "base\\_nota",
        "type": "bool",
        "required": false,
        "description": "Whether dPoW notarization is required for base coin atomic swap transaction; default to base coin configuration if not set",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "match\\_by",
        "type": "object",
        "required": false,
        "description": "Optional. A standard [MatchBy](/komodo-defi-framework/api/common_structures/orders/#match-by) object, to filter to include only matches by pubkey or uuid. *Important:* This condition is not applied after a `GoodTillCancelled` order is converted to a `maker` request.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "min\\_volume",
        "type": "numeric string or rational",
        "required": false,
        "description": "The amount of `base` coin that will be used as `min_volume` of `GoodTillCancelled` order after conversion to maker; the following values must be greater than or equal to the `min_trading_vol` of the corresponding coin: <ul><li>the argument `min_volume`</li><li>the product of the arguments `min_volume` and `price`</li></ul>. Can be a numeric string, expressed using standard [RationalValue](/komodo-defi-framework/api/common_structures/#rational-value) or [FractionalValue](/komodo-defi-framework/api/common_structures/#fractional-value) objects.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "order\\_type",
        "type": "object",
        "required": false,
        "description": "Optional. A standard [OrderType](/komodo-defi-framework/api/common_structures/orders/#order-type) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "rel\\_confs",
        "type": "number",
        "required": false,
        "description": "Number of required blockchain confirmations for rel coin atomic swap transaction; default to rel coin configuration if not set",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "rel\\_nota",
        "type": "bool",
        "required": false,
        "description": "Whether dPoW notarization is required for rel coin atomic swap transaction; default to rel coin configuration if not set",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "save\\_in\\_history",
        "type": "boolean",
        "required": false,
        "description": "Defaults to `true`. If set to `false` no order history will be saved (though order status will be temporarily stored while in progress). If `true`, each order's short record history is stored in a local SQLite database table, and when the order is cancelled or fully matched, its history will be saved as a json file",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/sell/index.mdx"
  },
  "send_raw_transaction": {
    "method_name": "send_raw_transaction",
    "version": "v1",
    "parameters": [
      {
        "name": "✓",
        "type": "The name of the coin network on which to broadcast the transaction.",
        "required": false,
        "description": "string",
        "default_value": "tx\\_hex",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The transaction bytes in hexadecimal format; this is typically generated by the `withdraw` method. Not used for Sia protocol coins.",
        "type": "",
        "required": false,
        "description": "\\*",
        "default_value": "object",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/send_raw_transaction/index.mdx"
  },
  "set_required_confirmations": {
    "method_name": "set_required_confirmations",
    "version": "v1",
    "parameters": [
      {
        "name": "✓",
        "type": "The ticker of the selected coin",
        "required": false,
        "description": "number",
        "default_value": "confirmations",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/set_required_confirmations/index.mdx"
  },
  "set_requires_notarization": {
    "method_name": "set_requires_notarization",
    "version": "v1",
    "parameters": [
      {
        "name": "✓",
        "type": "The ticker of the selected coin",
        "required": false,
        "description": "bool",
        "default_value": "requires\\_notarization",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/set_requires_notarization/index.mdx"
  },
  "setprice": {
    "method_name": "setprice",
    "version": "v1",
    "parameters": [
      {
        "name": "base",
        "type": "string",
        "required": true,
        "description": "The name of the coin the user desires to sell",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "rel",
        "type": "string",
        "required": true,
        "description": "The name of the coin the user desires to receive",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "price",
        "type": "various",
        "required": true,
        "description": "The amount of `rel` coins the user wants to receive for each unit of the `base` coin spent. Can be a numeric string, expressed using standard [RationalValue](/komodo-defi-framework/api/common_structures/#rational-value) or [FractionalValue](/komodo-defi-framework/api/common_structures/#fractional-value) objects.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "volume",
        "type": "various",
        "required": false,
        "description": "The maximum amount of `base` coin available for sale in the order, ignored if max is `true`; the following values must be greater than or equal to the `min_trading_vol` of the corresponding coin: <ul><li>the argument `volume`</li><li>the product of the arguments `volume` and `price`</li></ul>",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "min\\_volume",
        "type": "various",
        "required": false,
        "description": "The minimum amount of `base` coin available for sale in the order; it must be less or equal than `volume` param; the following values must be greater than or equal to the `min_trading_vol` of the corresponding coin: <ul><li>the argument `min_volume`</li><li>the product of the arguments `min_volume` and `price`</li></ul>",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "max",
        "type": "bool",
        "required": false,
        "description": "Komodo DeFi Framework API will use the entire coin balance for the order, taking `0.001` coins into reserve to account for fees",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "cancel\\_previous",
        "type": "bool",
        "required": false,
        "description": "Komodo DeFi Framework API will cancel all existing orders for the selected pair by default; set this value to `false` to prevent this behavior",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "base\\_confs",
        "type": "number",
        "required": false,
        "description": "Number of required blockchain confirmations for base coin atomic swap transaction; default to base coin configuration if not set",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "base\\_nota",
        "type": "bool",
        "required": false,
        "description": "Whether dPoW notarization is required for base coin atomic swap transaction; default to base coin configuration if not set",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "rel\\_confs",
        "type": "number",
        "required": false,
        "description": "Number of required blockchain confirmations for rel coin atomic swap transaction; default to rel coin configuration if not set",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "rel\\_nota",
        "type": "bool",
        "required": false,
        "description": "Whether dPoW notarization is required for rel coin atomic swap transaction; default to base coin configuration if not set",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "save\\_in\\_history",
        "type": "boolean",
        "required": false,
        "description": "Defaults to `true`. If set to `false` no order history will be saved (though order status will be temporarily stored while in progress). If `true`, each order's short record history is stored in a local SQLite database table, and when the order is cancelled or fully matched, its history will be saved as a json file",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/setprice/index.mdx"
  },
  "show_priv_key": {
    "method_name": "show_priv_key",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/show_priv_key/index.mdx"
  },
  "stats_swap_status": {
    "method_name": "stats_swap_status",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/stats_swap_status/index.mdx"
  },
  "stop": {
    "method_name": "stop",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/stop/index.mdx"
  },
  "trade_preimage": {
    "method_name": "trade_preimage",
    "version": "v2",
    "parameters": [
      {
        "name": "base",
        "type": "string",
        "required": true,
        "description": "The base currency of the request.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "rel",
        "type": "string",
        "required": true,
        "description": "The rel currency of the request.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "swap\\_method",
        "type": "string",
        "required": true,
        "description": "The name of the method whose preimage is requested. Possible values: `buy`, `sell`, `setprice`. See [SwapMethodEnum](/komodo-defi-framework/api/common_structures/enums/#swap-method-enum).",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "price",
        "type": "numeric string or rational",
        "required": true,
        "description": "The price in `rel` the user is willing to pay per one unit of the `base` coin.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "max",
        "type": "bool",
        "required": false,
        "description": "Whether to return the maximum available volume for `setprice` method; must not be set or `false` if `swap_method` is `buy` or `sell`.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "volume",
        "type": "numeric string or rational",
        "required": false,
        "description": "The amount the user is willing to trade; ignored if `max = true` **and** `swap_method = setprice`, otherwise, it must be set.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "rel\\_coin\\_fee",
        "type": "object",
        "required": false,
        "description": "volume",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Optional. The max available volume that can be traded (in decimal representation); empty if the `max` argument is missing or false.",
        "type": "",
        "required": false,
        "description": "Optional. The max available volume that can be traded represented as a standard [RationalValue](/komodo-defi-framework/api/common_structures/#rational-value) object.; empty if the `max` argument is missing or false.",
        "default_value": "rational",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "volume\\_fraction",
        "type": "fraction",
        "required": false,
        "description": "taker\\_fee",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "A standard [ExtendedFeeInfo](/komodo-defi-framework/api/common_structures/wallet/#extended-fee-info) object. The dex fee to be paid by Taker; empty if `swap_method` is `setprice`.",
        "type": "",
        "required": false,
        "description": "A standard [ExtendedFeeInfo](/komodo-defi-framework/api/common_structures/wallet/#extended-fee-info) object. The approximate miner fee is paid to send the dex fee; empty if `swap_method` is `setprice`.",
        "default_value": "object",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/swaps_and_orders/trade_preimage/index.mdx"
  },
  "unban_pubkeys": {
    "method_name": "unban_pubkeys",
    "version": "v1",
    "parameters": [
      {
        "name": "pubkey",
        "type": "string",
        "required": true,
        "description": "The pubkey to ban",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "unban\\_by.data",
        "type": "list",
        "required": false,
        "description": "A list of pubkeys to unban. Only required when `type` is `Few`.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "unban\\_by.type",
        "type": "string",
        "required": true,
        "description": "A standard [UnbanTypeEnum](/komodo-defi-framework/api/common_structures/enums/#unban-type-enum) enum. Whether to unban all pubkeys or specific ones from a list",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/unban_pubkeys/index.mdx"
  },
  "update_maker_order": {
    "method_name": "update_maker_order",
    "version": "v1",
    "parameters": [
      {
        "name": "base\\_confs",
        "type": "number (optional)",
        "required": false,
        "description": "Number of required blockchain confirmations for base coin atomic swap transaction; defaults to base coin configuration if not set",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "base\\_nota",
        "type": "bool (optional)",
        "required": false,
        "description": "Whether dPoW notarization is required for base coin atomic swap transaction; defaults to base coin configuration if not set",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "max",
        "type": "bool (optional)",
        "required": false,
        "description": "Komodo DeFi Framework API will use the entire coin balance for the order, taking `0.001` coins into reserve to account for fees",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "min\\_volume",
        "type": "numeric string or rational (optional)",
        "required": false,
        "description": "The minimum amount of `base` coin available for the order; it must be less or equal than the new volume; the following values must be greater than or equal to the `min_trading_vol` of the corresponding coin: <ul><li>the argument `min_volume`</li><li>the product of the arguments `min_volume` and `new_price`</li></ul>",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "new\\_price",
        "type": "numeric string or rational (optional)",
        "required": false,
        "description": "The price in `rel` the user is willing to receive per one unit of the `base` coin",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "rel\\_confs",
        "type": "number (optional)",
        "required": false,
        "description": "Number of required blockchain confirmations for rel coin atomic swap transaction; defaults to rel coin configuration if not set",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "rel\\_nota",
        "type": "bool (optional)",
        "required": false,
        "description": "Whether dPoW notarization is required for rel coin atomic swap transaction; defaults to rel coin configuration if not set",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "uuid",
        "type": "string",
        "required": true,
        "description": "The uuid of the order the user desires to update",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "volume\\_delta",
        "type": "numeric string or rational (optional)",
        "required": false,
        "description": "Volume added to or subtracted from the `max_base_vol` of the order to be updated, resulting in the new volume which is the maximum amount of `base` coin available for the order, ignored if max is `true`; the following values must be greater than or equal to the `min_trading_vol` of the corresponding coin: <ul><li>the new volume which is the `max_base_vol` of the order to be updated plus `volume_delta`</li><li>the product of the new volume and the argument `new_price`</li></ul>",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/update_maker_order/index.mdx"
  },
  "validateaddress": {
    "method_name": "validateaddress",
    "version": "v1",
    "parameters": [
      {
        "name": "✓",
        "type": "The coin to validate address for",
        "required": false,
        "description": "string",
        "default_value": "address",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/validateaddress/index.mdx"
  },
  "version": {
    "method_name": "version",
    "version": "v1",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/legacy/version/index.mdx"
  },
  "withdraw": {
    "method_name": "withdraw",
    "version": "v2",
    "parameters": [
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "The name of the coin the user desires to withdraw.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "to",
        "type": "string",
        "required": true,
        "description": "Coins are withdrawn to this address.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "amount",
        "type": "string (numeric)",
        "required": false,
        "description": "The amount the user desires to withdraw, ignored when `max=true`.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "fee",
        "type": "object",
        "required": false,
        "description": "A standard [FeeInfo](/komodo-defi-framework/api/common_structures/wallet/#fee-info) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "from",
        "type": "object",
        "required": false,
        "description": "HD wallets only. A standard [WithdrawFromInfo](/komodo-defi-framework/api/common_structures/wallet/#withdraw-from-info) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "ibc\\_source\\_channel",
        "type": "integer",
        "required": false,
        "description": "Tendermint IBC transfers only. The source channel for the [IBC](https://tutorials.cosmos.network/academy/3-ibc/1-what-is-ibc.html) transaction.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "max",
        "type": "bool",
        "required": false,
        "description": "Withdraw the maximum available amount.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "memo",
        "type": "string",
        "required": false,
        "description": "Adds a transaction memo for compatible coins (e.g., Tendermint ecosystem).",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "broadcast",
        "type": "bool",
        "required": false,
        "description": "Optional, defaults to `false`. When `false`, signed transaction hex must be broadcast manually with [send\\_raw\\_transaction](/komodo-defi-framework/api/legacy/send_raw_transaction/). Must be set to `true` for Metamask managed transactions.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "fee\\_details",
        "type": "object",
        "required": false,
        "description": "from",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Coins are withdrawn from this address; the array contains a single element, but transactions may be sent from several addresses (UTXO coins).",
        "type": "",
        "required": false,
        "description": "An object containing information about accrued rewards; always exists if the coin is `KMD`.",
        "default_value": "object (optional)",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "kmd\\_rewards.amount",
        "type": "string (numeric, optional)",
        "required": false,
        "description": "kmd\\_rewards.claimed\\_by\\_me",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Whether the rewards have been claimed by me.",
        "type": "",
        "required": false,
        "description": "The expected balance change in `my_address` after the transaction broadcasts.",
        "default_value": "string (numeric)",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "received\\_by\\_me",
        "type": "string (numeric)",
        "required": false,
        "description": "spent\\_by\\_me",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The amount of coins spent by `my_address`; this value may differ from the request amount, as the transaction fee is added here.",
        "type": "",
        "required": false,
        "description": "Coins are withdrawn to this address; this may contain the `my_address` address, where change from UTXO coins is sent.",
        "default_value": "array of strings",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "total\\_amount",
        "type": "string (numeric)",
        "required": false,
        "description": "tx\\_hash",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The hash of the generated transaction.",
        "type": "",
        "required": false,
        "description": "Transaction bytes in hexadecimal format; use this value as input for [send\\_raw\\_transaction](/komodo-defi-framework/api/legacy/send_raw_transaction/). Not used for Sia protocol coins.",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [
      "----------------",
      "InvalidAmount",
      "InvalidAddress",
      "NoSuchCoin",
      "TransactionError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/tx/withdraw/index.mdx"
  },
  "account_balance": {
    "method_name": "account_balance",
    "version": "v2",
    "parameters": [
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "Coin ticker (e.g., `BTC`, `ETH`, `KMD`).",
        "default_value": "–",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "account\\_index",
        "type": "number",
        "required": true,
        "description": "BIP-44 account number to inspect (usually `0`).",
        "default_value": "–",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "chain",
        "type": "string",
        "required": true,
        "description": "BIP-44 chain: `External` (receiving) or `Internal` (change).",
        "default_value": "–",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "limit",
        "type": "number",
        "required": false,
        "description": "Maximum number of addresses to return per page.",
        "default_value": "10",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "paging\\_options",
        "type": "object",
        "required": false,
        "description": "Either `{ \"from_id\": <address_id> }` **or** `{ \"page_number\": <n> }`. If omitted, the first page (`page_number = 1`) is returned.",
        "default_value": "–",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "derivation\\_path",
        "type": "string",
        "required": false,
        "description": "addresses",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "A list of objects containing each derived address and its balance.",
        "type": "",
        "required": false,
        "description": "Combined balance of all addresses in the current page.",
        "default_value": "object",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "limit",
        "type": "number",
        "required": false,
        "description": "skipped",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Number of addresses skipped before the first item in `addresses`.",
        "type": "",
        "required": false,
        "description": "Total number of known addresses for the account/chain.",
        "default_value": "number",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "total\\_pages",
        "type": "number",
        "required": false,
        "description": "paging\\_options",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [
      "----------------------------------",
      "NoSuchCoin",
      "CoinIsActivatedNotWithHDWallet",
      "UnknownAccount",
      "InvalidBip44Chain",
      "AddressLimitReached \\"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/account_balance/index.mdx"
  },
  "add_node_to_version_stat": {
    "method_name": "add_node_to_version_stat",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The name assigned to the node",
        "required": false,
        "description": "string",
        "default_value": "address",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The IP address of the node",
        "type": "",
        "required": false,
        "description": "✓",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "----------------",
      "DatabaseError",
      "PeerIdParseError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/add_node_to_version_stat/index.mdx"
  },
  "change_mnemonic_password": {
    "method_name": "change_mnemonic_password",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "the active mnemonic password for your wallet",
        "required": false,
        "description": "string",
        "default_value": "new\\_password",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "-------------------",
      "WalletsStorageError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/change_mnemonic_password/index.mdx"
  },
  "clear_nft_db": {
    "method_name": "clear_nft_db",
    "version": "v2",
    "parameters": [
      {
        "name": "chains",
        "type": "array",
        "required": false,
        "description": "List of networks to remove NFT data for. See [NftNetworkEnum](/komodo-defi-framework/api/common_structures/enums/#nft-network-enum) for allowed values.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "clear\\_all",
        "type": "boolean",
        "required": false,
        "description": "If `true`, all NFT data for all networks will be purged.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/non_fungible_tokens/clear_nft_db/index.mdx"
  },
  "delete_wallet": {
    "method_name": "delete_wallet",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The name of the wallet to delete.",
        "required": false,
        "description": "string",
        "default_value": "password",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      ":-----------------------",
      "InvalidRequest",
      "WalletNotFound",
      "InvalidPassword",
      "CannotDeleteActiveWallet",
      "WalletsStorageError",
      "InternalError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/delete_wallet/index.mdx"
  },
  "enable_bch_with_tokens": {
    "method_name": "enable_bch_with_tokens",
    "version": "v2",
    "parameters": [
      {
        "name": "bchd\\_urls",
        "type": "array of strings",
        "required": true,
        "description": "A list of BCHD gRPC API server URLs, used for validation of SLP token transactions. It's recommended to add as many servers as possible. The URLs list can be found at [https://bchd.fountainhead.cash/](https://bchd.fountainhead.cash/).",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "mode",
        "type": "object",
        "required": true,
        "description": "A standard [ActivationMode](/komodo-defi-framework/api/common_structures/activation/#activation-mode) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "slp\\_tokens\\_requests",
        "type": "array of objects",
        "required": true,
        "description": "A list of standard [TokensRequest](/komodo-defi-framework/api/common_structures/activation/#tokens-request) objects.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "ticker",
        "type": "string",
        "required": true,
        "description": "Ticker of the platform protocol coin.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "address\\_format",
        "type": "object",
        "required": false,
        "description": "Overwrites the address format from coins file, if set. A standard [AddressFormat](/komodo-defi-framework/api/common_structures/wallet/#address-format) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "allow\\_slp\\_unsafe\\_conf",
        "type": "boolean",
        "required": false,
        "description": "If true, allows bchd\\_urls to be empty. **Warning:** it is highly unsafe to do so as it may lead to invalid SLP transactions generation and tokens burning.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "get\\_balances",
        "type": "boolean",
        "required": false,
        "description": "If false, coin and token balances will not be returned in the response, and the response will be returned more quickly.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "required\\_confirmations",
        "type": "integer",
        "required": false,
        "description": "Confirmations to wait for steps in swap. Defaults to value in the coins file if not set.",
        "default_value": "3",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "requires\\_notarization",
        "type": "boolean",
        "required": false,
        "description": "Has no effect on BCH.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "tx\\_history",
        "type": "boolean",
        "required": false,
        "description": "If true the Komodo DeFi Framework API will preload transaction history as a background process. Must be set to true to use the [my\\_tx\\_history](/komodo-defi-framework/api/legacy/my_tx_history/#my-tx-history) method.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "utxo\\_merge\\_params",
        "type": "object",
        "required": false,
        "description": "A standard [UtxoMergeParams](/komodo-defi-framework/api/common_structures/activation/#utxo-merge-params) object. Used to reduce a wallet's UTXO count in cases where it is causing significantly slower RPC responses.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "current\\_block",
        "type": "integer",
        "required": false,
        "description": "slp\\_addresses\\_infos",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [
      "--------------------------",
      "CoinProtocolParseError",
      "InternalError",
      "PlatformCoinCreationError",
      "PlatformConfigIsNotFound",
      "PlatformIsAlreadyActivated",
      "PrivKeyNotAllowed",
      "TokenConfigIsNotFound",
      "TokenProtocolParseError",
      "Transport",
      "UnexpectedDerivationMethod",
      "UnexpectedPlatformProtocol",
      "UnexpectedTokenProtocol"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/enable_bch_with_tokens/index.mdx"
  },
  "enable_erc20": {
    "method_name": "enable_erc20",
    "version": "v2",
    "parameters": [
      {
        "name": "ticker",
        "type": "string",
        "required": true,
        "description": "Ticker of the ERC20-like token you want to enable.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "activation\\_params",
        "type": "object",
        "required": false,
        "description": "A standard [TokenActivationParams](/komodo-defi-framework/api/common_structures/activation/#token-activation-params) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "platform\\_coin",
        "type": "string",
        "required": false,
        "description": "required\\_confirmations",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The number of confirmations required for transactions.",
        "type": "",
        "required": false,
        "description": "The contract address of the activated token.",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/enable_erc20/index.mdx"
  },
  "enable_eth_with_tokens": {
    "method_name": "enable_eth_with_tokens",
    "version": "v2",
    "parameters": [
      {
        "name": "erc20\\_tokens\\_requests",
        "type": "array of objects",
        "required": true,
        "description": "A list of standard [TokensRequest](/komodo-defi-framework/api/common_structures/activation/#tokens-request) objects.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "nodes",
        "type": "array of objects",
        "required": true,
        "description": "A list of standard [CoinNode](/komodo-defi-framework/api/common_structures/activation/#coin-node) objects.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "swap\\_contract\\_address",
        "type": "string",
        "required": true,
        "description": "Address of etomic swap smart contract.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "ticker",
        "type": "string",
        "required": true,
        "description": "Ticker of the platform protocol coin.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "fallback\\_swap\\_contract",
        "type": "string",
        "required": false,
        "description": "Address of backup etomic swap smart contract.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "gas\\_station\\_decimals",
        "type": "integer",
        "required": false,
        "description": "For ETH/ERC20 and other gas model chains. Defines the decimals used to denominate the gas station response to gwei units.",
        "default_value": "8",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "gas\\_station\\_policy.policy",
        "type": "string",
        "required": false,
        "description": "For ETH/ERC20 and other gas model chains. Defines the method of gas price calculation from the station response. Value can be [gas-station-policy-enum](/komodo-defi-framework/api/common_structures/enums/#gas-station-policy-enum).",
        "default_value": "MeanAverageFast",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "get\\_balances",
        "type": "boolean",
        "required": false,
        "description": "If false, coin and token balances will not be returned in the response, and the response will be returned more quickly.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "mm2",
        "type": "integer",
        "required": false,
        "description": "Required if not set in coins file. Informs the Komodo DeFi Framework API whether or not the coin is expected to function. Accepted values are 0 or 1.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "nft\\_req",
        "type": "object",
        "required": false,
        "description": "Encapsulates the request parameters for NFT activation, including NFT provider configuration. A standard [NftProvider](/komodo-defi-framework/api/common_structures/nfts/#nft-provider) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "priv\\_key\\_policy",
        "type": "object",
        "required": false,
        "description": "Object specifying the policy to access a private key during activation. Must include a `type` field with a value from [EthPrivKeyActivationPolicyEnum](/komodo-defi-framework/api/common_structures/enums/#eth-priv-key-activation-policy-enum). If `type` is `WalletConnect`, a `data` field with the session topic is also required.",
        "default_value": "{\"type\": \"ContextPrivKey\"}",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "required\\_confirmations",
        "type": "integer",
        "required": false,
        "description": "When the platform coin is involved, the number of confirmations for the Komodo DeFi Framework API to wait during the transaction steps of an atomic swap.",
        "default_value": "3",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "requires\\_notarization",
        "type": "boolean",
        "required": false,
        "description": "If true, coins protected by [Komodo Platform's dPoW security](https://satindergrewal.medium.com/delayed-proof-of-work-explained-9a74250dbb86) will wait for a notarization before progressing to the next atomic swap transactions step.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "rpc\\_mode",
        "type": "string",
        "required": false,
        "description": "Value can be [EthRpcModeEnum](/komodo-defi-framework/api/common_structures/enums/#eth-rpc-mode-enum).",
        "default_value": "Default",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "swap\\_v2\\_contracts",
        "type": "object",
        "required": false,
        "description": "Must be provided if \"use\\_trading\\_proto\\_v2\" is true in [your configuration](/komodo-defi-framework/setup/configure-mm2-json/). A standard [SwapV2Contracts](/komodo-defi-framework/api/common_structures/activation/#swap-v2-contracts) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "tx\\_history",
        "type": "boolean",
        "required": false,
        "description": "If true the Komodo DeFi Framework API will preload transaction history as a background process. Must be set to true to use the [my\\_tx\\_history](/komodo-defi-framework/api/legacy/my_tx_history/#my-tx-history) method.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "erc20\\_addresses\\_infos",
        "type": "object",
        "required": false,
        "description": "eth\\_addresses\\_infos",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "A standard [AddressInfo](/komodo-defi-framework/api/common_structures/wallet/#address-info) object. Note: the structure may vary based on the value of the `get_balances` parameter.",
        "type": "",
        "required": false,
        "description": "A list of standard [NftInfoBasic](/komodo-defi-framework/api/common_structures/nfts/#nft-info) objects.",
        "default_value": "list",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [
      "--------------------------",
      "CoinProtocolParseError",
      "InternalError",
      "PlatformCoinCreationError",
      "PlatformConfigIsNotFound",
      "PlatformIsAlreadyActivated",
      "PrivKeyNotAllowed",
      "TokenConfigIsNotFound",
      "TokenProtocolParseError",
      "Transport",
      "UnexpectedDerivationMethod",
      "UnexpectedPlatformProtocol",
      "UnexpectedTokenProtocol"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/enable_eth_with_tokens/index.mdx"
  },
  "enable_nft": {
    "method_name": "enable_nft",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The ticker of the NFT network, with `NFT_` as a prefix. See [NftNetworkEnum](/komodo-defi-framework/api/common_structures/enums/#nft-network-enum) for allowed values.",
        "required": false,
        "description": "object",
        "default_value": "activation\\_params",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/non_fungible_tokens/enable_nft/index.mdx"
  },
  "enable_slp": {
    "method_name": "enable_slp",
    "version": "v2",
    "parameters": [
      {
        "name": "ticker",
        "type": "string",
        "required": true,
        "description": "Ticker of the SLP token you want to enable (e.g., `SPICE`).",
        "default_value": "–",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "activation\\_params",
        "type": "object",
        "required": false,
        "description": "A standard [TokenActivationParams](/komodo-defi-framework/api/common_structures/activation/#token-activation-params) object.",
        "default_value": "–",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "platform\\_coin",
        "type": "string",
        "required": false,
        "description": "token\\_id",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The SLP token ID (transaction hash) of the activated token.",
        "type": "",
        "required": false,
        "description": "The number of confirmations required for transactions.",
        "default_value": "number",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/enable_slp/index.mdx"
  },
  "enable_tendermint_token": {
    "method_name": "enable_tendermint_token",
    "version": "v2",
    "parameters": [
      {
        "name": "ticker",
        "type": "string",
        "required": true,
        "description": "Ticker of the Tendermint asset you want to enable.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "activation\\_params",
        "type": "object",
        "required": false,
        "description": "A standard [TokenActivationParams](/komodo-defi-framework/api/common_structures/activation/#token-activation-params) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/enable_tendermint_token/index.mdx"
  },
  "enable_tendermint_with_assets": {
    "method_name": "enable_tendermint_with_assets",
    "version": "v2",
    "parameters": [
      {
        "name": "nodes",
        "type": "array of objects",
        "required": true,
        "description": "A list of [CoinNode objects](/komodo-defi-framework/api/common_structures/activation/#coin-node).",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "ticker",
        "type": "string",
        "required": true,
        "description": "Ticker of the platform protocol coin. Current options: `ATOM`, `IRIS`, `OSMOSIS` (with more supported coins on the way).",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "tokens\\_params",
        "type": "array of objects",
        "required": true,
        "description": "A list of standard [TokensRequest](/komodo-defi-framework/api/common_structures/activation/#tokens-request) objects.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "activation\\_params",
        "type": "object",
        "required": false,
        "description": "Only used with Metamask, Keplr, or WalletConnect activations. Defines the [PrivKeyPolicy](/komodo-defi-framework/api/common_structures/wallet/#priv-key-policy) of the connection.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "get\\_balances",
        "type": "boolean",
        "required": false,
        "description": "If `false`, coin and token balances will not be returned in the response, and the response will be returned more quickly.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "mm2",
        "type": "integer",
        "required": false,
        "description": "Required if not set in coins file. Informs the Komodo DeFi Framework API whether or not the coin is expected to function. Accepted values are `0` or `1`.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "priv\\_key\\_policy",
        "type": "string",
        "required": false,
        "description": "Value can be [PrivKeyActivationPolicyEnum](/komodo-defi-framework/api/common_structures/enums/#priv-key-activation-policy-enum).",
        "default_value": "ContextPrivKey",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "required\\_confirmations",
        "type": "integer",
        "required": false,
        "description": "When the platform coin is involved, the number of confirmations for the Komodo DeFi Framework API to wait during the transaction steps of an atomic swap.",
        "default_value": "3",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "requires\\_notarization",
        "type": "boolean",
        "required": false,
        "description": "If `true`, coins protected by [Komodo Platform's dPoW security](https://satindergrewal.medium.com/delayed-proof-of-work-explained-9a74250dbb86) will wait for a notarization before progressing to the next atomic swap transactions step.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "tx\\_history",
        "type": "boolean",
        "required": false,
        "description": "If `true` the Komodo DeFi Framework API will preload transaction history as a background process. Must be set to `true` to use the [my\\_tx\\_history](/komodo-defi-framework/api/legacy/my_tx_history/#my-tx-history) method.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "balance",
        "type": "object",
        "required": true,
        "description": "current\\_block",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Block height of the coin being activated",
        "type": "",
        "required": false,
        "description": "Ticker of the platform protocol coin, as input in the request.",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "tokens\\_balances",
        "type": "array of objects",
        "required": true,
        "description": "tokens\\_tickers",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/enable_tendermint_with_assets/index.mdx"
  },
  "experimental::staking::claim_rewards": {
    "method_name": "experimental::staking::claim_rewards",
    "version": "v2",
    "parameters": [
      {
        "name": ":-----",
        "type": ":------:",
        "required": false,
        "description": "coin",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "✓",
        "type": "The coin being staked",
        "required": false,
        "description": "object",
        "default_value": "claiming\\_details",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/staking/claim_rewards/index.mdx"
  },
  "experimental::staking::delegate": {
    "method_name": "experimental::staking::delegate",
    "version": "v2",
    "parameters": [
      {
        "name": ":-----",
        "type": ":------:",
        "required": false,
        "description": "coin",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "✓",
        "type": "The coin being staked",
        "required": false,
        "description": "object",
        "default_value": "staking\\_details",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/staking/delegate/index.mdx"
  },
  "experimental::staking::query::delegations": {
    "method_name": "experimental::staking::query::delegations",
    "version": "v2",
    "parameters": [
      {
        "name": ":------------",
        "type": ":-----",
        "required": false,
        "description": ":------------------------------------------------------------------------------------------------------------------------------",
        "default_value": ":-----:",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "The coin being staked.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "info\\_details",
        "type": "object",
        "required": false,
        "description": "Cosmos Only. A standard [StakingInfoDetails](/komodo-defi-framework/api/common_structures/wallet/#staking-info-details) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/staking/delegations/index.mdx"
  },
  "experimental::staking::query::ongoing_undelegations": {
    "method_name": "experimental::staking::query::ongoing_undelegations",
    "version": "v2",
    "parameters": [
      {
        "name": ":-----",
        "type": ":------:",
        "required": false,
        "description": "coin",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "✓",
        "type": "The coin being staked.",
        "required": false,
        "description": "object",
        "default_value": "info\\_details",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/staking/ongoing_delegations/index.mdx"
  },
  "experimental::staking::query::validators": {
    "method_name": "experimental::staking::query::validators",
    "version": "v2",
    "parameters": [
      {
        "name": ":-----",
        "type": ":------:",
        "required": false,
        "description": "coin",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "✓",
        "type": "The coin being staked.",
        "required": false,
        "description": "object",
        "default_value": "info\\_details",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/staking/validators/index.mdx"
  },
  "experimental::staking::undelegate": {
    "method_name": "experimental::staking::undelegate",
    "version": "v2",
    "parameters": [
      {
        "name": ":---------------",
        "type": ":-----",
        "required": false,
        "description": ":-------------------------------------------------------------------------------------------------------------",
        "default_value": ":-----:",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "The coin being staked.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "staking\\_details",
        "type": "object",
        "required": false,
        "description": "A standard [StakingDetails](/komodo-defi-framework/api/common_structures/wallet/#staking-info-details) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/staking/undelegate/index.mdx"
  },
  "get_current_mtp": {
    "method_name": "get_current_mtp",
    "version": "v2",
    "parameters": [
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "A compatible (UTXO) coin's ticker",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "id",
        "type": "integer",
        "required": false,
        "description": "Optional. Identifies a request to allow matching it with a response. Defaults to `null`",
        "default_value": "null",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/get_current_mtp/index.mdx"
  },
  "get_eth_estimated_fee_per_gas": {
    "method_name": "get_eth_estimated_fee_per_gas",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "Ticker of the coin/asset for which you want to start the gas fee estimator.",
        "required": false,
        "description": "string",
        "default_value": "estimator\\_type",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "low\\.max\\_priority\\_fee\\_per\\_gas",
        "type": "string",
        "required": false,
        "description": "low\\.max\\_fee\\_per\\_gas",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Maximum fee per gas for low priority transactions",
        "type": "",
        "required": false,
        "description": "Minimum wait time for low priority transactions",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "low\\.max\\_wait\\_time",
        "type": "string",
        "required": false,
        "description": "medium.max\\_priority\\_fee\\_per\\_gas",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Maximum priority fee per gas for medium priority transactions",
        "type": "",
        "required": false,
        "description": "Maximum fee per gas for medium priority transactions",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "medium.min\\_wait\\_time",
        "type": "string",
        "required": false,
        "description": "medium.max\\_wait\\_time",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Maximum wait time for medium priority transactions",
        "type": "",
        "required": false,
        "description": "Maximum priority fee per gas for high priority transactions",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "high.max\\_fee\\_per\\_gas",
        "type": "string",
        "required": false,
        "description": "high.min\\_wait\\_time",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Minimum wait time for high priority transactions",
        "type": "",
        "required": false,
        "description": "Maximum wait time for high priority transactions",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "source",
        "type": "string",
        "required": false,
        "description": "base\\_fee\\_trend",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The trend of the base fee",
        "type": "",
        "required": false,
        "description": "The trend of the priority fee",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [
      "----------------",
      "InvalidRequest",
      "NoSuchCoin",
      "CoinNotSupported"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/fee_management/get_eth_estimated_fee_per_gas/index.mdx"
  },
  "get_locked_amount": {
    "method_name": "get_locked_amount",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [
      "Error Type",
      "------------------------------------"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/swaps_and_orders/get_locked_amount/index.mdx"
  },
  "get_mnemonic": {
    "method_name": "get_mnemonic",
    "version": "v2",
    "parameters": [
      {
        "name": "format",
        "type": "string",
        "required": false,
        "description": "Either `encrypted` or `plaintext`. Defaults to `encrypted`.",
        "default_value": "encrypted",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "password",
        "type": "string",
        "required": false,
        "description": "The password to decrypt your stored mnemonic phrase. Only required if `plaintext` format is requested.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "mnemonic",
        "type": "string",
        "required": false,
        "description": "encrypted\\_mnemonic\\_data",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/get_mnemonic/index.mdx"
  },
  "get_my_address": {
    "method_name": "get_my_address",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "Coin ticker whose address should be returned (e.g. `ETH`, `MATIC`).",
        "required": false,
        "description": "object",
        "default_value": "path\\_to\\_address",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "-------------------",
      "CoinsConfCheckError",
      "CoinIsNotSupported",
      "InvalidRequest",
      "Internal",
      "GetEthAddressError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/get_my_address/index.mdx"
  },
  "get_new_address": {
    "method_name": "get_new_address",
    "version": "v2",
    "parameters": [
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "Coin ticker (e.g., `BTC`, `LTC`, `ETH`).",
        "default_value": "–",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "account\\_id",
        "type": "number",
        "required": true,
        "description": "BIP-44 account number (usually `0`).",
        "default_value": "–",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "chain",
        "type": "string",
        "required": false,
        "description": "`External` (receive) or `Internal` (change). If omitted, defaults to `External`.",
        "default_value": "External",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "gap\\_limit",
        "type": "number",
        "required": false,
        "description": "Maximum allowed consecutive empty addresses (overrides wallet default).",
        "default_value": "implementation-default",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "--------------------------------",
      "NoSuchCoin",
      "CoinIsActivatedNotWithHDWallet",
      "UnknownAccount",
      "InvalidBip44Chain",
      "AddressLimitReached",
      "EmptyAddressesLimitReached",
      "Transport \\"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/get_new_address/index.mdx"
  },
  "get_nft_list": {
    "method_name": "get_nft_list",
    "version": "v2",
    "parameters": [
      {
        "name": "chains",
        "type": "array",
        "required": true,
        "description": "List of networks to scan for NFTs. See [NftNetworkEnum](/komodo-defi-framework/api/common_structures/enums/#nft-network-enum) for allowed values.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "filters",
        "type": "object",
        "required": false,
        "description": "A standard [NftFilter](/komodo-defi-framework/api/common_structures/nfts/#nft-filter) object.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "The number of NFTs displayed per page in response.",
        "default_value": "10",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "max",
        "type": "boolean",
        "required": false,
        "description": "If `true`, response will return all NFTs without pagination, and will ignore the `limit` and `page_number` values.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "page\\_number",
        "type": "integer",
        "required": false,
        "description": "The page offset for items in response.",
        "default_value": "1",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "protect\\_from\\_spam",
        "type": "boolean",
        "required": false,
        "description": "If `true`, any potential spam link found in collection name, token name, or symbol will be replaced with `URL redacted for user protection`.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "skipped",
        "type": "integer",
        "required": false,
        "description": "total",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/non_fungible_tokens/get_nft_list/index.mdx"
  },
  "get_nft_metadata": {
    "method_name": "get_nft_metadata",
    "version": "v2",
    "parameters": [
      {
        "name": "chain",
        "type": "string",
        "required": true,
        "description": "The token chain. See [NftNetworkEnum](/komodo-defi-framework/api/common_structures/enums/#nft-network-enum) for allowed values.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "token\\_address",
        "type": "string",
        "required": true,
        "description": "The token address.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "token\\_id",
        "type": "string",
        "required": true,
        "description": "Token ID.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "protect\\_from\\_spam",
        "type": "boolean",
        "required": false,
        "description": "If `true`, any potential spam link found in collection name, token name, or symbol will be replaced with `URL redacted for user protection`.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "block\\_number\\_minted",
        "type": "integer",
        "required": false,
        "description": "block\\_number",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The block height when the amount or owner changed.",
        "type": "",
        "required": false,
        "description": "Chain name. One of `AVALANCHE`, `BSC`, `ETH`, `FANTOM`, or `POLYGON`.",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "name",
        "type": "string",
        "required": false,
        "description": "contract\\_type",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The type of NFT contract standard. One of `ERC721` or `ERC1155`.",
        "type": "",
        "required": false,
        "description": "When the token\\_uri was last updated.",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "last\\_metadata\\_sync",
        "type": "string",
        "required": false,
        "description": "metadata",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The metadata of the token. May be `null`.",
        "type": "",
        "required": false,
        "description": "Minter address. May be `null`.",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "owner\\_of",
        "type": "string",
        "required": false,
        "description": "possible\\_spam",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "If `true`, the contract address has [been identified](https://docs.moralis.io/web3-data-api/evm/nft-spam-detection) as associated with spam or suspicious activities.",
        "type": "",
        "required": false,
        "description": "If `true`, the token has been identified as associated with phishing, as at least one of domain fields is found in database with phishing domains.",
        "default_value": "boolean",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "symbol",
        "type": "string",
        "required": false,
        "description": "token\\_address",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The address of the NFT contract.",
        "type": "",
        "required": false,
        "description": "The token ID of the NFT.",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "token\\_hash",
        "type": "string",
        "required": false,
        "description": "token\\_uri",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The URI to the metadata of the token. May be `null`.",
        "type": "",
        "required": false,
        "description": "Token domain. May be `null`.",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/non_fungible_tokens/get_nft_metadata/index.mdx"
  },
  "get_nft_transfers": {
    "method_name": "get_nft_transfers",
    "version": "v2",
    "parameters": [
      {
        "name": "chains",
        "type": "array",
        "required": true,
        "description": "List of chains to scan for NFTs. See [NftNetworkEnum](/komodo-defi-framework/api/common_structures/enums/#nft-network-enum) for allowed values.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "max",
        "type": "boolean",
        "required": false,
        "description": "If `true`, response will return all NFT transfers without pagination, and will ignore the `limit` and `page_number` values.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "The number of NFT transfers displayed per page in response.",
        "default_value": "10",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "page\\_number",
        "type": "integer",
        "required": false,
        "description": "The page offset for items in response.",
        "default_value": "1",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "protect\\_from\\_spam",
        "type": "boolean",
        "required": false,
        "description": "If `true`, any potential spam link found in collection name, token name, or symbol will be replaced with `URL redacted for user protection`.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "filters",
        "type": "object",
        "required": false,
        "description": "A standard [NftTransferFilter](/komodo-defi-framework/api/common_structures/nfts/#nft-transfer-filter) object.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "total",
        "type": "integer",
        "required": false,
        "description": "skipped",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/non_fungible_tokens/get_nft_transfers/index.mdx"
  },
  "get_public_key": {
    "method_name": "get_public_key",
    "version": "v2",
    "parameters": [
      {
        "name": ":----",
        "type": ":------:",
        "required": false,
        "description": "*None*",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/get_public_key/index.mdx"
  },
  "get_public_key_hash": {
    "method_name": "get_public_key_hash",
    "version": "v2",
    "parameters": [
      {
        "name": ":----",
        "type": ":------:",
        "required": false,
        "description": "*None*",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/get_public_key_hash/index.mdx"
  },
  "get_raw_transaction": {
    "method_name": "get_raw_transaction",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The name of the coin for which you want to request the transaction.",
        "required": false,
        "description": "string",
        "default_value": "tx\\_hash",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "----------------",
      "NoSuchCoin",
      "InvalidHashError",
      "Transport",
      "HashNotExist",
      "InternalError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/tx/get_raw_transaction/index.mdx"
  },
  "get_shared_db_id": {
    "method_name": "get_shared_db_id",
    "version": "v2",
    "parameters": [
      {
        "name": ":----",
        "type": ":------:",
        "required": false,
        "description": "*None*",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "---------",
      "Internal"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/get_shared_db_id/index.mdx"
  },
  "get_swap_transaction_fee_policy": {
    "method_name": "get_swap_transaction_fee_policy",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/fee_management/get_swap_transaction_fee_policy/index.mdx"
  },
  "get_token_info": {
    "method_name": "get_token_info",
    "version": "v2",
    "parameters": [],
    "response_parameters": [
      {
        "name": "info.symbol",
        "type": "string",
        "required": false,
        "description": "info.decimals",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [
      "----------",
      "NoSuchCoin"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/get_token_info/index.mdx"
  },
  "get_wallet_names": {
    "method_name": "get_wallet_names",
    "version": "v2",
    "parameters": [
      {
        "name": ":----",
        "type": ":------:",
        "required": false,
        "description": "*None*",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/get_wallet_names/index.mdx"
  },
  "gui_storage::activate_coins": {
    "method_name": "gui_storage::activate_coins",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "Account that will gain the new tickers.",
        "required": false,
        "description": "array of strings",
        "default_value": "tickers",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "-------------------",
      "TickerTooLong",
      "NoSuchAccount",
      "ErrorLoadingAccount",
      "ErrorSavingAccount",
      "InternalError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/gui_storage/activate_coins/index.mdx"
  },
  "gui_storage::add_account": {
    "method_name": "gui_storage::add_account",
    "version": "v2",
    "parameters": [
      {
        "name": "account\\_id",
        "type": "string",
        "required": true,
        "description": "A unique identifier of the account (e.g., wallet UUID or key fingerprint).",
        "default_value": "–",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "name",
        "type": "string",
        "required": true,
        "description": "Display name (max `64` characters).",
        "default_value": "–",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "description",
        "type": "string",
        "required": false,
        "description": "Optional longer description (max `256` characters).",
        "default_value": "\"\"",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "balance\\_usd",
        "type": "string (numeric)",
        "required": false,
        "description": "Initial USD balance for UI display; can be updated later via `set_account_balance`.",
        "default_value": "0",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "--------------------",
      "NameTooLong",
      "DescriptionTooLong",
      "AccountExistsAlready",
      "ErrorLoadingAccount",
      "ErrorSavingAccount",
      "InternalError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/gui_storage/add_account/index.mdx"
  },
  "gui_storage::deactivate_coins": {
    "method_name": "gui_storage::deactivate_coins",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "Account whose ticker list will be updated.",
        "required": false,
        "description": "array of strings",
        "default_value": "tickers",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "-------------------",
      "TickerTooLong",
      "NoSuchAccount",
      "ErrorLoadingAccount",
      "ErrorSavingAccount",
      "InternalError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/gui_storage/deactivate_coins/index.mdx"
  },
  "gui_storage::delete_account": {
    "method_name": "gui_storage::delete_account",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [
      "-------------------",
      "NoSuchAccount",
      "ErrorLoadingAccount",
      "ErrorSavingAccount",
      "InternalError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/gui_storage/delete_account/index.mdx"
  },
  "gui_storage::enable_account": {
    "method_name": "gui_storage::enable_account",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "Determines whether to enable an `existing` account or create-and-enable a `new` one.",
        "required": false,
        "description": "[EnabledAccountId](/komodo-defi-framework/api/common_structures/wallet/#enabled-account-id)",
        "default_value": "account\\_id",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Required when `policy` = `existing`. Identifies the account to enable.",
        "type": "",
        "required": false,
        "description": "✗",
        "default_value": "string (numeric)",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "description",
        "required": false,
        "description": "Optional description (≤ 600 chars) for a new account.",
        "default_value": "✗",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "name",
        "type": "string",
        "required": false,
        "description": "",
        "default_value": "Required when `policy` = `new`. Display name for the new account (≤ 255 chars).",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "--------------------",
      "NameTooLong",
      "DescriptionTooLong",
      "AccountExistsAlready",
      "NoSuchAccount",
      "ErrorLoadingAccount",
      "ErrorSavingAccount",
      "InternalError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/gui_storage/enable_account/index.mdx"
  },
  "gui_storage::get_account_coins": {
    "method_name": "gui_storage::get_account_coins",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [
      "-------------------",
      "NoSuchAccount",
      "ErrorLoadingAccount",
      "InternalError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/gui_storage/get_account_coins/index.mdx"
  },
  "gui_storage::get_accounts": {
    "method_name": "gui_storage::get_accounts",
    "version": "v2",
    "parameters": [
      {
        "name": ":----",
        "type": ":------:",
        "required": false,
        "description": "*None*",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "balance\\_usd",
        "type": "string (numeric)",
        "required": false,
        "description": "description",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Optional user-supplied description.",
        "type": "",
        "required": false,
        "description": "`true` if this account is the active one. Only one account should be enabled at a time.",
        "default_value": "boolean",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/gui_storage/get_accounts/index.mdx"
  },
  "gui_storage::get_enabled_account": {
    "method_name": "gui_storage::get_enabled_account",
    "version": "v2",
    "parameters": [
      {
        "name": ":----",
        "type": ":------:",
        "required": false,
        "description": "*None*",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "name",
        "type": "string",
        "required": false,
        "description": "description",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Optional description.",
        "type": "",
        "required": false,
        "description": "USD balance snapshot.",
        "default_value": "string (numeric)",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [
      "-------------------",
      "NoEnabledAccount",
      "ErrorLoadingAccount",
      "InternalError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/gui_storage/get_enabled_account/index.mdx"
  },
  "gui_storage::set_account_balance": {
    "method_name": "gui_storage::set_account_balance",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "Account to update.",
        "required": false,
        "description": "number (string)",
        "default_value": "balance\\_usd",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "-------------------",
      "NoSuchAccount",
      "ErrorLoadingAccount",
      "ErrorSavingAccount",
      "InternalError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/gui_storage/set_account_balance/index.mdx"
  },
  "gui_storage::set_account_description": {
    "method_name": "gui_storage::set_account_description",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "Account to update.",
        "required": false,
        "description": "string",
        "default_value": "description",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "-------------------",
      "DescriptionTooLong",
      "NoSuchAccount",
      "ErrorLoadingAccount",
      "ErrorSavingAccount",
      "InternalError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/gui_storage/set_account_description/index.mdx"
  },
  "gui_storage::set_account_name": {
    "method_name": "gui_storage::set_account_name",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "Account to rename.",
        "required": false,
        "description": "string",
        "default_value": "name",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "-------------------",
      "NameTooLong",
      "NoSuchAccount",
      "ErrorLoadingAccount",
      "ErrorSavingAccount",
      "InternalError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/gui_storage/set_account_name/index.mdx"
  },
  "lightning::channels::close_channel": {
    "method_name": "lightning::channels::close_channel",
    "version": "v2",
    "parameters": [
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "The ticker of the coin for the channel to close.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "channel\\_id",
        "type": "string",
        "required": true,
        "description": "The channel ID to close.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "force",
        "type": "boolean",
        "required": false,
        "description": "If `true`, the channel will be force-closed.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "target\\_height",
        "type": "integer",
        "required": false,
        "description": "The target block height for closing the channel.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/lightning/channels/close_channel/index.mdx"
  },
  "lightning::channels::get_channel_details": {
    "method_name": "lightning::channels::get_channel_details",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The ticker of the coin you would like to view channel details for.",
        "required": false,
        "description": "string",
        "default_value": "uuid",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "details",
        "type": "object",
        "required": false,
        "description": "id",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/lightning/channels/get_channel_details/index.mdx"
  },
  "lightning::channels::get_claimable_balances": {
    "method_name": "lightning::channels::get_claimable_balances",
    "version": "v2",
    "parameters": [
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "The ticker of the coin you would like to view claimable balances for.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "include\\_open\\_channels\\_balances",
        "type": "boolean",
        "required": false,
        "description": "If `true`, includes balances from open channels.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/lightning/channels/get_claimable_balances/index.mdx"
  },
  "lightning::channels::list_closed_channels_by_filter": {
    "method_name": "lightning::channels::list_closed_channels_by_filter",
    "version": "v2",
    "parameters": [
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "The ticker of the coin you would like to view closed channels for.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "filter",
        "type": "object",
        "required": false,
        "description": "A standard [LightningClosedChannelsFilter](/komodo-defi-framework/api/common_structures/lightning/#lightning-closed-channels-filter) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "paging\\_options",
        "type": "object",
        "required": false,
        "description": "A standard [Pagination](/komodo-defi-framework/api/common_structures/#pagination) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of results to return.",
        "default_value": "10",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/lightning/channels/list_closed_channels_by_filter/index.mdx"
  },
  "lightning::channels::list_open_channels_by_filter": {
    "method_name": "lightning::channels::list_open_channels_by_filter",
    "version": "v2",
    "parameters": [
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "The ticker of the coin you would like to view open channels for.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "filter",
        "type": "object",
        "required": false,
        "description": "A standard [LightningOpenChannelsFilter](/komodo-defi-framework/api/common_structures/lightning/#lightning-open-channels-filter) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "paging\\_options",
        "type": "object",
        "required": false,
        "description": "A standard [Pagination](/komodo-defi-framework/api/common_structures/#pagination) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of results to return.",
        "default_value": "10",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/lightning/channels/list_open_channels_by_filter/index.mdx"
  },
  "lightning::channels::open_channel": {
    "method_name": "lightning::channels::open_channel",
    "version": "v2",
    "parameters": [
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "The ticker of the coin you would like to open a channel for.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "node\\_address",
        "type": "string",
        "required": true,
        "description": "Lightning node addresses always have a format of `node_pubkey`@`ip_address`:`port`.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "amount",
        "type": "object",
        "required": true,
        "description": "A standard [LightningChannelAmount](/komodo-defi-framework/api/common_structures/lightning/#lightning-channel-amount) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "push\\_msat",
        "type": "integer",
        "required": false,
        "description": "The amount in millisatoshi to push to the counterparty while opening, to create inbound liquidity for the channel. Using the `push_msat` parameter avoids having to send funds in a separate request later. Please note that the funds given using push\\_msat is given unconditionally, meaning that there is no proof of payment in a preimage as with paying an invoice.",
        "default_value": "0",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "channel\\_options",
        "type": "object",
        "required": false,
        "description": "A standard [LightningChannelOptions](/komodo-defi-framework/api/common_structures/lightning/#lightning-channel-options) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "channel\\_configs",
        "type": "object",
        "required": false,
        "description": "A standard [LightningChannelConfig](/komodo-defi-framework/api/common_structures/lightning/#lightning-channel-config) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "node\\_address",
        "type": "string",
        "required": false,
        "description": "id",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/lightning/channels/open_channel/index.mdx"
  },
  "lightning::channels::update_channel": {
    "method_name": "lightning::channels::update_channel",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The ticker of the coin you would like to update channel configuration options for.",
        "required": false,
        "description": "string",
        "default_value": "uuid",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Unique channel identifier.",
        "type": "",
        "required": false,
        "description": "✓",
        "default_value": "object",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/lightning/channels/update_channel/index.mdx"
  },
  "lightning::nodes::add_trusted_node": {
    "method_name": "lightning::nodes::add_trusted_node",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The coin ticker you would like to add a trusted node to.",
        "required": false,
        "description": "string",
        "default_value": "node\\_id",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/lightning/nodes/add_trusted_node/index.mdx"
  },
  "lightning::nodes::connect_to_node": {
    "method_name": "lightning::nodes::connect_to_node",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The coin ticker you would like to connect to a node on.",
        "required": false,
        "description": "string",
        "default_value": "node\\_address",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/lightning/nodes/connect_to_node/index.mdx"
  },
  "lightning::nodes::list_trusted_nodes": {
    "method_name": "lightning::nodes::list_trusted_nodes",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/lightning/nodes/list_trusted_nodes/index.mdx"
  },
  "lightning::nodes::remove_trusted_node": {
    "method_name": "lightning::nodes::remove_trusted_node",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The coin ticker you would like to remove a trusted node from.",
        "required": false,
        "description": "string",
        "default_value": "node\\_id",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/lightning/nodes/remove_trusted_node/index.mdx"
  },
  "lightning::payments::generate_invoice": {
    "method_name": "lightning::payments::generate_invoice",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The ticker of the coin for the invoice.",
        "required": false,
        "description": "string",
        "default_value": "amount",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Amount to receive (in satoshis or msats).",
        "type": "",
        "required": false,
        "description": "✗",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "expiry",
        "required": false,
        "description": "Invoice expiry time in seconds.",
        "default_value": "✗",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/lightning/payments/generate_invoice/index.mdx"
  },
  "lightning::payments::get_payment_details": {
    "method_name": "lightning::payments::get_payment_details",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The ticker of the coin for the payment.",
        "required": false,
        "description": "string",
        "default_value": "payment\\_hash",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/lightning/payments/get_payment_details/index.mdx"
  },
  "lightning::payments::list_payments_by_filter": {
    "method_name": "lightning::payments::list_payments_by_filter",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The ticker of the coin for the payments.",
        "required": false,
        "description": "object",
        "default_value": "filter",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "A standard LightningPaymentsFilter object.",
        "type": "",
        "required": false,
        "description": "✗",
        "default_value": "object",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "limit",
        "required": false,
        "description": "Maximum number of results to return.",
        "default_value": "✗",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/lightning/payments/list_payments_by_filter/index.mdx"
  },
  "lightning::payments::send_payment": {
    "method_name": "lightning::payments::send_payment",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The ticker of the coin to send payment from.",
        "required": false,
        "description": "string",
        "default_value": "invoice",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The Lightning invoice to pay.",
        "type": "",
        "required": false,
        "description": "✗",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "status",
        "type": "string",
        "required": false,
        "description": "id",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/lightning/payments/send_payment/index.mdx"
  },
  "max_maker_vol": {
    "method_name": "max_maker_vol",
    "version": "v2",
    "parameters": [],
    "response_parameters": [
      {
        "name": "volume",
        "type": "object",
        "required": false,
        "description": "balance",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "A standard [NumericFormatsValue](/komodo-defi-framework/api/common_structures/#numeric-formats-value) object representing the tradable taker balance.",
        "type": "",
        "required": false,
        "description": "A standard [NumericFormatsValue](/komodo-defi-framework/api/common_structures/#numeric-formats-value) object representing the volume of a coin's balance which is locked by swaps in progress.",
        "default_value": "object",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [
      "----------",
      "NoSuchCoin",
      "Transport"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/swaps_and_orders/max_maker_vol/index.mdx"
  },
  "peer_connection_healthcheck": {
    "method_name": "peer_connection_healthcheck",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/peer_connection_healthcheck/index.mdx"
  },
  "recreate_swap_data": {
    "method_name": "recreate_swap_data",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/swaps_and_orders/recreate_swap_data/index.mdx"
  },
  "refresh_nft_metadata": {
    "method_name": "refresh_nft_metadata",
    "version": "v2",
    "parameters": [
      {
        "name": "chain",
        "type": "string",
        "required": true,
        "description": "Chain which holds the NFT you would like to update metadata for. See [NftNetworkEnum](/komodo-defi-framework/api/common_structures/enums/#nft-network-enum) for allowed values.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "token\\_address",
        "type": "string",
        "required": true,
        "description": "Token address.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "token\\_id",
        "type": "string",
        "required": true,
        "description": "Token ID.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "komodo\\_proxy",
        "type": "boolean",
        "required": false,
        "description": "Indicates whether authentication is required for accessing the proxy URLs (true if authentication is necessary, otherwise false).",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "url",
        "type": "string",
        "required": true,
        "description": "URL link to the Moralis API proxy base url ([https://moralis-proxy.komodo.earth](https://moralis-proxy.komodo.earth)) or equivalent (if komodo\\_proxy is set to true, will need to provide a new Komodo Proxy URL).",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "url\\_antispam",
        "type": "string",
        "required": true,
        "description": "URL link to the [Antispam API proxy base url](https://nft.antispam.dragonhound.info) or equivalent. [docs](https://nft.antispam.dragonhound.info/docs).",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/non_fungible_tokens/refresh_nft_metadata/index.mdx"
  },
  "remove_node_from_version_stat": {
    "method_name": "remove_node_from_version_stat",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/remove_node_from_version_stat/index.mdx"
  },
  "send_asked_data": {
    "method_name": "send_asked_data",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "Identifier supplied by the original `DataNeeded` event.",
        "required": false,
        "description": "object",
        "default_value": "data",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "---------",
      "NotFound",
      "Internal"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/send_asked_data/index.mdx"
  },
  "set_swap_transaction_fee_policy": {
    "method_name": "set_swap_transaction_fee_policy",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "Ticker of the supported ETH/EVM coin or token for which you want to set the fee policy.",
        "required": false,
        "description": "string",
        "default_value": "swap\\_tx\\_fee\\_policy",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/fee_management/set_swap_transaction_fee_policy/index.mdx"
  },
  "sign_message": {
    "method_name": "sign_message",
    "version": "v2",
    "parameters": [
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "The coin to sign a message with.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "message",
        "type": "string",
        "required": true,
        "description": "The message you want to sign.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "address",
        "type": "string",
        "required": false,
        "description": "HD wallets only. A standard [AddressPath](/komodo-defi-framework/api/common_structures/wallet/#address-path) object. The path to the address for signing the message. If not provided, the `account_id`, `chain`, and `address_id` will default to `0`.",
        "default_value": "0",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "--------------",
      "PrefixNotFound",
      "CoinIsNotFound",
      "SigningError",
      "InvalidRequest",
      "InternalError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/message_signing/sign_message/index.mdx"
  },
  "sign_raw_transaction": {
    "method_name": "sign_raw_transaction",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The coin to sign the raw transaction with.",
        "required": false,
        "description": "string",
        "default_value": "type",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The operation type. Accepted values: `UTXO` (for UTXO coins), `ETH` (for EVM coins).",
        "type": "",
        "required": false,
        "description": "✓",
        "default_value": "object",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "--------------",
      "SigningError",
      "InvalidRequest",
      "InvalidParam",
      "NoSuchCoin"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/tx/sign_raw_transaction/index.mdx"
  },
  "start_simple_market_maker_bot": {
    "method_name": "start_simple_market_maker_bot",
    "version": "v2",
    "parameters": [
      {
        "name": "bot\\_refresh\\_rate",
        "type": "float",
        "required": false,
        "description": "Bot loop interval in seconds",
        "default_value": "30",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "cfg.name.base",
        "type": "string",
        "required": true,
        "description": "Ticker of the coin you wish to sell",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "cfg.name.base\\_confs",
        "type": "integer",
        "required": false,
        "description": "Number of required blockchain confirmations for base coin atomic swap transaction; defaults to base coin configuration if not set",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "cfg.name.base\\_nota",
        "type": "boolean",
        "required": false,
        "description": "Whether dPoW notarization is required for base coin atomic swap transaction; defaults to base coin configuration if not set",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "cfg.name.check\\_last\\_bidirectional\\_trade\\_thresh\\_hold",
        "type": "boolean",
        "required": false,
        "description": "Will readjust the calculated cex price if a precedent trade exists for the pair (or reversed pair), applied via a [VWAP logic](https://www.investopedia.com/terms/v/vwap.asp)",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "cfg.name.enable",
        "type": "boolean",
        "required": true,
        "description": "Bot will ignore this config entry if set to false",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "cfg.name.max",
        "type": "boolean",
        "required": false,
        "description": "Set to `true` if you would like to trade your whole balance",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "cfg.name.max\\_volume.percentage",
        "type": "string",
        "required": false,
        "description": "Percentage of balance to trade (cannot use at same time as `max_volume.usd`; if greater than 1.0 `max=true` is implied)",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "cfg.name.max\\_volume.usd",
        "type": "string",
        "required": false,
        "description": "Maximum USD trade volume value to trade (cannot use at same time as `max_volume.percentage`; if greater than full balance `max=true` is implied)",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "cfg.name.min\\_base\\_price",
        "type": "float",
        "required": false,
        "description": "Minimum USD price of base coin to accept in trade",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "cfg.name.min\\_pair\\_price",
        "type": "float",
        "required": false,
        "description": "Minimum USD price of pair (base/rel) to accept in trade",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "cfg.name.min\\_rel\\_price",
        "type": "float",
        "required": false,
        "description": "Minimum USD price of rel coin to accept in trade",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "cfg.name.min\\_volume.percentage",
        "type": "string",
        "required": false,
        "description": "Minimum percentage of balance to accept in trade (cannot use at same time as `min_volume.usd`)",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "cfg.name.min\\_volume.usd",
        "type": "float",
        "required": false,
        "description": "Minimum USD trade volume of trades accepted for order (cannot use at same time as `min_volume.percentage`)",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "cfg.name.name",
        "type": "string",
        "required": true,
        "description": "The name assigned to this configuration (e.g. the pair being configured)",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "cfg.name.price\\_elapsed\\_validity",
        "type": "float",
        "required": false,
        "description": "Will cancel current orders for this pair and not submit a new order if last price update time has been longer than this value in seconds",
        "default_value": "300",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "cfg.name.rel",
        "type": "string",
        "required": true,
        "description": "Ticker of the coin you wish to buy",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "cfg.name.rel\\_confs",
        "type": "integer",
        "required": false,
        "description": "Number of required blockchain confirmations for rel coin atomic swap transaction; defaults to rel coin configuration if not set",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "cfg.name.rel\\_nota",
        "type": "boolean",
        "required": false,
        "description": "Whether dPoW notarization is required for rel coin atomic swap transaction; defaults to base coin configuration if not set",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "cfg.name.spread",
        "type": "string",
        "required": true,
        "description": "Target price in relation to prices API value",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "price\\_urls",
        "type": "list",
        "required": false,
        "description": "A list of URLs serving price data in JSON format. During each update loop, price data will be sourced from the first working URL in the list. If not defined, a [default list](https://github.com/KomodoPlatform/komodo-defi-framework/blob/main/mm2src/coins/lp_price.rs#L13) will be used.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "--------------",
      "AlreadyStarted"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/swaps_and_orders/start_simple_market_maker_bot/index.mdx"
  },
  "start_version_stat_collection": {
    "method_name": "start_version_stat_collection",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [
      "-------------",
      "DatabaseError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/start_version_stat_collection/index.mdx"
  },
  "stop_simple_market_maker_bot": {
    "method_name": "stop_simple_market_maker_bot",
    "version": "v2",
    "parameters": [
      {
        "name": ":----",
        "type": ":------:",
        "required": false,
        "description": "*None*",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "--------------",
      "AlreadyStopped"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/swaps_and_orders/stop_simple_market_maker_bot/index.mdx"
  },
  "stop_version_stat_collection": {
    "method_name": "stop_version_stat_collection",
    "version": "v2",
    "parameters": [
      {
        "name": ":----",
        "type": ":------:",
        "required": false,
        "description": "*None*",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "----------",
      "NotRunning"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/stop_version_stat_collection/index.mdx"
  },
  "stream::balance::enable": {
    "method_name": "stream::balance::enable",
    "version": "v2",
    "parameters": [
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "Ticker of the coin to activate streaming for. The coin must be activated first.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "client\\_id",
        "type": "integer",
        "required": false,
        "description": "In the case of a single client, this defaults to `0`. This ID can be used to access data via [http://localhost:7783/event-stream?id=1](http://localhost:7783/event-stream?id=1)",
        "default_value": "0",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "config",
        "type": "object",
        "required": false,
        "description": "EVM only. A standard [StreamingConfig](/komodo-defi-framework/api/common_structures/#streaming-config) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "----------------------",
      "CoinNotFound",
      "UnknownClient",
      "ClientAlreadyListening",
      "EnableError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/streaming/balance_enable/index.mdx"
  },
  "stream::disable": {
    "method_name": "stream::disable",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "This ID can be used to access data (e.g. via [http://localhost:7783/event-stream?id=1](http://localhost:7783/event-stream?id=1))",
        "required": false,
        "description": "string",
        "default_value": "streamer\\_id",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "----------------",
      "StreamerNotFound",
      "UnknownClient"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/streaming/disable/index.mdx"
  },
  "stream::fee_estimator::enable": {
    "method_name": "stream::fee_estimator::enable",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "This ID can be used to access data (e.g. via [http://localhost:7783/event-stream?id=1](http://localhost:7783/event-stream?id=1))",
        "required": false,
        "description": "string",
        "default_value": "coin",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "----------------------",
      "CoinNotFound",
      "CoinNotSupported",
      "UnknownClient",
      "ClientAlreadyListening",
      "InvalidRequest"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/streaming/fee_estimator/index.mdx"
  },
  "stream::heartbeat::enable": {
    "method_name": "stream::heartbeat::enable",
    "version": "v2",
    "parameters": [
      {
        "name": "client\\_id",
        "type": "integer",
        "required": false,
        "description": "In the case of a single client, this defaults to `0`. This ID can be used to access data via [http://localhost:7783/event-stream?id=1](http://localhost:7783/event-stream?id=1).",
        "default_value": "0",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "config",
        "type": "object",
        "required": false,
        "description": "A standard [StreamingConfig](/komodo-defi-framework/api/common_structures/#streaming-config) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "----------------------",
      "UnknownClient",
      "ClientAlreadyListening"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/streaming/heartbeat_enable/index.mdx"
  },
  "stream::network::enable": {
    "method_name": "stream::network::enable",
    "version": "v2",
    "parameters": [
      {
        "name": "client\\_id",
        "type": "integer",
        "required": false,
        "description": "In the case of a single client, this defaults to `0`. This ID can be used to access data via [http://localhost:7783/event-stream?id=1](http://localhost:7783/event-stream?id=1)",
        "default_value": "0",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "config",
        "type": "object",
        "required": false,
        "description": "A standard [StreamingConfig](/komodo-defi-framework/api/common_structures/#streaming-config) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "----------------------",
      "UnknownClient",
      "ClientAlreadyListening"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/streaming/network_enable/index.mdx"
  },
  "stream::order_status::enable": {
    "method_name": "stream::order_status::enable",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [
      "----------------------",
      "UnknownClient",
      "ClientAlreadyListening"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/streaming/order_status_enable/index.mdx"
  },
  "stream::orderbook::enable": {
    "method_name": "stream::orderbook::enable",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "Base currency of a pair",
        "required": false,
        "description": "integer",
        "default_value": "client\\_id",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "This ID can be used to access data (e.g. via [http://localhost:7783/event-stream?id=1](http://localhost:7783/event-stream?id=1))",
        "type": "",
        "required": false,
        "description": "✓",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "----------------------",
      "UnknownClient",
      "ClientAlreadyListening"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/streaming/orderbook_enable/index.mdx"
  },
  "stream::swap_status::enable": {
    "method_name": "stream::swap_status::enable",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [
      "----------------------",
      "UnknownClient",
      "ClientAlreadyListening"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/streaming/swap_status_enable/index.mdx"
  },
  "stream::tx_history::enable": {
    "method_name": "stream::tx_history::enable",
    "version": "v2",
    "parameters": [
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "Ticker of the coin to activate streaming for. The coin must be activated first.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "client\\_id",
        "type": "integer",
        "required": false,
        "description": "This ID can be used to access data via [http://localhost:7783/event-stream?id=1](http://localhost:7783/event-stream?id=1)",
        "default_value": "0",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "----------------------",
      "CoinNotFound",
      "UnknownClient",
      "ClientAlreadyListening",
      "CoinNotSupported"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/streaming/tx_history_enable/index.mdx"
  },
  "task::account_balance::cancel": {
    "method_name": "task::account_balance::cancel",
    "version": "v2",
    "parameters": [],
    "response_parameters": [
      {
        "name": "error\\_data",
        "type": "string",
        "required": false,
        "description": "error\\_path",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Used for debugging. A reference to the function in code base which returned the error",
        "type": "",
        "required": false,
        "description": "Used for debugging. A trace of lines of code which led to the returned error",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "error\\_type",
        "type": "string",
        "required": false,
        "description": "result",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/task_managed/account_balance/cancel/index.mdx"
  },
  "task::account_balance::init": {
    "method_name": "task::account_balance::init",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "For GUIs, this will be zero. In CLI you can use other values if you [know what you are doing](https://learnmeabitcoin.com/technical/hd-wallets)",
        "required": false,
        "description": "string",
        "default_value": "coin",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/task_managed/account_balance/init/index.mdx"
  },
  "task::account_balance::status": {
    "method_name": "task::account_balance::status",
    "version": "v2",
    "parameters": [
      {
        "name": "forget\\_if\\_finished",
        "type": "boolean",
        "required": false,
        "description": "If `false`, will return final response for completed tasks.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "task\\_id",
        "type": "integer",
        "required": true,
        "description": "The identifying number returned when initiating the task.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "ticker",
        "type": "string",
        "required": false,
        "description": "wallet\\_balance",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/task_managed/account_balance/status/index.mdx"
  },
  "task::connect_metamask::cancel": {
    "method_name": "task::connect_metamask::cancel",
    "version": "v2",
    "parameters": [],
    "response_parameters": [
      {
        "name": "error",
        "type": "string",
        "required": false,
        "description": "error\\_path",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Used for debugging. A reference to the function in code base which returned the error.",
        "type": "",
        "required": false,
        "description": "Used for debugging. A trace of lines of code which led to the returned error.",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "error\\_type",
        "type": "string",
        "required": false,
        "description": "error\\_data",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/task_connect_metamask/cancel/index.mdx"
  },
  "task::connect_metamask::init": {
    "method_name": "task::connect_metamask::init",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [
      "---------------------------",
      "MetamaskInitializingAlready",
      "EthProviderNotFound",
      "UnexpectedAccountSelected",
      "UserCancelled",
      "Timeout",
      "InternalError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/task_connect_metamask/init/index.mdx"
  },
  "task::connect_metamask::status": {
    "method_name": "task::connect_metamask::status",
    "version": "v2",
    "parameters": [
      {
        "name": "task\\_id",
        "type": "integer",
        "required": true,
        "description": "The `task_id` returned by the *init* call.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "forget\\_if\\_finished",
        "type": "boolean",
        "required": false,
        "description": "If `false`, the final (completed) response is returned on every call.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "-------------------------",
      "MetamaskCtxNotInitialized",
      "EthProviderNotFound",
      "UserCancelled",
      "Timeout",
      "InternalError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/task_connect_metamask/status/index.mdx"
  },
  "task::create_new_account::cancel": {
    "method_name": "task::create_new_account::cancel",
    "version": "v2",
    "parameters": [],
    "response_parameters": [
      {
        "name": "error",
        "type": "string",
        "required": false,
        "description": "error\\_path",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "An indicator of the class or function which returned the error.",
        "type": "",
        "required": false,
        "description": "An indicator of where in the source code the error was thrown.",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "error\\_type",
        "type": "string",
        "required": false,
        "description": "error\\_data",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/task_managed/create_new_account/cancel/index.mdx"
  },
  "task::create_new_account::init": {
    "method_name": "task::create_new_account::init",
    "version": "v2",
    "parameters": [
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "Ticker of coin you would like to initialize a HD account for.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "account\\_id",
        "type": "integer",
        "required": false,
        "description": "If not defined, will increment to the next unused account id in the wallet.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "scan",
        "type": "boolean",
        "required": false,
        "description": "If `true`, will scan the account for funded addresses.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "gap\\_limit",
        "type": "integer",
        "required": false,
        "description": "The maximum number of empty addresses in a row. Defaults to the value provided on activation, or `20` if no value was provided.",
        "default_value": "20",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/task_managed/create_new_account/init/index.mdx"
  },
  "task::create_new_account::status": {
    "method_name": "task::create_new_account::status",
    "version": "v2",
    "parameters": [
      {
        "name": "task\\_id",
        "type": "integer",
        "required": true,
        "description": "The identifying number returned when initiating the task.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "forget\\_if\\_finished",
        "type": "boolean",
        "required": false,
        "description": "If `false`, will return final response for completed tasks.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/task_managed/create_new_account/status/index.mdx"
  },
  "task::create_new_account::user_action": {
    "method_name": "task::create_new_account::user_action",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The identifying number returned when initiating the account creation process.",
        "required": false,
        "description": "object",
        "default_value": "user\\_action",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Object containing the params below",
        "type": "",
        "required": false,
        "description": "✓",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "user\\_action.pin",
        "required": false,
        "description": "When the Trezor device is displaying a grid of numbers for PIN entry, this param will contain your Trezor pin, as mapped through your keyboard numpad. See the image below for more information.",
        "default_value": "✓",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/task_managed/create_new_account/user_action/index.mdx"
  },
  "task::enable_bch::cancel": {
    "method_name": "task::enable_bch::cancel",
    "version": "v2",
    "parameters": [],
    "response_parameters": [
      {
        "name": "error",
        "type": "string",
        "required": false,
        "description": "error\\_path",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "An indicator of the class or function which reurned the error.",
        "type": "",
        "required": false,
        "description": "An indicator of where in the source code the error was thrown.",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "error\\_type",
        "type": "string",
        "required": false,
        "description": "error\\_data",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_bch/cancel/index.mdx"
  },
  "task::enable_bch::init": {
    "method_name": "task::enable_bch::init",
    "version": "v2",
    "parameters": [
      {
        "name": "ticker",
        "type": "string",
        "required": true,
        "description": "Ticker of the BCH-based coin you want to enable.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "mode",
        "type": "object",
        "required": true,
        "description": "A standard [ActivationMode](/komodo-defi-framework/api/common_structures/activation/#activation-mode) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "bchd\\_urls",
        "type": "array of strings",
        "required": false,
        "description": "A list of BCHD gRPC API server URLs, used for validation of SLP token transactions. It's recommended to add as many servers as possible. The URLs list can be found at [https://bchd.fountainhead.cash/](https://bchd.fountainhead.cash/).",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "slp\\_tokens\\_requests",
        "type": "array of objects",
        "required": false,
        "description": "A list of standard [TokensRequest](/komodo-defi-framework/api/common_structures/activation/#tokens-request) objects.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "address\\_format",
        "type": "object",
        "required": false,
        "description": "Overwrites the address format from coins file, if set. A standard [AddressFormat](/komodo-defi-framework/api/common_structures/wallet/#address-format) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "allow\\_slp\\_unsafe\\_conf",
        "type": "boolean",
        "required": false,
        "description": "If true, allows bchd\\_urls to be empty. **Warning:** it is highly unsafe to do so as it may lead to invalid SLP transactions generation and tokens burning.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "get\\_balances",
        "type": "boolean",
        "required": false,
        "description": "If false, coin and token balances will not be returned in the response, and the response will be returned more quickly.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "required\\_confirmations",
        "type": "integer",
        "required": false,
        "description": "Confirmations to wait for steps in swap.",
        "default_value": "3",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "requires\\_notarization",
        "type": "boolean",
        "required": false,
        "description": "Has no effect on BCH.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "tx\\_history",
        "type": "boolean",
        "required": false,
        "description": "If true the Komodo DeFi Framework API will preload transaction history as a background process. Must be set to true to use the [my\\_tx\\_history](/komodo-defi-framework/api/legacy/my_tx_history/#my-tx-history) method.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "utxo\\_merge\\_params",
        "type": "object",
        "required": false,
        "description": "A standard [UtxoMergeParams](/komodo-defi-framework/api/common_structures/activation/#utxo-merge-params) object. Used to reduce a wallet's UTXO count in cases where it is causing significantly slower RPC responses.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_bch/init/index.mdx"
  },
  "task::enable_bch::status": {
    "method_name": "task::enable_bch::status",
    "version": "v2",
    "parameters": [
      {
        "name": "task\\_id",
        "type": "integer",
        "required": true,
        "description": "The identifying number returned when initiating the initialisation process.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "forget\\_if\\_finished",
        "type": "boolean",
        "required": false,
        "description": "If false, will return final response for completed tasks.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_bch/status/index.mdx"
  },
  "task::enable_bch::user_action": {
    "method_name": "task::enable_bch::user_action",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The identifying number returned when initiating the initialisation process.",
        "required": false,
        "description": "object",
        "default_value": "user\\_action",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Object containing the params below",
        "type": "",
        "required": false,
        "description": "✓",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "user\\_action.pin",
        "required": false,
        "description": "When the Trezor device is displaying a grid of numbers for PIN entry, this param will contain your Trezor pin, as mapped through your keyboard numpad. See the image below for more information.",
        "default_value": "✓",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_bch/user_action/index.mdx"
  },
  "task::enable_erc20::cancel": {
    "method_name": "task::enable_erc20::cancel",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "Activation task identifier.",
        "required": false,
        "description": "string",
        "default_value": "userpass",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_erc20/cancel/index.mdx"
  },
  "task::enable_erc20::init": {
    "method_name": "task::enable_erc20::init",
    "version": "v2",
    "parameters": [
      {
        "name": "ticker",
        "type": "string",
        "required": true,
        "description": "ERC-20 token symbol to activate (e.g., `USDC`).",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "required\\_confirmations",
        "type": "integer",
        "required": false,
        "description": "Number of confirmations required for swap transactions involving the token. If omitted, defaults to the parent platform-coin value (typically `3`).",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "scan\\_policy",
        "type": "string enum",
        "required": false,
        "description": "Address-scanning behaviour for HD wallets. One of `do_not_scan`, `scan_if_new_wallet` (default), or `scan`.",
        "default_value": "scan_if_new_wallet",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "min\\_addresses\\_number",
        "type": "integer",
        "required": false,
        "description": "Minimum number of addresses to derive per HD account when `scan_policy` triggers scanning.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "path\\_to\\_address",
        "type": "object",
        "required": false,
        "description": "HD path selector (account / address index) to use as the default swap address.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "priv\\_key\\_policy",
        "type": "object",
        "required": false,
        "description": "Object specifying the policy to access private key during activation. Must include a `type` field with a value from [PrivKeyActivationPolicyEnum](/komodo-defi-framework/api/common_structures/enums/#priv-key-activation-policy-enum). When `type` is `WalletConnect`, also provide a `data` field containing the session topic.",
        "default_value": "{\"type\": \"ContextPrivKey\"}",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "userpass",
        "type": "string",
        "required": true,
        "description": "RPC password (`RPC_UserP@SSW0RD`).",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_erc20/init/index.mdx"
  },
  "task::enable_erc20::status": {
    "method_name": "task::enable_erc20::status",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [
      "--------------",
      "status",
      "details.result",
      ".error",
      ".error\\_path",
      ".error\\_trace",
      ".error\\_type",
      ".error\\_data"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_erc20/status/index.mdx"
  },
  "task::enable_erc20::user_action": {
    "method_name": "task::enable_erc20::user_action",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "Task identifier.",
        "required": false,
        "description": "object",
        "default_value": "user\\_action",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Object containing the parameters below.",
        "type": "",
        "required": false,
        "description": "✓",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "user\\_action.pin",
        "required": false,
        "description": "Required if `action_type` is `TrezorPin`. Trezor PIN mapped via numpad grid.",
        "default_value": "✗",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "userpass",
        "type": "string",
        "required": true,
        "description": "",
        "default_value": "RPC password.",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_erc20/user_action/index.mdx"
  },
  "task::enable_eth::cancel": {
    "method_name": "task::enable_eth::cancel",
    "version": "v2",
    "parameters": [],
    "response_parameters": [
      {
        "name": "error",
        "type": "string",
        "required": false,
        "description": "error\\_path",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "An indicator of the class or function which reurned the error.",
        "type": "",
        "required": false,
        "description": "An indicator of where in the source code the error was thrown.",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "error\\_type",
        "type": "string",
        "required": false,
        "description": "error\\_data",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_eth/cancel/index.mdx"
  },
  "task::enable_eth::init": {
    "method_name": "task::enable_eth::init",
    "version": "v2",
    "parameters": [
      {
        "name": "nodes",
        "type": "array of [CoinNode](/komodo-defi-framework/api/common_structures/activation/#coin-node) objects",
        "required": true,
        "description": "One or more RPC nodes used to communicate with the Ethereum network. Each object must include a `url` (string) and may include `komodo_proxy` (boolean).",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "swap\\_contract\\_address",
        "type": "string",
        "required": true,
        "description": "Address of the Komodo atomic-swap smart-contract deployed on the target chain.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "ticker",
        "type": "string",
        "required": true,
        "description": "Ticker of the ETH-based platform coin you want to enable.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "contract\\_supports\\_watchers",
        "type": "boolean",
        "required": false,
        "description": "Set to `true` if the deployed swap contract supports watcher extensions.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "erc20\\_tokens\\_requests",
        "type": "array of [TokensRequest](/komodo-defi-framework/api/common_structures/activation/#tokens-request) objects",
        "required": false,
        "description": "Token activation requests to execute along with the platform coin.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "fallback\\_swap\\_contract",
        "type": "string",
        "required": false,
        "description": "Optional fallback contract address used when the primary `swap_contract_address` fails.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "gap\\_limit",
        "type": "integer",
        "required": false,
        "description": "HD-wallet gap-limit to use when scanning for used addresses.",
        "default_value": "20",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "get\\_balances",
        "type": "boolean",
        "required": false,
        "description": "When `false`, balances are not queried after activation, making the call return faster.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "path\\_to\\_address",
        "type": "[AddressPath](/komodo-defi-framework/api/common_structures/activation/#address-derivation-path) object",
        "required": false,
        "description": "A standard [AddressPath](/komodo-defi-framework/api/common_structures/wallet/#address-path) object (`account/change/index`) used to derive a non-standard address.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "priv\\_key\\_policy",
        "type": "object ([EthPrivKeyActivationPolicyEnum](/komodo-defi-framework/api/common_structures/enums/#eth-priv-key-activation-policy-enum))",
        "required": false,
        "description": "Determines where the private key comes from.",
        "default_value": "{ \"type\": \"ContextPrivKey\" }",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "required\\_confirmations",
        "type": "integer",
        "required": false,
        "description": "Number of block confirmations to wait for critical swap steps.",
        "default_value": "3",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "rpc\\_mode",
        "type": "string ([EthRpcModeEnum](/komodo-defi-framework/api/common_structures/enums/#eth-rpc-mode-enum))",
        "required": false,
        "description": "Set to `\"Metamask\"` when activating through MetaMask (web only).",
        "default_value": "\"Default\"",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "swap\\_v2\\_contracts",
        "type": "[SwapV2Contracts](/komodo-defi-framework/api/common_structures/activation/#swap-v2-contracts) object",
        "required": false,
        "description": "Advanced: addresses of maker-, taker- and NFT-swap V2 contracts, if they differ from the defaults.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_eth/init/index.mdx"
  },
  "task::enable_eth::status": {
    "method_name": "task::enable_eth::status",
    "version": "v2",
    "parameters": [
      {
        "name": "task\\_id",
        "type": "integer",
        "required": true,
        "description": "The identifying number returned when initiating the initialisation process.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "forget\\_if\\_finished",
        "type": "boolean",
        "required": false,
        "description": "If false, will return final response for completed tasks.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_eth/status/index.mdx"
  },
  "task::enable_eth::user_action": {
    "method_name": "task::enable_eth::user_action",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The identifying number returned when initiating the initialisation process.",
        "required": false,
        "description": "object",
        "default_value": "user\\_action",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Object containing the params below",
        "type": "",
        "required": false,
        "description": "✓",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "user\\_action.pin",
        "required": false,
        "description": "When the Trezor device is displaying a grid of numbers for PIN entry, this param will contain your Trezor pin, as mapped through your keyboard numpad. See the image below for more information.",
        "default_value": "✓",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_eth/user_action/index.mdx"
  },
  "task::enable_lightning::cancel": {
    "method_name": "task::enable_lightning::cancel",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/lightning/activation/cancel/index.mdx"
  },
  "task::enable_lightning::init": {
    "method_name": "task::enable_lightning::init",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "A standard [LightningActivationParams](/komodo-defi-framework/api/common_structures/lightning/#lightning-activation-params) object.",
        "required": false,
        "description": "string",
        "default_value": "ticker",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/lightning/activation/init/index.mdx"
  },
  "task::enable_lightning::status": {
    "method_name": "task::enable_lightning::status",
    "version": "v2",
    "parameters": [
      {
        "name": "task\\_id",
        "type": "integer",
        "required": true,
        "description": "The task id returned from `task::enable_lightning::init`.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "forget\\_if\\_finished",
        "type": "boolean",
        "required": false,
        "description": "If `false`, the status of the `task_id` will still be available after the task has completed.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "address",
        "type": "string",
        "required": false,
        "description": "balance",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/lightning/activation/status/index.mdx"
  },
  "task::enable_lightning::user_action": {
    "method_name": "task::enable_lightning::user_action",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "Lightning init task identifier.",
        "required": false,
        "description": "object",
        "default_value": "user\\_action",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Object containing parameters below.",
        "type": "",
        "required": false,
        "description": "✓",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "user\\_action.pin",
        "required": false,
        "description": "Required PIN if applicable.",
        "default_value": "✗",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "userpass",
        "type": "string",
        "required": true,
        "description": "",
        "default_value": "RPC password.",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/lightning/activation/user_action/index.mdx"
  },
  "task::enable_qtum::cancel": {
    "method_name": "task::enable_qtum::cancel",
    "version": "v2",
    "parameters": [],
    "response_parameters": [
      {
        "name": "error",
        "type": "string",
        "required": false,
        "description": "error\\_path",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "An indicator of the class or function which returned the error.",
        "type": "",
        "required": false,
        "description": "An indicator of where in the source code the error was thrown.",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "error\\_type",
        "type": "string",
        "required": false,
        "description": "error\\_data",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_qtum/cancel/index.mdx"
  },
  "task::enable_qtum::init": {
    "method_name": "task::enable_qtum::init",
    "version": "v2",
    "parameters": [
      {
        "name": "ticker",
        "type": "string",
        "required": true,
        "description": "Ticker of the QTUM-based coin you want to enable.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "mode",
        "type": "object",
        "required": true,
        "description": "A standard [ActivationMode](/komodo-defi-framework/api/common_structures/activation/#activation-mode) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "qtum\\_node\\_urls",
        "type": "array of strings",
        "required": false,
        "description": "A list of QTUM node URLs, used for validation of QRC20 token transactions. It's recommended to add as many servers as possible. The URLs list can be found at [https://qtumnodes.com/](https://qtumnodes.com/).",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "qrc20\\_tokens\\_requests",
        "type": "array of objects",
        "required": false,
        "description": "A list of standard [TokensRequest](/komodo-defi-framework/api/common_structures/activation/#tokens-request) objects.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "address\\_format",
        "type": "object",
        "required": false,
        "description": "Overwrites the address format from coins file, if set. A standard [AddressFormat](/komodo-defi-framework/api/common_structures/wallet/#address-format) object.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "allow\\_qrc20\\_unsafe\\_conf",
        "type": "boolean",
        "required": false,
        "description": "If true, allows qtum\\_node\\_urls to be empty. **Warning:** it is highly unsafe to do so as it may lead to invalid QRC20 transactions generation and tokens burning.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "get\\_balances",
        "type": "boolean",
        "required": false,
        "description": "If false, coin and token balances will not be returned in the response, and the response will be returned more quickly.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "required\\_confirmations",
        "type": "integer",
        "required": false,
        "description": "Confirmations to wait for steps in swap.",
        "default_value": "3",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "requires\\_notarization",
        "type": "boolean",
        "required": false,
        "description": "Has no effect on QTUM.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "tx\\_history",
        "type": "boolean",
        "required": false,
        "description": "If true the Komodo DeFi Framework API will preload transaction history as a background process. Must be set to true to use the [my\\_tx\\_history](/komodo-defi-framework/api/legacy/my_tx_history/#my-tx-history) method.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "utxo\\_merge\\_params",
        "type": "object",
        "required": false,
        "description": "A standard [UtxoMergeParams](/komodo-defi-framework/api/common_structures/activation/#utxo-merge-params) object. Used to reduce a wallet's UTXO count in cases where it is causing significantly slower RPC responses.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_qtum/init/index.mdx"
  },
  "task::enable_qtum::status": {
    "method_name": "task::enable_qtum::status",
    "version": "v2",
    "parameters": [
      {
        "name": "task\\_id",
        "type": "integer",
        "required": true,
        "description": "The identifying number returned when initiating the initialisation process.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "forget\\_if\\_finished",
        "type": "boolean",
        "required": false,
        "description": "If false, will return final response for completed tasks.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_qtum/status/index.mdx"
  },
  "task::enable_qtum::user_action": {
    "method_name": "task::enable_qtum::user_action",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The identifying number returned when initiating the initialisation process.",
        "required": false,
        "description": "object",
        "default_value": "user\\_action",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Object containing the params below",
        "type": "",
        "required": false,
        "description": "✓",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "user\\_action.pin",
        "required": false,
        "description": "When the Trezor device is displaying a grid of numbers for PIN entry, this param will contain your Trezor pin, as mapped through your keyboard numpad. See the image below for more information.",
        "default_value": "✓",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_qtum/user_action/index.mdx"
  },
  "task::enable_sia::cancel": {
    "method_name": "task::enable_sia::cancel",
    "version": "v2",
    "parameters": [
      {
        "name": ":------",
        "type": ":------:",
        "required": false,
        "description": "task\\_id",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_sia/cancel/index.mdx"
  },
  "task::enable_sia::init": {
    "method_name": "task::enable_sia::init",
    "version": "v2",
    "parameters": [
      {
        "name": ":-----------------------",
        "type": ":-----",
        "required": false,
        "description": ":-------------------------------------------------------------------------",
        "default_value": ":-----:",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "client\\_conf",
        "type": "object",
        "required": true,
        "description": "An object containing the SIA client configuration.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "client\\_conf.server\\_url",
        "type": "string",
        "required": true,
        "description": "The URL of the SIA public node. e.g., `https://api.siascan.com/wallet/api`",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "client\\_conf.password",
        "type": "string",
        "required": true,
        "description": "The password for the SIA wallet daemon.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "tx\\_history",
        "type": "bool",
        "required": false,
        "description": "Whether to enable transaction history for the coin.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": ":-----------------------------",
        "type": "",
        "required": false,
        "description": "The ID of the activation task.",
        "default_value": "integer",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_sia/init/index.mdx"
  },
  "task::enable_sia::status": {
    "method_name": "task::enable_sia::status",
    "version": "v2",
    "parameters": [
      {
        "name": ":------",
        "type": ":------:",
        "required": false,
        "description": "task\\_id",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_sia/status/index.mdx"
  },
  "task::enable_sia::user_action": {
    "method_name": "task::enable_sia::user_action",
    "version": "v2",
    "parameters": [
      {
        "name": ":------",
        "type": ":------:",
        "required": false,
        "description": "task\\_id",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_sia/user_action/index.mdx"
  },
  "task::enable_tendermint::cancel": {
    "method_name": "task::enable_tendermint::cancel",
    "version": "v2",
    "parameters": [],
    "response_parameters": [
      {
        "name": "error",
        "type": "string",
        "required": false,
        "description": "error\\_path",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "An indicator of the class or function which reurned the error.",
        "type": "",
        "required": false,
        "description": "An indicator of where in the source code the error was thrown.",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "error\\_type",
        "type": "string",
        "required": false,
        "description": "error\\_data",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_tendermint/cancel/index.mdx"
  },
  "task::enable_tendermint::init": {
    "method_name": "task::enable_tendermint::init",
    "version": "v2",
    "parameters": [
      {
        "name": "ticker",
        "type": "string",
        "required": true,
        "description": "Ticker of the Tendermint-based coin you want to enable.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "nodes",
        "type": "array of objects",
        "required": true,
        "description": "A list of standard [CoinNode](/komodo-defi-framework/api/common_structures/activation/#coin-node) objects.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "tokens\\_params",
        "type": "array of objects",
        "required": false,
        "description": "A list of standard [TokenActivationParams](/komodo-defi-framework/api/common_structures/activation/#token-activation-params) objects representing IBC assets to activate alongside the platform coin.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "get\\_balances",
        "type": "boolean",
        "required": false,
        "description": "If `false`, balances will not be returned in the response, resulting in a faster reply.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "tx\\_history",
        "type": "boolean",
        "required": false,
        "description": "If `true` the Komodo DeFi Framework API will preload transaction history as a background process. Must be set to `true` to use the [my\\_tx\\_history](/komodo-defi-framework/api/legacy/my_tx_history/#my-tx-history) method.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "path\\_to\\_address",
        "type": "object",
        "required": false,
        "description": "A standard [AddressPath](/komodo-defi-framework/api/common_structures/wallet/#address-path) object (`account/change/index`) used to derive a non-standard address.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "activation\\_params",
        "type": "object",
        "required": false,
        "description": "A standard [ActivationParams](/komodo-defi-framework/api/common_structures/activation/#activation-params) object used when activating via Keplr, Ledger, or WalletConnect.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_tendermint/init/index.mdx"
  },
  "task::enable_tendermint::status": {
    "method_name": "task::enable_tendermint::status",
    "version": "v2",
    "parameters": [
      {
        "name": "task\\_id",
        "type": "integer",
        "required": true,
        "description": "The identifying number returned when initiating the initialisation process.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "forget\\_if\\_finished",
        "type": "boolean",
        "required": false,
        "description": "If false, will return final response for completed tasks.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_tendermint/status/index.mdx"
  },
  "task::enable_tendermint::user_action": {
    "method_name": "task::enable_tendermint::user_action",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The identifying number returned when initiating the initialisation process.",
        "required": false,
        "description": "object",
        "default_value": "user\\_action",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Object containing the params below",
        "type": "",
        "required": false,
        "description": "✓",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "user\\_action.pin",
        "required": false,
        "description": "When the Trezor device is displaying a grid of numbers for PIN entry, this param will contain your Trezor pin, as mapped through your keyboard numpad. See the image below for more information.",
        "default_value": "✓",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_tendermint/user_action/index.mdx"
  },
  "task::enable_tendermint_token::cancel": {
    "method_name": "task::enable_tendermint_token::cancel",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [
      "------------",
      "error",
      "error\\_path",
      "error\\_trace",
      "error\\_type",
      "error\\_data"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_tendermint_token/cancel/index.mdx"
  },
  "task::enable_tendermint_token::init": {
    "method_name": "task::enable_tendermint_token::init",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "Token ticker (e.g., `IRIS`).",
        "required": false,
        "description": "string",
        "default_value": "userpass",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "------------",
      "error",
      "error\\_type",
      "error\\_path",
      "error\\_trace"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_tendermint_token/init/index.mdx"
  },
  "task::enable_tendermint_token::status": {
    "method_name": "task::enable_tendermint_token::status",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [
      "--------------",
      "status",
      "details.result",
      ".error",
      ".error\\_path",
      ".error\\_trace",
      ".error\\_type",
      ".error\\_data"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_tendermint_token/status/index.mdx"
  },
  "task::enable_tendermint_token::user_action": {
    "method_name": "task::enable_tendermint_token::user_action",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "Task identifier returned from `init`.",
        "required": false,
        "description": "object",
        "default_value": "user\\_action",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Object with the parameters below.",
        "type": "",
        "required": false,
        "description": "✓",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "user\\_action.pin",
        "required": false,
        "description": "Required PIN if action\\_type is `TrezorPin`.",
        "default_value": "✗",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "userpass",
        "type": "string",
        "required": true,
        "description": "",
        "default_value": "RPC password.",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_tendermint_token/user_action/index.mdx"
  },
  "task::enable_utxo::cancel": {
    "method_name": "task::enable_utxo::cancel",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [
      "------------",
      "result",
      "error",
      "error\\_path",
      "error\\_trace",
      "error\\_type",
      "error\\_data"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_utxo/cancel/index.mdx"
  },
  "task::enable_utxo::init": {
    "method_name": "task::enable_utxo::init",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_utxo/init/index.mdx"
  },
  "task::enable_utxo::status": {
    "method_name": "task::enable_utxo::status",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [
      "--------------",
      "status",
      "details.result",
      ".error",
      ".error\\_path",
      ".error\\_trace",
      ".error\\_type",
      ".error\\_data"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_utxo/status/index.mdx"
  },
  "task::enable_utxo::user_action": {
    "method_name": "task::enable_utxo::user_action",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_utxo/user_action/index.mdx"
  },
  "task::enable_z_coin::cancel": {
    "method_name": "task::enable_z_coin::cancel",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [
      "------------",
      "result",
      "error",
      "error\\_path",
      "error\\_trace",
      "error\\_type",
      "error\\_data"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_z_coin/cancel/index.mdx"
  },
  "task::enable_z_coin::init": {
    "method_name": "task::enable_z_coin::init",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_z_coin/init/index.mdx"
  },
  "task::enable_z_coin::status": {
    "method_name": "task::enable_z_coin::status",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [
      "--------------",
      "status",
      "details.result",
      ".error",
      ".error\\_path",
      ".error\\_trace",
      ".error\\_type",
      ".error\\_data"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_z_coin/status/index.mdx"
  },
  "task::enable_z_coin::user_action": {
    "method_name": "task::enable_z_coin::user_action",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/coin_activation/task_managed/enable_z_coin/user_action/index.mdx"
  },
  "task::get_new_address::cancel": {
    "method_name": "task::get_new_address::cancel",
    "version": "v2",
    "parameters": [],
    "response_parameters": [
      {
        "name": "error",
        "type": "string",
        "required": false,
        "description": "error\\_path",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "An indicator of the class or function which reurned the error.",
        "type": "",
        "required": false,
        "description": "An indicator of where in the source code the error was thrown.",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "error\\_type",
        "type": "string",
        "required": false,
        "description": "error\\_data",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/task_managed/get_new_address/cancel/index.mdx"
  },
  "task::get_new_address::init": {
    "method_name": "task::get_new_address::init",
    "version": "v2",
    "parameters": [
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "The ticker of the coin you want to get a new address for",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "account\\_id",
        "type": "integer",
        "required": false,
        "description": "Generally this will be `0` unless you have multiple accounts registered on your Trezor",
        "default_value": "0",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "chain",
        "type": "string",
        "required": false,
        "description": "`Internal`, or `External`. External is used for addresses that are intended to be visible outside of the wallet (e.g. for receiving payments). Internal is used for addresses which are not meant to be visible outside of the wallet and is used to return the leftover change from a transaction.",
        "default_value": "\"External\"",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "gap\\_limit",
        "type": "integer",
        "required": false,
        "description": "The maximum number of empty addresses in a row. Defaults to the value provided on activation or 20 if no value was provided",
        "default_value": "20",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/task_managed/get_new_address/init/index.mdx"
  },
  "task::get_new_address::status": {
    "method_name": "task::get_new_address::status",
    "version": "v2",
    "parameters": [
      {
        "name": "task\\_id",
        "type": "integer",
        "required": true,
        "description": "The identifying number returned when initiating the task.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "forget\\_if\\_finished",
        "type": "boolean",
        "required": false,
        "description": "If `false`, will return final response for completed tasks.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "------------",
      "NoSuchTask",
      "TaskFinished"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/task_managed/get_new_address/status/index.mdx"
  },
  "task::get_new_address::user_action": {
    "method_name": "task::get_new_address::user_action",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The identifying number returned when initiating the initialisation process.",
        "required": false,
        "description": "object",
        "default_value": "user\\_action",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Object containing the params below",
        "type": "",
        "required": false,
        "description": "✓",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "user\\_action.pin",
        "required": false,
        "description": "When the Trezor device is displaying a grid of numbers for PIN entry, this param will contain your Trezor pin, as mapped through your keyboard numpad. See the image below for more information.",
        "default_value": "✓",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "------------",
      "NoSuchTask",
      "TaskFinished"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/task_managed/get_new_address/user_action/index.mdx"
  },
  "task::init_trezor::cancel": {
    "method_name": "task::init_trezor::cancel",
    "version": "v2",
    "parameters": [],
    "response_parameters": [
      {
        "name": "error",
        "type": "string",
        "required": false,
        "description": "error\\_path",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Used for debugging. A reference to the function in code base which returned the error",
        "type": "",
        "required": false,
        "description": "Used for debugging. A trace of lines of code which led to the returned error",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "error\\_type",
        "type": "string",
        "required": false,
        "description": "error\\_data",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/task_init_trezor/cancel/index.mdx"
  },
  "task::init_trezor::init": {
    "method_name": "task::init_trezor::init",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/task_init_trezor/init/index.mdx"
  },
  "task::init_trezor::status": {
    "method_name": "task::init_trezor::status",
    "version": "v2",
    "parameters": [
      {
        "name": "task\\_id",
        "type": "integer",
        "required": true,
        "description": "The identifying number returned when initiating the initialisation process.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "forget\\_if\\_finished",
        "type": "boolean",
        "required": false,
        "description": "If `false`, will return final response for completed tasks.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "✓",
        "type": "A short indication of how the requested process is progressing.",
        "required": false,
        "description": "object",
        "default_value": "details",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Depending on the state of process progress, this will contain different information as detailed in the items below.",
        "type": "",
        "required": false,
        "description": "✓",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "details.model",
        "required": false,
        "description": "The model of the hardware wallet device (e.g. `One` or `T`)",
        "default_value": "✓",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "details.device\\_name",
        "type": "string",
        "required": true,
        "description": "",
        "default_value": "The name of the device as defined by user in Trezor Suite or another wallet application.",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "string (hex)",
        "type": "✓",
        "required": false,
        "description": "details.device\\_pubkey",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/task_init_trezor/status/index.mdx"
  },
  "task::init_trezor::user_action": {
    "method_name": "task::init_trezor::user_action",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The identifying number returned when initiating the initialisation process.",
        "required": false,
        "description": "object",
        "default_value": "user\\_action",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Object containing the params below",
        "type": "",
        "required": false,
        "description": "✓",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "user\\_action.pin",
        "required": false,
        "description": "When the Trezor device is displaying a grid of numbers for PIN entry, this param will contain your Trezor pin, as mapped through your keyboard numpad. See the image below for more information.",
        "default_value": "✗",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "user\\_action.passphrase",
        "type": "string",
        "required": false,
        "description": "",
        "default_value": "The [passphrase](https://trezor.io/learn/a/passphrases-and-hidden-wallets) functions like an extra word added to your recovery seed, and it used to access hidden wallets. To access the default wallet, input an empty string here.",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/task_init_trezor/user_action/index.mdx"
  },
  "task::scan_for_new_addresses::cancel": {
    "method_name": "task::scan_for_new_addresses::cancel",
    "version": "v2",
    "parameters": [],
    "response_parameters": [
      {
        "name": "error",
        "type": "string",
        "required": false,
        "description": "error\\_path",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "An indicator of the class or function which returned the error.",
        "type": "",
        "required": false,
        "description": "An indicator of where in the source code the error was thrown.",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "error\\_type",
        "type": "string",
        "required": false,
        "description": "error\\_data",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/task_managed/scan_for_new_addresses/cancel/index.mdx"
  },
  "task::scan_for_new_addresses::init": {
    "method_name": "task::scan_for_new_addresses::init",
    "version": "v2",
    "parameters": [
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "The ticker of the coin you want to scan addresses for",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "account\\_id",
        "type": "integer",
        "required": false,
        "description": "HD wallets only. Generally this will be `0` unless you have multiple accounts registered on your HD wallet",
        "default_value": "0",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "gap\\_limit",
        "type": "integer",
        "required": false,
        "description": "The maximum number of empty addresses in a row. Defaults to the value provided on activation or 20 if no value was provided",
        "default_value": "20",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "------------",
      "NoSuchTask",
      "TaskFinished"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/task_managed/scan_for_new_addresses/init/index.mdx"
  },
  "task::scan_for_new_addresses::status": {
    "method_name": "task::scan_for_new_addresses::status",
    "version": "v2",
    "parameters": [
      {
        "name": "task\\_id",
        "type": "integer",
        "required": true,
        "description": "The identifying number returned when initiating the task.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "forget\\_if\\_finished",
        "type": "boolean",
        "required": false,
        "description": "If `false`, will return final response for completed tasks.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "------------",
      "NoSuchTask",
      "TaskFinished"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/task_managed/scan_for_new_addresses/status/index.mdx"
  },
  "task::withdraw::cancel": {
    "method_name": "task::withdraw::cancel",
    "version": "v2",
    "parameters": [],
    "response_parameters": [
      {
        "name": "error",
        "type": "string",
        "required": false,
        "description": "error\\_path",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "An indicator of the class or function which returned the error.",
        "type": "",
        "required": false,
        "description": "An indicator of where in the source code the error was thrown.",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "error\\_type",
        "type": "string",
        "required": false,
        "description": "error\\_data",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [
      "------------",
      "NoSuchTask",
      "TaskFinished"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/task_managed/withdraw/cancel/index.mdx"
  },
  "task::withdraw::init": {
    "method_name": "task::withdraw::init",
    "version": "v2",
    "parameters": [
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "The name of the coin the user desires to withdraw",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "to",
        "type": "string",
        "required": true,
        "description": "Coins are withdrawn to this address",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "amount",
        "type": "string (numeric)",
        "required": false,
        "description": "The amount the user desires to withdraw, ignored when `max=true`",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "memo",
        "type": "string",
        "required": false,
        "description": "Used for ZHTLC and Tendermint coins only. Attaches a memo to the transaction.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "from",
        "type": "string",
        "required": false,
        "description": "Used only for transactions using a hardware wallet. For more information, see the [Trezor Integration guide](/komodo-defi-framework/api/v20/utils/task_init_trezor/)",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "from.derivation\\_path",
        "type": "string",
        "required": false,
        "description": "HD wallets only. Follows the format `m/44'/COIN_ID'/ACCOUNT_ID'/CHAIN/ADDRESS_ID`",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "from.account\\_id",
        "type": "integer",
        "required": false,
        "description": "HD wallets only. Generally this will be `0` unless you have multiple accounts registered on your HD wallet",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "from.chain",
        "type": "string",
        "required": false,
        "description": "HD wallets only. `Internal`, or `External`. External is used for addresses that are intended to be visible outside of the wallet (e.g. for receiving payments). `Internal` is used for addresses which are not meant to be visible outside of the wallet and is used to return the leftover change from a transaction.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "from.address\\_id",
        "type": "integer",
        "required": false,
        "description": "HD wallets only. Check the output from coin activation to find the ID of an address with balance.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "max",
        "type": "bool",
        "required": false,
        "description": "Withdraw the maximum available amount.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "fee",
        "type": "object",
        "required": false,
        "description": "Used only to set a custom fee, otherwise fee value will be derived from a deamon's `estimatefee` (or similar) RPC method",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "fee.type",
        "type": "string",
        "required": false,
        "description": "Type of transaction fee; possible values: `UtxoFixed` or `UtxoPerKbyte`",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "fee.amount",
        "type": "string (numeric)",
        "required": false,
        "description": "Fee amount in coin units, used only when type is `UtxoFixed` (fixed amount not depending on tx size) or `UtxoPerKbyte` (amount per Kbyte)",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "------------",
      "NoSuchTask",
      "TaskFinished"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/task_managed/withdraw/init/index.mdx"
  },
  "task::withdraw::status": {
    "method_name": "task::withdraw::status",
    "version": "v2",
    "parameters": [
      {
        "name": "task\\_id",
        "type": "integer",
        "required": true,
        "description": "The identifying number returned when initiating the initialisation process.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "forget\\_if\\_finished",
        "type": "boolean",
        "required": false,
        "description": "If `false`, will return final response for completed tasks.",
        "default_value": "true",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "details",
        "type": "object",
        "required": false,
        "description": "details.to",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Coins are withdrawn to these addresses; this may contain the `my_address` address, where change from UTXO coins is sent.",
        "type": "",
        "required": false,
        "description": "Coins are withdrawn from this address; the array contains a single element, but transactions may be sent from several addresses (UTXO coins)",
        "default_value": "array of strings",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "details.my\\_balance\\_change",
        "type": "string (numeric)",
        "required": false,
        "description": "details.received\\_by\\_me",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "the amount of coins received by `my_address` after the transaction broadcasts; the value may be above zero when the transaction requires that the Komodo DeFi Framework API send change to `my_address`",
        "type": "",
        "required": false,
        "description": "the amount of coins spent by `my_address`; this value differ from the request amount, as the transaction fee is added here",
        "default_value": "string (numeric)",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "details.total\\_amount",
        "type": "string (numeric)",
        "required": false,
        "description": "details.fee\\_details",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "the fee details of the generated transaction; `fee_details.type` is \"Utxo\" for Z coins. `fee_details.coin` will be the same as `details.coin`, and `fee_details.amount` will be a numeric value.",
        "type": "",
        "required": false,
        "description": "the hash of the generated transaction",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "details.tx\\_hex",
        "type": "string",
        "required": false,
        "description": "details.coin",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "the name of the coin the user wants to withdraw",
        "type": "",
        "required": false,
        "description": "Transaction type will be `StandardTransfer` for Z coin transactions.",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "details.kmd\\_rewards",
        "type": "object",
        "required": false,
        "description": "details.kmd\\_rewards.amount",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The amount of accrued rewards",
        "type": "",
        "required": false,
        "description": "Whether or not the rewards been claimed by me.",
        "default_value": "bool",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [
      "------------",
      "NoSuchTask",
      "TaskFinished"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/task_managed/withdraw/status/index.mdx"
  },
  "task::withdraw::user_action": {
    "method_name": "task::withdraw::user_action",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The identifying number returned when initiating the withdrawal process.",
        "required": false,
        "description": "object",
        "default_value": "user\\_action",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Object containing the params below",
        "type": "",
        "required": false,
        "description": "✓",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "user\\_action.pin",
        "required": false,
        "description": "When the Trezor device is displaying a grid of numbers for PIN entry, this param will contain your Trezor pin, as mapped through your keyboard numpad. See the image below for more information.",
        "default_value": "✓",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "------------",
      "NoSuchTask",
      "TaskFinished"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/task_managed/withdraw/user_action/index.mdx"
  },
  "trezor_connection_status": {
    "method_name": "trezor_connection_status",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [
      "---------------------",
      "TrezorNotInitialized",
      "FoundUnexpectedDevice",
      "Internal"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/trezor_connection_status/index.mdx"
  },
  "update_nft": {
    "method_name": "update_nft",
    "version": "v2",
    "parameters": [
      {
        "name": "chains",
        "type": "array",
        "required": true,
        "description": "List of networks to scan for NFTs. See [NftNetworkEnum](/komodo-defi-framework/api/common_structures/enums/#nft-network-enum) for allowed values.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "komodo\\_proxy",
        "type": "boolean",
        "required": false,
        "description": "Indicates whether authentication is required for accessing the proxy URLs.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "url",
        "type": "string",
        "required": true,
        "description": "URL link to the [Moralis API proxy base URL](https://moralis-proxy.komodo.earth) or equivalent. If komodo\\_proxy is set to true, you must provide a new Komodo Proxy URL.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "url\\_antispam",
        "type": "string",
        "required": true,
        "description": "URL link to the [Antispam API proxy base URL](https://nft.antispam.dragonhound.info) or equivalent.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/non_fungible_tokens/update_nft/index.mdx"
  },
  "update_version_stat_collection": {
    "method_name": "update_version_stat_collection",
    "version": "v2",
    "parameters": [],
    "response_parameters": [],
    "error_types": [
      "----------",
      "NotRunning"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/update_version_stat_collection/index.mdx"
  },
  "verify_message": {
    "method_name": "verify_message",
    "version": "v2",
    "parameters": [
      {
        "name": "✓",
        "type": "The address used to sign the message.",
        "required": false,
        "description": "string",
        "default_value": "coin",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The coin to verify the message with.",
        "type": "",
        "required": false,
        "description": "✓",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "signature",
        "required": false,
        "description": "The signature generated for the message.",
        "default_value": "✓",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [
      "----------------------",
      "PrefixNotFound",
      "CoinIsNotFound",
      "InvalidRequest",
      "InternalError",
      "SignatureDecodingError",
      "AddressDecodingError"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/utils/message_signing/verify_message/index.mdx"
  },
  "withdraw_nft": {
    "method_name": "withdraw_nft",
    "version": "v2",
    "parameters": [
      {
        "name": "type",
        "type": "string",
        "required": true,
        "description": "The contract type of the NFT to withdraw. Either `withdraw_erc721` or `withdraw_erc1155`.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "withdraw\\_data",
        "type": "object",
        "required": true,
        "description": "A standard [WithdrawNftData](/komodo-defi-framework/api/common_structures/nfts/#withdraw-nft-data) object.",
        "default_value": "-",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "block\\_height",
        "type": "integer",
        "required": false,
        "description": "coin",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Coin name. One of `AVALANCHE`, `BSC`, `ETH`, `FANTOM`, or `POLYGON`.",
        "type": "",
        "required": false,
        "description": "Contract type. `ERC721` or `ERC1155`.",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "fee\\_details",
        "type": "object",
        "required": false,
        "description": "from",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "List of source addresses.",
        "type": "",
        "required": false,
        "description": "Used for internal transaction identification; for some coins, it may be equal to transaction hash.",
        "default_value": "integer",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "timestamp",
        "type": "integer",
        "required": false,
        "description": "to",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "List of destination addresses.",
        "type": "",
        "required": false,
        "description": "Token address.",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "token\\_id",
        "type": "string",
        "required": false,
        "description": "transaction\\_type",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "This will always be `NftTransfer`.",
        "type": "",
        "required": false,
        "description": "Transaction ID of the withdrawal.",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/non_fungible_tokens/withdraw_nft/index.mdx"
  },
  "z_coin_tx_history": {
    "method_name": "z_coin_tx_history",
    "version": "v2",
    "parameters": [
      {
        "name": "coin",
        "type": "string",
        "required": true,
        "description": "Ticker of the coin to get history for.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Limits the number of returned transactions. Ignored if `max = true`.",
        "default_value": "10",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "paging\\_options.FromId",
        "type": "string",
        "required": false,
        "description": "Komodo DeFi Framework API will skip records until it reaches this ID, skipping the from\\_id as well; track the internal\\_id of the last displayed transaction to find the value of this field for the next page",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "paging\\_options.PageNumber",
        "type": "integer",
        "required": false,
        "description": "Komodo DeFi Framework API will return limit swaps from the selected page. Ignored if `FromId` is set.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "from\\_id",
        "type": "string",
        "required": false,
        "description": "limit",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "The limit that was set in the request; note that the actual number of transactions can differ from the specified limit (e.g., on the last page).",
        "type": "",
        "required": false,
        "description": "The page\\_number that was set in the request.",
        "default_value": "number",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "skipped",
        "type": "number",
        "required": false,
        "description": "sync\\_status",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "A standard [SyncStatus](/komodo-defi-framework/api/common_structures/#sync-status) object. Provides information to track the progress of transaction history preloading in the background.",
        "type": "",
        "required": false,
        "description": "The total number of transactions available.",
        "default_value": "number",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "total\\_pages",
        "type": "number",
        "required": false,
        "description": "transactions",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [
      "---------------",
      "NotSupportedFor",
      "CoinIsNotActive"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20/wallet/tx/zhtlc_tx_history/index.mdx"
  },
  "1inch_v6_0_classic_swap_contract": {
    "method_name": "1inch_v6_0_classic_swap_contract",
    "version": "v2-dev",
    "parameters": [],
    "response_parameters": [],
    "error_types": [
      "ErrorType",
      "----------------------------------------"
    ],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20-dev/1inch_v6_0_classic_swap_contract/index.mdx"
  },
  "1inch_v6_0_classic_swap_create": {
    "method_name": "1inch_v6_0_classic_swap_create",
    "version": "v2-dev",
    "parameters": [
      {
        "name": "✓",
        "type": "Swap amount (in coins units)",
        "required": false,
        "description": "string",
        "default_value": "base",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Base coin name",
        "type": "",
        "required": false,
        "description": "✓",
        "default_value": "string",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "slippage",
        "required": false,
        "description": "Allowed slippage, min: 0; max: 50",
        "default_value": "✓",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "allow\\_partial\\_fill",
        "type": "bool",
        "required": false,
        "description": "",
        "default_value": "If true, the algorithm can cancel part of the route, if the rate has become less attractive. Unswapped tokens will return to 'my address'.",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "bool",
        "type": "✗",
        "required": false,
        "description": "complexity\\_level",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "✗",
        "type": "Maximum number of token-connectors to be used in a transaction, min: 0; max: 3",
        "required": false,
        "description": "string",
        "default_value": "connector\\_tokens",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Token-connectors can be specified via this parameter. If not set, default token-connectors will be used",
        "type": "",
        "required": false,
        "description": "✗",
        "default_value": "bool",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "excluded\\_protocols",
        "required": false,
        "description": "Excluded supported liquidity sources. Should be the same for a quote and swap, max: 5",
        "default_value": "✗",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "fee",
        "type": "float",
        "required": false,
        "description": "",
        "default_value": "Partner fee, percentage of src token amount will be sent to referrer address, min: 0; max: 3. Should be the same for quote and swap rpc.",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "numeric",
        "type": "✗",
        "required": false,
        "description": "gas\\_price",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "✗",
        "type": "Network price per gas, in Gwei. 1inch takes in account gas expenses to determine exchange route. Should be the same for a quote and swap",
        "required": false,
        "description": "boolean",
        "default_value": "include\\_gas",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Include estimated gas in return value",
        "type": "",
        "required": false,
        "description": "✗",
        "default_value": "boolean",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "include\\_tokens\\_info",
        "required": false,
        "description": "Return fromToken and toToken info in response",
        "default_value": "✗",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "main\\_route\\_parts",
        "type": "numeric",
        "required": false,
        "description": "",
        "default_value": "Limit maximum number of main route parts. Should be the same for a quote and swap. max: 50",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "numeric",
        "type": "✗",
        "required": false,
        "description": "permit",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "✗",
        "type": "Used according [https://eips.ethereum.org/EIPS/eip-2612](https://eips.ethereum.org/EIPS/eip-2612)",
        "required": false,
        "description": "string",
        "default_value": "protocols",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Specify liquidity sources e.g.: \\&protocols=WETH,CURVE,BALANCER,...,ZRX (by default - all used)",
        "type": "",
        "required": false,
        "description": "✗",
        "default_value": "bool",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "",
        "type": "referrer",
        "required": false,
        "description": "Address to receive the partner fee. Must be set explicitly if fee is also set",
        "default_value": "✗",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "use\\_permit2",
        "type": "bool",
        "required": false,
        "description": "",
        "default_value": "Enable this flag for auto approval by Permit2 contract if you did an approval to Uniswap Permit2 smart contract for this token.",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "src\\_token",
        "type": "object",
        "required": false,
        "description": "dst\\_token",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Destination (rel) token info. A standard [1inchTokenInfo](/komodo-defi-framework/api/common_structures/orders/#1inch-token-info) object.",
        "type": "",
        "required": false,
        "description": "Optional. A list of standard [1inchProtocolInfo](/komodo-defi-framework/api/common_structures/orders/#1inch-protocol-info) objects, used as liquidity sources used to route trade.",
        "default_value": "list",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20-dev/1inch_v6_0_classic_swap_create/index.mdx"
  },
  "1inch_v6_0_classic_swap_liquidity_sources": {
    "method_name": "1inch_v6_0_classic_swap_liquidity_sources",
    "version": "v2-dev",
    "parameters": [
      {
        "name": ":-----",
        "type": ":------:",
        "required": false,
        "description": "chain\\_id",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20-dev/1inch_v6_0_classic_swap_liquidity_sources/index.mdx"
  },
  "1inch_v6_0_classic_swap_quote": {
    "method_name": "1inch_v6_0_classic_swap_quote",
    "version": "v2-dev",
    "parameters": [
      {
        "name": ":--------------------",
        "type": ":-------------------------",
        "required": false,
        "description": ":---------------------------------------------------------------------------------------------------------------------------------------",
        "default_value": ":-----:",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "amount",
        "type": "numeric string or rational",
        "required": true,
        "description": "Swap amount (in coins units)",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "base",
        "type": "string",
        "required": true,
        "description": "Base coin name",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "rel",
        "type": "string",
        "required": true,
        "description": "Rel coin name (must be from the same EVM chain as the base coin)",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "complexity\\_level",
        "type": "number",
        "required": false,
        "description": "Maximum number of token-connectors to be used in a transaction, min: 0; max: 3",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "connector\\_tokens",
        "type": "boolean",
        "required": false,
        "description": "Token-connectors can be specified via this parameter. If not set, default token-connectors will be used",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "fee",
        "type": "number",
        "required": false,
        "description": "Partner fee, percentage of src token amount will be sent to referrer address, min: 0; max: 3. Should be the same for quote and swap.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "gas\\_limit",
        "type": "number",
        "required": false,
        "description": "Maximum amount of gas for a swap. Should be the same for a quote and swap. max: 11500000",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "gas\\_price",
        "type": "string",
        "required": false,
        "description": "Network price per gas, in Gwei. 1inch takes in account gas expenses to determine exchange route. Should be the same for a quote and swap",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "include\\_gas",
        "type": "boolean",
        "required": false,
        "description": "Include estimated gas in return value",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "include\\_protocols",
        "type": "boolean",
        "required": false,
        "description": "Return used swap protocols in response",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "include\\_tokens\\_info",
        "type": "boolean",
        "required": false,
        "description": "Return fromToken and toToken info in response",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "main\\_route\\_parts",
        "type": "number",
        "required": false,
        "description": "Limit maximum number of main route parts. Should be the same for a quote and swap. max: 50",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "parts",
        "type": "number",
        "required": false,
        "description": "Limit maximum number of parts each main route parts can be split into. Should be the same for a quote and swap. max: 100",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "protocols",
        "type": "string",
        "required": false,
        "description": "Specify liquidity sources e.g.: \\&protocols=WETH,CURVE,BALANCER,...,ZRX (by default - all used)",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "src\\_token",
        "type": "object",
        "required": false,
        "description": "dst\\_token",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Destination (rel) token info. A standard [1inchTokenInfo](/komodo-defi-framework/api/common_structures/orders/#1inch-token-info) object.",
        "type": "",
        "required": false,
        "description": "Optional. A list of standard [1inchProtocolInfo](/komodo-defi-framework/api/common_structures/orders/#1inch-protocol-info) objects, used as liquidity sources used to route trade.",
        "default_value": "list",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20-dev/1inch_v6_0_classic_swap_quote/index.mdx"
  },
  "1inch_v6_0_classic_swap_tokens": {
    "method_name": "1inch_v6_0_classic_swap_tokens",
    "version": "v2-dev",
    "parameters": [
      {
        "name": ":-----",
        "type": ":------:",
        "required": false,
        "description": "chain\\_id",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20-dev/1inch_v6_0_classic_swap_tokens/index.mdx"
  },
  "approve_token": {
    "method_name": "approve_token",
    "version": "v2-dev",
    "parameters": [
      {
        "name": "✓",
        "type": "Token ticker",
        "required": false,
        "description": "string",
        "default_value": "spender",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "Address of smart contract to approve for spending",
        "type": "",
        "required": false,
        "description": "✓",
        "default_value": "float",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20-dev/approve_token/index.mdx"
  },
  "get_token_allowance": {
    "method_name": "get_token_allowance",
    "version": "v2-dev",
    "parameters": [
      {
        "name": "✓",
        "type": "Token ticker",
        "required": false,
        "description": "string",
        "default_value": "spender",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20-dev/get_token_allowance/index.mdx"
  },
  "wc_delete_session": {
    "method_name": "wc_delete_session",
    "version": "v2-dev",
    "parameters": [
      {
        "name": ":-------------------",
        "type": ":------",
        "required": false,
        "description": ":--------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
        "default_value": ":-----:",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "topic",
        "type": "string",
        "required": true,
        "description": "An active session topic (or pairing topic) hex string.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "with\\_pairing\\_topic",
        "type": "boolean",
        "required": false,
        "description": "If `true`, allows using the `pairing_topic` hex string in the `topic` param to fetch session details. If `false`, expects `topic` param to be the session topic hex string.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "Structure",
        "type": "Type",
        "required": false,
        "description": "---------",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20-dev/wc_delete_session/index.mdx"
  },
  "wc_get_session": {
    "method_name": "wc_get_session",
    "version": "v2-dev",
    "parameters": [
      {
        "name": ":-------------------",
        "type": ":------",
        "required": false,
        "description": ":--------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
        "default_value": ":-----:",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "topic",
        "type": "string",
        "required": true,
        "description": "An active session topic (or pairing topic) hex string.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "with\\_pairing\\_topic",
        "type": "boolean",
        "required": false,
        "description": "If `true`, allows using the `pairing_topic` hex string in the `topic` param to fetch session details. If `false`, expects `topic` param to be the session topic hex string.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "Structure",
        "type": "Type",
        "required": false,
        "description": "---------",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20-dev/wc_get_session/index.mdx"
  },
  "wc_get_sessions": {
    "method_name": "wc_get_sessions",
    "version": "v2-dev",
    "parameters": [
      {
        "name": ":----",
        "type": ":------:",
        "required": false,
        "description": "*None*",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "Structure",
        "type": "Type",
        "required": false,
        "description": "---------",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20-dev/wc_get_sessions/index.mdx"
  },
  "wc_new_connection": {
    "method_name": "wc_new_connection",
    "version": "v2-dev",
    "parameters": [
      {
        "name": ":-----",
        "type": ":------:",
        "required": false,
        "description": "required\\_namespaces",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [
      {
        "name": "Structure",
        "type": "Type",
        "required": false,
        "description": "---------",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20-dev/wc_new_connection/index.mdx"
  },
  "wc_ping_session": {
    "method_name": "wc_ping_session",
    "version": "v2-dev",
    "parameters": [
      {
        "name": ":-------------------",
        "type": ":------",
        "required": false,
        "description": ":--------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
        "default_value": ":-----:",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "topic",
        "type": "string",
        "required": true,
        "description": "An active session topic (or pairing topic) hex string.",
        "default_value": null,
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      },
      {
        "name": "with\\_pairing\\_topic",
        "type": "boolean",
        "required": false,
        "description": "If `true`, allows using the `pairing_topic` hex string in the `topic` param to fetch session details. If `false`, expects `topic` param to be the session topic hex string.",
        "default_value": "false",
        "example": null,
        "location": "body",
        "enum_values": null,
        "enum_reference": null,
        "is_object": false,
        "is_array": false,
        "nested_params": null
      }
    ],
    "response_parameters": [],
    "error_types": [],
    "file_path": "/home/smk762/GITHUB/KP/komodo-docs-mdx/src/pages/komodo-defi-framework/api/v20-dev/wc_ping_session/index.mdx"
  }
}