{
  "scan_metadata": {
    "generated_at": "2025-06-17T03:06:33.565015",
    "scanner_version": "KDFTools JSON Extractor v1.0.0",
    "scanner_type": "JSON_METHODS",
    "total_versions": 2,
    "total_methods": 169,
    "includes_json_extraction_stats": true,
    "method_source": "derived_from_paths_file"
  },
  "repository_data": {
    "v1": {
      "branch": "json_extraction",
      "version": "v1",
      "source_type": "JSON_EXTRACTED",
      "methods": [
        "active_swaps",
        "all_swaps_uuids_by_filter",
        "ban_pubkey",
        "best_orders",
        "buy",
        "cancel_all_orders",
        "cancel_order",
        "coins_needed_for_kick_start",
        "convert_utxo_address",
        "convertaddress",
        "disable_coin",
        "electrum",
        "enable",
        "get_directly_connected_peers",
        "get_enabled_coins",
        "get_gossip_mesh",
        "get_gossip_peer_topics",
        "get_gossip_topic_peers",
        "get_my_peer_id",
        "get_relay_mesh",
        "get_trade_fee",
        "help",
        "import_swaps",
        "kmd_rewards_info",
        "list_banned_pubkeys",
        "max_taker_vol",
        "metrics",
        "min_trading_vol",
        "my_balance",
        "my_orders",
        "my_recent_swaps",
        "my_swap_status",
        "my_tx_history",
        "order_status",
        "orderbook",
        "orderbook_depth",
        "orders_history_by_filter",
        "recover_funds_of_swap",
        "sell",
        "send_raw_transaction",
        "set_required_confirmations",
        "set_requires_notarization",
        "setprice",
        "show_priv_key",
        "stop",
        "trade_preimage",
        "unban_pubkeys",
        "update_maker_order",
        "validateaddress",
        "version",
        "withdraw"
      ],
      "last_updated": "2025-06-17T03:06:33.565025",
      "extraction_patterns_used": [
        "CodeGroup component parsing",
        "JSON code block extraction",
        "Method name cleaning (escaped underscores)",
        "Example metadata extraction"
      ]
    },
    "v2": {
      "branch": "json_extraction",
      "version": "v2",
      "source_type": "JSON_EXTRACTED",
      "methods": [
        "add_node_to_version_stat",
        "change_mnemonic_password",
        "clear_nft_db",
        "enable_bch_with_tokens",
        "enable_erc20",
        "enable_eth_with_tokens",
        "enable_nft",
        "enable_tendermint_token",
        "enable_tendermint_with_assets",
        "experimental::staking::claim_rewards",
        "experimental::staking::delegate",
        "experimental::staking::query::delegations",
        "experimental::staking::query::ongoing_undelegations",
        "experimental::staking::query::validators",
        "experimental::staking::undelegate",
        "get_current_mtp",
        "get_eth_estimated_fee_per_gas",
        "get_locked_amount",
        "get_mnemonic",
        "get_nft_list",
        "get_nft_metadata",
        "get_nft_transfers",
        "get_public_key",
        "get_public_key_hash",
        "get_raw_transaction",
        "get_swap_transaction_fee_policy",
        "get_token_info",
        "get_wallet_names",
        "lightning::channels::close_channel",
        "lightning::channels::get_channel_details",
        "lightning::channels::get_claimable_balances",
        "lightning::channels::list_closed_channels_by_filter",
        "lightning::channels::list_open_channels_by_filter",
        "lightning::channels::open_channel",
        "lightning::channels::update_channel",
        "lightning::nodes::add_trusted_node",
        "lightning::nodes::connect_to_node",
        "lightning::nodes::list_trusted_nodes",
        "lightning::nodes::remove_trusted_node",
        "lightning::payments::generate_invoice",
        "lightning::payments::get_payment_details",
        "lightning::payments::list_payments_by_filter",
        "lightning::payments::send_payment",
        "max_maker_vol",
        "peer_connection_healthcheck",
        "recreate_swap_data",
        "refresh_nft_metadata",
        "remove_node_from_version_stat",
        "set_swap_transaction_fee_policy",
        "sign_message",
        "sign_raw_transaction",
        "start_simple_market_maker_bot",
        "start_version_stat_collection",
        "stop_simple_market_maker_bot",
        "stop_version_stat_collection",
        "stream::balance::enable",
        "stream::disable",
        "stream::fee_estimator::enable",
        "stream::heartbeat::enable",
        "stream::network::enable",
        "stream::order_status::enable",
        "stream::orderbook::enable",
        "stream::swap_status::enable",
        "stream::tx_history::enable",
        "task::account_balance::cancel",
        "task::account_balance::init",
        "task::account_balance::status",
        "task::create_new_account::cancel",
        "task::create_new_account::init",
        "task::create_new_account::status",
        "task::create_new_account::user_action",
        "task::enable_bch::cancel",
        "task::enable_bch::init",
        "task::enable_bch::status",
        "task::enable_bch::user_action",
        "task::enable_eth::cancel",
        "task::enable_eth::init",
        "task::enable_eth::status",
        "task::enable_eth::user_action",
        "task::enable_lightning::cancel",
        "task::enable_lightning::init",
        "task::enable_lightning::status",
        "task::enable_qtum::cancel",
        "task::enable_qtum::init",
        "task::enable_qtum::status",
        "task::enable_qtum::user_action",
        "task::enable_tendermint::cancel",
        "task::enable_tendermint::init",
        "task::enable_tendermint::status",
        "task::enable_tendermint::user_action",
        "task::enable_utxo::cancel",
        "task::enable_utxo::init",
        "task::enable_utxo::status",
        "task::enable_utxo::user_action",
        "task::enable_z_coin::cancel",
        "task::enable_z_coin::init",
        "task::enable_z_coin::status",
        "task::enable_z_coin::user_action",
        "task::get_new_address::cancel",
        "task::get_new_address::init",
        "task::get_new_address::status",
        "task::get_new_address::user_action",
        "task::init_trezor::cancel",
        "task::init_trezor::init",
        "task::init_trezor::status",
        "task::init_trezor::user_action",
        "task::scan_for_new_addresses::cancel",
        "task::scan_for_new_addresses::init",
        "task::scan_for_new_addresses::status",
        "task::withdraw::cancel",
        "task::withdraw::init",
        "task::withdraw::status",
        "task::withdraw::user_action",
        "update_nft",
        "update_version_stat_collection",
        "verify_message",
        "withdraw_nft",
        "z_coin_tx_history"
      ],
      "last_updated": "2025-06-17T03:06:33.565027",
      "extraction_patterns_used": [
        "CodeGroup component parsing",
        "JSON code block extraction",
        "Method name cleaning (escaped underscores)",
        "Example metadata extraction"
      ]
    }
  },
  "extraction_statistics": {
    "total_methods_processed": 209,
    "methods_with_examples": 177,
    "methods_without_examples": 9,
    "total_examples_found": 263,
    "total_examples_extracted": 263,
    "versions_processed": [
      "v1",
      "v2"
    ],
    "output_format": "Individual JSON files per example",
    "file_organization": "nested_by_method_and_example"
  },
  "data_source_info": {
    "method_lists_source": "derived_from_json_method_paths_file",
    "ensures_consistency": true,
    "eliminates_duplication": true,
    "paths_file_reference": "kdf_json_method_paths_20250617_030633.json"
  }
}