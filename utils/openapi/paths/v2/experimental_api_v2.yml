openapi: 3.0.0
info:
  title: Komodo DeFi Framework - Experimental API
  version: v2
  description: OpenAPI specification for the experimental methods.
paths:
  /experimental::staking:
    post:
      summary: 'Komodo DeFi Framework Method Overview: Staking Methods'
      description: An overview of the staking methods in the Komodo DeFi Framework
        API.
      operationId: experimental::staking
      tags:
      - experimental
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - experimental::staking
      responses:
        '200':
          description: Successful response for experimental::staking
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/experimental_staking_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /experimental::staking::query::ongoing_undelegations:
    post:
      summary: Ongoing Undelegations
      description: Method description for experimental::staking::query::ongoing_undelegations
      operationId: experimental::staking::query::ongoing_undelegations
      tags:
      - experimental
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - experimental::staking::query::ongoing_undelegations
      responses:
        '200':
          description: Successful response for experimental::staking::query::ongoing_undelegations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/experimental_staking_query_ongoing_undelegations_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /experimental::staking::delegate:
    post:
      summary: Add Delegation
      description: Method description for experimental::staking::delegate
      operationId: experimental::staking::delegate
      tags:
      - experimental
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - experimental::staking::delegate
      responses:
        '200':
          description: Successful response for experimental::staking::delegate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/experimental_staking_delegate_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /experimental::staking::query::delegations:
    post:
      summary: Delegations
      description: Method description for experimental::staking::query::delegations
      operationId: experimental::staking::query::delegations
      tags:
      - experimental
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - experimental::staking::query::delegations
      responses:
        '200':
          description: Successful response for experimental::staking::query::delegations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/experimental_staking_query_delegations_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /experimental::staking::undelegate:
    post:
      summary: Remove Delegation
      description: Method description for experimental::staking::undelegate
      operationId: experimental::staking::undelegate
      tags:
      - experimental
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - experimental::staking::undelegate
      responses:
        '200':
          description: Successful response for experimental::staking::undelegate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/experimental_staking_undelegate_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /experimental::staking::query::validators:
    post:
      summary: 'Staking: Query Validators'
      description: Method description for experimental::staking::query::validators
      operationId: experimental::staking::query::validators
      tags:
      - experimental
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - experimental::staking::query::validators
      responses:
        '200':
          description: Successful response for experimental::staking::query::validators
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/experimental_staking_query_validators_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /experimental::staking::claim_rewards:
    post:
      summary: Claim Staking Rewards
      description: Method description for experimental::staking::claim_rewards
      operationId: experimental::staking::claim_rewards
      tags:
      - experimental
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - userpass
              - method
              properties:
                userpass:
                  type: string
                  description: User password for authentication.
                  example: RPC_UserP@SSW0RD
                method:
                  type: string
                  description: Name of the method to be called.
                  enum:
                  - experimental::staking::claim_rewards
      responses:
        '200':
          description: Successful response for experimental::staking::claim_rewards
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/experimental_staking_claim_rewards_Response'
              example:
                mmrpc: '2.0'
                result: {}
                id: 0
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        error_path:
          type: string
        error_trace:
          type: string
        error_type:
          type: string
        error_data:
          type: object
